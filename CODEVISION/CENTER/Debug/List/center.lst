
AVRASM ver. 2.1.30  E:\University-working\Virtual Learning\99-1\Microprossecor Designing\PROJECT_9621010042\CODEVISION\CENTER\Debug\List\center.asm Tue Feb 09 01:06:11 2021

E:\University-working\Virtual Learning\99-1\Microprossecor Designing\PROJECT_9621010042\CODEVISION\CENTER\Debug\List\center.asm(1088): warning: Register r5 already defined by the .DEF directive
E:\University-working\Virtual Learning\99-1\Microprossecor Designing\PROJECT_9621010042\CODEVISION\CENTER\Debug\List\center.asm(1089): warning: Register r6 already defined by the .DEF directive
E:\University-working\Virtual Learning\99-1\Microprossecor Designing\PROJECT_9621010042\CODEVISION\CENTER\Debug\List\center.asm(1090): warning: Register r7 already defined by the .DEF directive
E:\University-working\Virtual Learning\99-1\Microprossecor Designing\PROJECT_9621010042\CODEVISION\CENTER\Debug\List\center.asm(1091): warning: Register r4 already defined by the .DEF directive
E:\University-working\Virtual Learning\99-1\Microprossecor Designing\PROJECT_9621010042\CODEVISION\CENTER\Debug\List\center.asm(1092): warning: Register r9 already defined by the .DEF directive
E:\University-working\Virtual Learning\99-1\Microprossecor Designing\PROJECT_9621010042\CODEVISION\CENTER\Debug\List\center.asm(1093): warning: Register r8 already defined by the .DEF directive
E:\University-working\Virtual Learning\99-1\Microprossecor Designing\PROJECT_9621010042\CODEVISION\CENTER\Debug\List\center.asm(1094): warning: Register r11 already defined by the .DEF directive
E:\University-working\Virtual Learning\99-1\Microprossecor Designing\PROJECT_9621010042\CODEVISION\CENTER\Debug\List\center.asm(1095): warning: Register r10 already defined by the .DEF directive
E:\University-working\Virtual Learning\99-1\Microprossecor Designing\PROJECT_9621010042\CODEVISION\CENTER\Debug\List\center.asm(1096): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _flag=R5
                 	.DEF _i=R6
                 	.DEF _i_msb=R7
                 	.DEF _tx_wr_index=R4
                 	.DEF _tx_rd_index=R9
                 	.DEF _tx_counter=R8
                 	.DEF _rx_wr_index=R11
                 	.DEF _rx_rd_index=R10
                 	.DEF _rx_counter=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 02b2 	JMP  __RESET
000002 940c 02df 	JMP  _ext_int0_isr
000004 940c 02e2 	JMP  _ext_int1_isr
000006 940c 02e5 	JMP  _ext_int2_isr
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0318 	JMP  _usart_rx_isr
00001c 940c 0000 	JMP  0x00
00001e 940c 02e6 	JMP  _usart_tx_isr
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _font5x7:
00002a 0705
00002b 6020
00002c 0000
00002d 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00002e 0000
00002f 5f00
000030 0000
000031 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
000032 0700
000033 1400
000034 147f
000035 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000036 2a24
000037 2a7f
000038 2312
000039 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
00003a 6264
00003b 4936
00003c 2255
00003d 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00003e 0305
00003f 0000
000040 1c00
000041 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
000042 0000
000043 2241
000044 001c
000045 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000046 2a1c
000047 0808
000048 3e08
000049 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
00004a 5000
00004b 0030
00004c 0800
00004d 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00004e 0808
00004f 3000
000050 0030
000051 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
000052 0810
000053 0204
000054 513e
000055 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000056 003e
000057 7f42
000058 0040
000059 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
00005a 4951
00005b 2146
00005c 4541
00005d 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00005e 1418
00005f 7f12
000060 2710
000061 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
000062 3945
000063 4a3c
000064 4949
000065 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000066 0971
000067 0305
000068 4936
000069 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
00006a 0636
00006b 4949
00006c 1e29
00006d 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00006e 0036
00006f 0000
000070 3656
000071 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
000072 0800
000073 2214
000074 1441
000075 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000076 1414
000077 2241
000078 0814
000079 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
00007a 5101
00007b 0609
00007c 4932
00007d 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00007e 7e3e
00007f 1111
000080 7e11
000081 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
000082 4949
000083 3e36
000084 4141
000085 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
000086 417f
000087 2241
000088 7f1c
000089 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
00008a 4149
00008b 097f
00008c 0109
00008d 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
00008e 4141
00008f 3251
000090 087f
000091 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
000092 007f
000093 7f41
000094 0041
000095 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
000096 3f41
000097 7f01
000098 1408
000099 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
00009a 407f
00009b 4040
00009c 7f40
00009d 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
00009e 7f02
00009f 047f
0000a0 1008
0000a1 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000a2 4141
0000a3 3e41
0000a4 097f
0000a5 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000a6 3e06
0000a7 5141
0000a8 5e21
0000a9 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000aa 2919
0000ab 4646
0000ac 4949
0000ad 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ae 0101
0000af 017f
0000b0 3f01
0000b1 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000b2 3f40
0000b3 201f
0000b4 2040
0000b5 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000b6 1820
0000b7 7f20
0000b8 1463
0000b9 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000ba 0363
0000bb 7804
0000bc 0304
0000bd 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000be 4549
0000bf 0043
0000c0 7f00
0000c1 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000c2 0402
0000c3 1008
0000c4 4120
0000c5 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000c6 0000
0000c7 0204
0000c8 0201
0000c9 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000ca 4040
0000cb 4040
0000cc 0100
0000cd 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ce 2000
0000cf 5454
0000d0 7854
0000d1 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000d2 4444
0000d3 3838
0000d4 4444
0000d5 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000d6 4438
0000d7 4844
0000d8 387f
0000d9 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000da 1854
0000db 7e08
0000dc 0109
0000dd 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000de 5414
0000df 3c54
0000e0 087f
0000e1 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000e2 0078
0000e3 7d44
0000e4 0040
0000e5 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
0000e6 3d44
0000e7 0000
0000e8 107f
0000e9 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
0000ea 4100
0000eb 407f
0000ec 7c00
0000ed 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
0000ee 7804
0000ef 087c
0000f0 0404
0000f1 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
0000f2 4444
0000f3 3844
0000f4 147c
0000f5 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
0000f6 0808
0000f7 1414
0000f8 7c18
0000f9 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
0000fa 0404
0000fb 4808
0000fc 5454
0000fd 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
0000fe 3f04
0000ff 4044
000100 3c20
000101 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
000102 7c20
000103 201c
000104 2040
000105 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000106 3040
000107 3c40
000108 2844
000109 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
00010a 0c44
00010b 5050
00010c 3c50
00010d 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00010e 4c54
00010f 0044
000110 3608
000111 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
000112 0000
000113 007f
000114 0000
000115 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000116 0008
000117 0102
000118 0402
000119 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
00011a 4141
00011b 7f41      	.DB  0x41,0x41,0x41,0x7F
                 _shift:
00011c fdfe
00011d f7fb      	.DB  0xFE,0xFD,0xFB,0xF7
                 _tbl10_G101:
00011e 2710
00011f 03e8
000120 0064
000121 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000122 0001      	.DB  0x1,0x0
                 _tbl16_G101:
000123 1000
000124 0100
000125 0010
000126 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 __glcd_mask:
000127 0100
000128 0703
000129 1f0f
00012a 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
E:\University-working\Virtual Learning\99-1\Microprossecor Designing\PROJECT_9621010042\CODEVISION\CENTER\Debug\List\center.asm(1198): warning: .cseg .db misalignment - padding zero byte
00012b 00ff      	.DB  0xFF
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
00012c 0000      	.DW  0x0000
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00012d 0000
00012e 0000      	.DB  0x0,0x0,0x0,0x0
00012f 0000
000130 0000      	.DB  0x0,0x0,0x0,0x0
000131 0000      	.DB  0x0,0x0
                 
                 _0x0:
000132 4920
000133 204e
000134 4854
000135 2045      	.DB  0x20,0x49,0x4E,0x20,0x54,0x48,0x45,0x20
000136 414e
000137 454d
000138 4f20
000139 2046      	.DB  0x4E,0x41,0x4D,0x45,0x20,0x4F,0x46,0x20
00013a 4f47
00013b 0044
00013c 2020
00013d 2020      	.DB  0x47,0x4F,0x44,0x0,0x20,0x20,0x20,0x20
00013e 2020
00013f 4557
000140 434c
000141 4d4f      	.DB  0x20,0x20,0x57,0x45,0x4C,0x43,0x4F,0x4D
000142 2145
000143 4500
000144 544e
000145 5245      	.DB  0x45,0x21,0x0,0x45,0x4E,0x54,0x45,0x52
000146 4e20
000147 4d55
000148 4542
000149 3a52      	.DB  0x20,0x4E,0x55,0x4D,0x42,0x45,0x52,0x3A
00014a 3100
00014b 202e
00014c 6853
00014d 776f      	.DB  0x0,0x31,0x2E,0x20,0x53,0x68,0x6F,0x77
00014e 2020
00014f 6150
000150 7474
000151 7265      	.DB  0x20,0x20,0x50,0x61,0x74,0x74,0x65,0x72
000152 006e
000153 2e32
000154 4520
000155 6964      	.DB  0x6E,0x0,0x32,0x2E,0x20,0x45,0x64,0x69
000156 2074
000157 5020
000158 7461
000159 6574      	.DB  0x74,0x20,0x20,0x50,0x61,0x74,0x74,0x65
00015a 6e72
00015b 3300
00015c 202e
00015d 6853      	.DB  0x72,0x6E,0x0,0x33,0x2E,0x20,0x53,0x68
00015e 776f
00015f 2020
000160 6554
000161 706d      	.DB  0x6F,0x77,0x20,0x20,0x54,0x65,0x6D,0x70
000162 6172
000163 7574
000164 6572
000165 3400      	.DB  0x72,0x61,0x74,0x75,0x72,0x65,0x0,0x34
000166 202e
000167 6241
000168 756f
000169 2074      	.DB  0x2E,0x20,0x41,0x62,0x6F,0x75,0x74,0x20
00016a 454d
00016b 0021
00016c 4554
00016d 504d      	.DB  0x4D,0x45,0x21,0x0,0x54,0x45,0x4D,0x50
00016e 4152
00016f 5554
000170 4552
000171 003a      	.DB  0x52,0x41,0x54,0x55,0x52,0x45,0x3A,0x0
000172 4b42
000173 5300
000174 414d
000175 5452      	.DB  0x42,0x4B,0x0,0x53,0x4D,0x41,0x52,0x54
000176 2020
000177 4c20
000178 4749
000179 5448      	.DB  0x20,0x20,0x20,0x4C,0x49,0x47,0x48,0x54
00017a 2020
00017b 4120
00017c 444e
00017d 5400      	.DB  0x20,0x20,0x20,0x41,0x4E,0x44,0x0,0x54
00017e 4d45
00017f 5250
000180 5441
000181 5255      	.DB  0x45,0x4D,0x50,0x52,0x41,0x54,0x55,0x52
000182 2045
000183 5020
000184 4f52
000185 454a      	.DB  0x45,0x20,0x20,0x50,0x52,0x4F,0x4A,0x45
000186 5443
000187 4d00
000188 484f
000189 4141      	.DB  0x43,0x54,0x0,0x4D,0x4F,0x48,0x41,0x41
00018a 414d
00018b 2044
00018c 414a
00018d 4156      	.DB  0x4D,0x41,0x44,0x20,0x4A,0x41,0x56,0x41
00018e 2044
00018f 4120
000190 4544
000191 004c      	.DB  0x44,0x20,0x20,0x41,0x44,0x45,0x4C,0x0
000192 3639
000193 3132
000194 3130
000195 3030      	.DB  0x39,0x36,0x32,0x31,0x30,0x31,0x30,0x30
000196 3234
000197 3c00
000198 003c
000199 3e3e      	.DB  0x34,0x32,0x0,0x3C,0x3C,0x0,0x3E,0x3E
00019a 4f00
00019b 004b
00019c 0031
00019d 0033      	.DB  0x0,0x4F,0x4B,0x0,0x31,0x0,0x33,0x0
00019e 0034
00019f 0035
0001a0 0036
0001a1 0037      	.DB  0x34,0x0,0x35,0x0,0x36,0x0,0x37,0x0
0001a2 0038
0001a3 6150
0001a4 7474
0001a5 7265      	.DB  0x38,0x0,0x50,0x61,0x74,0x74,0x65,0x72
0001a6 206e
0001a7 6425
0001a8 4120
0001a9 7070      	.DB  0x6E,0x20,0x25,0x64,0x20,0x41,0x70,0x70
0001aa 696c
0001ab 6465
0001ac 2120
0001ad 4500      	.DB  0x6C,0x69,0x65,0x64,0x20,0x21,0x0,0x45
0001ae 0044
0001af 2020
0001b0 2020
0001b1 2020      	.DB  0x44,0x0,0x20,0x20,0x20,0x20,0x20,0x20
0001b2 2020
0001b3 0020
0001b4 5250
0001b5 5345      	.DB  0x20,0x20,0x20,0x0,0x50,0x52,0x45,0x53
0001b6 2053
0001b7 4445
0001b8 5400
0001b9 204f      	.DB  0x53,0x20,0x45,0x44,0x0,0x54,0x4F,0x20
0001ba 4445
0001bb 5449
0001bc 5500
0001bd 4553      	.DB  0x45,0x44,0x49,0x54,0x0,0x55,0x53,0x45
0001be 4b20
0001bf 5945
0001c0 0053
0001c1 5653      	.DB  0x20,0x4B,0x45,0x59,0x53,0x0,0x53,0x56
0001c2 4200
0001c3 4f4c
0001c4 4b43
0001c5 5300      	.DB  0x0,0x42,0x4C,0x4F,0x43,0x4B,0x0,0x53
0001c6 5641
0001c7 4445
0001c8 2120
E:\University-working\Virtual Learning\99-1\Microprossecor Designing\PROJECT_9621010042\CODEVISION\CENTER\Debug\List\center.asm(1248): warning: .cseg .db misalignment - padding zero byte
0001c9 0000      	.DB  0x41,0x56,0x45,0x44,0x20,0x21,0x0
                 _0x2000060:
E:\University-working\Virtual Learning\99-1\Microprossecor Designing\PROJECT_9621010042\CODEVISION\CENTER\Debug\List\center.asm(1250): warning: .cseg .db misalignment - padding zero byte
0001ca 0001      	.DB  0x1
                 _0x2000000:
0001cb 4e2d
0001cc 4e41
0001cd 4900
0001ce 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\University-working\Virtual Learning\99-1\Microprossecor Designing\PROJECT_9621010042\CODEVISION\CENTER\Debug\List\center.asm(1253): warning: .cseg .db misalignment - padding zero byte
0001cf 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0001d0 0001      	.DW  0x01
0001d1 0002      	.DW  0x02
0001d2 0258      	.DW  __REG_BIT_VARS*2
                 
0001d3 000a      	.DW  0x0A
0001d4 0004      	.DW  0x04
0001d5 025a      	.DW  __REG_VARS*2
                 
0001d6 0014      	.DW  0x14
0001d7 0260      	.DW  _0x58
0001d8 0264      	.DW  _0x0*2
                 
0001d9 000f      	.DW  0x0F
0001da 0274      	.DW  _0x58+20
0001db 0278      	.DW  _0x0*2+20
                 
0001dc 000e      	.DW  0x0E
0001dd 0283      	.DW  _0x60
0001de 0287      	.DW  _0x0*2+35
                 
0001df 0011      	.DW  0x11
0001e0 0291      	.DW  _0x60+14
0001e1 0295      	.DW  _0x0*2+49
                 
0001e2 0011      	.DW  0x11
0001e3 02a2      	.DW  _0x60+31
0001e4 02a6      	.DW  _0x0*2+66
                 
0001e5 0014      	.DW  0x14
0001e6 02b3      	.DW  _0x60+48
0001e7 02b7      	.DW  _0x0*2+83
                 
0001e8 000d      	.DW  0x0D
0001e9 02c7      	.DW  _0x60+68
0001ea 02cb      	.DW  _0x0*2+103
                 
0001eb 000c      	.DW  0x0C
0001ec 02d4      	.DW  _0x86
0001ed 02d8      	.DW  _0x0*2+116
                 
0001ee 0003      	.DW  0x03
0001ef 02e0      	.DW  _0x86+12
0001f0 02e4      	.DW  _0x0*2+128
                 
0001f1 0014      	.DW  0x14
0001f2 02e3      	.DW  _0x8D
0001f3 02e7      	.DW  _0x0*2+131
                 
0001f4 0014      	.DW  0x14
0001f5 02f7      	.DW  _0x8D+20
0001f6 02fb      	.DW  _0x0*2+151
                 
0001f7 0015      	.DW  0x15
0001f8 030b      	.DW  _0x8D+40
0001f9 030f      	.DW  _0x0*2+171
                 
0001fa 000b      	.DW  0x0B
0001fb 0320      	.DW  _0x8D+61
0001fc 0324      	.DW  _0x0*2+192
                 
0001fd 0003      	.DW  0x03
0001fe 032b      	.DW  _0x8D+72
0001ff 02e4      	.DW  _0x0*2+128
                 
000200 0008      	.DW  0x08
000201 032e      	.DW  _0x94
000202 029e      	.DW  _0x0*2+58
                 
000203 0003      	.DW  0x03
000204 0336      	.DW  _0x94+8
000205 032f      	.DW  _0x0*2+203
                 
000206 0003      	.DW  0x03
000207 0339      	.DW  _0x94+11
000208 0332      	.DW  _0x0*2+206
                 
000209 0003      	.DW  0x03
00020a 033c      	.DW  _0x94+14
00020b 0335      	.DW  _0x0*2+209
                 
00020c 0003      	.DW  0x03
00020d 033f      	.DW  _0x94+17
00020e 02e4      	.DW  _0x0*2+128
                 
00020f 0002      	.DW  0x02
000210 0342      	.DW  _0x94+20
000211 0338      	.DW  _0x0*2+212
                 
000212 0002      	.DW  0x02
000213 0344      	.DW  _0x94+22
000214 032d      	.DW  _0x0*2+201
                 
000215 0002      	.DW  0x02
000216 0346      	.DW  _0x94+24
000217 033a      	.DW  _0x0*2+214
                 
000218 0002      	.DW  0x02
000219 0348      	.DW  _0x94+26
00021a 033c      	.DW  _0x0*2+216
                 
00021b 0002      	.DW  0x02
00021c 034a      	.DW  _0x94+28
00021d 033e      	.DW  _0x0*2+218
                 
00021e 0002      	.DW  0x02
00021f 034c      	.DW  _0x94+30
000220 0340      	.DW  _0x0*2+220
                 
000221 0002      	.DW  0x02
000222 034e      	.DW  _0x94+32
000223 0342      	.DW  _0x0*2+222
                 
000224 0002      	.DW  0x02
000225 0350      	.DW  _0x94+34
000226 0344      	.DW  _0x0*2+224
                 
000227 0008      	.DW  0x08
000228 0352      	.DW  _0xC6
000229 029e      	.DW  _0x0*2+58
                 
00022a 0003      	.DW  0x03
00022b 035a      	.DW  _0xC6+8
00022c 032f      	.DW  _0x0*2+203
                 
00022d 0003      	.DW  0x03
00022e 035d      	.DW  _0xC6+11
00022f 0332      	.DW  _0x0*2+206
                 
000230 0003      	.DW  0x03
000231 0360      	.DW  _0xC6+14
000232 035b      	.DW  _0x0*2+247
                 
000233 0003      	.DW  0x03
000234 0363      	.DW  _0xC6+17
000235 02e4      	.DW  _0x0*2+128
                 
000236 0002      	.DW  0x02
000237 0366      	.DW  _0xC6+20
000238 0338      	.DW  _0x0*2+212
                 
000239 0002      	.DW  0x02
00023a 0368      	.DW  _0xC6+22
00023b 032d      	.DW  _0x0*2+201
                 
00023c 0002      	.DW  0x02
00023d 036a      	.DW  _0xC6+24
00023e 033a      	.DW  _0x0*2+214
                 
00023f 0002      	.DW  0x02
000240 036c      	.DW  _0xC6+26
000241 033c      	.DW  _0x0*2+216
                 
000242 0002      	.DW  0x02
000243 036e      	.DW  _0xC6+28
000244 033e      	.DW  _0x0*2+218
                 
000245 0002      	.DW  0x02
000246 0370      	.DW  _0xC6+30
000247 0340      	.DW  _0x0*2+220
                 
000248 0002      	.DW  0x02
000249 0372      	.DW  _0xC6+32
00024a 0342      	.DW  _0x0*2+222
                 
00024b 0002      	.DW  0x02
00024c 0374      	.DW  _0xC6+34
00024d 0344      	.DW  _0x0*2+224
                 
00024e 000a      	.DW  0x0A
00024f 0376      	.DW  _0xE7
000250 035e      	.DW  _0x0*2+250
                 
000251 000a      	.DW  0x0A
000252 0380      	.DW  _0xE7+10
000253 035e      	.DW  _0x0*2+250
                 
000254 000a      	.DW  0x0A
000255 038a      	.DW  _0xE7+20
000256 035e      	.DW  _0x0*2+250
                 
000257 000a      	.DW  0x0A
000258 0394      	.DW  _0xE7+30
000259 035e      	.DW  _0x0*2+250
                 
00025a 0009      	.DW  0x09
00025b 039e      	.DW  _0xE7+40
00025c 0368      	.DW  _0x0*2+260
                 
00025d 0008      	.DW  0x08
00025e 03a7      	.DW  _0xE7+49
00025f 0371      	.DW  _0x0*2+269
                 
000260 000a      	.DW  0x0A
000261 03af      	.DW  _0xE7+57
000262 035e      	.DW  _0x0*2+250
                 
000263 000a      	.DW  0x0A
000264 03b9      	.DW  _0xE7+67
000265 035e      	.DW  _0x0*2+250
                 
000266 000a      	.DW  0x0A
000267 03c3      	.DW  _0xE7+77
000268 035e      	.DW  _0x0*2+250
                 
000269 000a      	.DW  0x0A
00026a 03cd      	.DW  _0xE7+87
00026b 035e      	.DW  _0x0*2+250
                 
00026c 0003      	.DW  0x03
00026d 03d7      	.DW  _0xE7+97
00026e 032f      	.DW  _0x0*2+203
                 
00026f 0003      	.DW  0x03
000270 03da      	.DW  _0xE7+100
000271 0332      	.DW  _0x0*2+206
                 
000272 000a      	.DW  0x0A
000273 03dd      	.DW  _0x119
000274 035e      	.DW  _0x0*2+250
                 
000275 000a      	.DW  0x0A
000276 03e7      	.DW  _0x119+10
000277 035e      	.DW  _0x0*2+250
                 
000278 000a      	.DW  0x0A
000279 03f1      	.DW  _0x119+20
00027a 035e      	.DW  _0x0*2+250
                 
00027b 000a      	.DW  0x0A
00027c 03fb      	.DW  _0x119+30
00027d 035e      	.DW  _0x0*2+250
                 
00027e 0009      	.DW  0x09
00027f 0405      	.DW  _0x119+40
000280 0379      	.DW  _0x0*2+277
                 
000281 0008      	.DW  0x08
000282 040e      	.DW  _0x119+49
000283 0371      	.DW  _0x0*2+269
                 
000284 0003      	.DW  0x03
000285 0416      	.DW  _0x119+57
000286 0382      	.DW  _0x0*2+286
                 
000287 000a      	.DW  0x0A
000288 0419      	.DW  _0x119+60
000289 035e      	.DW  _0x0*2+250
                 
00028a 000a      	.DW  0x0A
00028b 0423      	.DW  _0x119+70
00028c 035e      	.DW  _0x0*2+250
                 
00028d 000a      	.DW  0x0A
00028e 042d      	.DW  _0x119+80
00028f 035e      	.DW  _0x0*2+250
                 
000290 000a      	.DW  0x0A
000291 0437      	.DW  _0x119+90
000292 035e      	.DW  _0x0*2+250
                 
000293 0006      	.DW  0x06
000294 0441      	.DW  _0x119+100
000295 0385      	.DW  _0x0*2+289
                 
000296 0008      	.DW  0x08
000297 0447      	.DW  _0x119+106
000298 038b      	.DW  _0x0*2+295
                 
000299 000a      	.DW  0x0A
00029a 044f      	.DW  _0x119+114
00029b 035e      	.DW  _0x0*2+250
                 
00029c 000a      	.DW  0x0A
00029d 0459      	.DW  _0x119+124
00029e 035e      	.DW  _0x0*2+250
                 
00029f 000a      	.DW  0x0A
0002a0 0463      	.DW  _0x119+134
0002a1 035e      	.DW  _0x0*2+250
                 
0002a2 000a      	.DW  0x0A
0002a3 046d      	.DW  _0x119+144
0002a4 035e      	.DW  _0x0*2+250
                 
0002a5 0009      	.DW  0x09
0002a6 0477      	.DW  _0x119+154
0002a7 0368      	.DW  _0x0*2+260
                 
0002a8 0008      	.DW  0x08
0002a9 0480      	.DW  _0x119+163
0002aa 0371      	.DW  _0x0*2+269
                 
0002ab 0003      	.DW  0x03
0002ac 0488      	.DW  _0x119+171
0002ad 035b      	.DW  _0x0*2+247
                 
0002ae 0001      	.DW  0x01
0002af 04bf      	.DW  __seed_G100
0002b0 0394      	.DW  _0x2000060*2
                 
                 _0xFFFFFFFF:
0002b1 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0002b2 94f8      	CLI
0002b3 27ee      	CLR  R30
0002b4 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0002b5 e0f1      	LDI  R31,1
0002b6 bffb      	OUT  GICR,R31
0002b7 bfeb      	OUT  GICR,R30
0002b8 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
0002b9 e08d      	LDI  R24,(14-2)+1
0002ba e0a2      	LDI  R26,2
0002bb 27bb      	CLR  R27
                 __CLEAR_REG:
0002bc 93ed      	ST   X+,R30
0002bd 958a      	DEC  R24
0002be f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0002bf e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0002c0 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0002c1 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
0002c2 93ed      	ST   X+,R30
0002c3 9701      	SBIW R24,1
0002c4 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0002c5 eae0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0002c6 e0f3      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0002c7 9185      	LPM  R24,Z+
0002c8 9195      	LPM  R25,Z+
0002c9 9700      	SBIW R24,0
0002ca f061      	BREQ __GLOBAL_INI_END
0002cb 91a5      	LPM  R26,Z+
0002cc 91b5      	LPM  R27,Z+
0002cd 9005      	LPM  R0,Z+
0002ce 9015      	LPM  R1,Z+
0002cf 01bf      	MOVW R22,R30
0002d0 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0002d1 9005      	LPM  R0,Z+
0002d2 920d      	ST   X+,R0
0002d3 9701      	SBIW R24,1
0002d4 f7e1      	BRNE __GLOBAL_INI_LOOP
0002d5 01fb      	MOVW R30,R22
0002d6 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0002d7 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0002d8 bfed      	OUT  SPL,R30
0002d9 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0002da bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0002db e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0002dc e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0002dd 940c 0415 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*******************************************************
                 ;Author  :  Mohammad Javad Adel 9621010042
                 ;*******************************************************/
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <glcd.h>
                 ;#include <delay.h>
                 ;#include <font5x7.h>
                 ;
                 ;char recive[7],flag=0;
                 ;int i=0;
                 ;flash char shift[4]= { 0xFE , 0xFD , 0xFB , 0xF7} ;
                 ;eeprom char  center[16][8][2];
                 ;
                 ;int keypad(void);
                 ;void firstmain(void);
                 ;void showpattern(void);
                 ;void editpattern(void);
                 ;void showtemp(void);
                 ;void aboutme(void);
                 ;void tablepattern(void);
                 ;void savepattern(int x);
                 ;//void defaultpattern(void);
                 ;void showled(int d);
                 ;void clearround(int w);
                 ;void save2pattern(int j,int x);
                 ;void patternapply(int d);
                 ;void writeapply(int d,int w);
                 ;
                 ;interrupt [EXT_INT0] void ext_int0_isr(void)
                 ; 0000 0020 {
                 
                 	.CSEG
                 _ext_int0_isr:
                 ; .FSTART _ext_int0_isr
                 ; 0000 0021   #asm("cli")
0002df 94f8      	cli
                 ; 0000 0022 
                 ; 0000 0023 //    glcd_clear();
                 ; 0000 0024 //    glcd_rectround(5,5,118,54, 5);
                 ; 0000 0025 //    glcd_outtextxy(28,10, recive);
                 ; 0000 0026 //    delay_ms(125);
                 ; 0000 0027 //    glcd_clear();
                 ; 0000 0028      #asm("sei")
0002e0 9478      	sei
                 ; 0000 0029 
                 ; 0000 002A }
0002e1 9518      	RETI
                 ; .FEND
                 ;
                 ;interrupt [EXT_INT1] void ext_int1_isr(void)
                 ; 0000 002D {
                 _ext_int1_isr:
                 ; .FSTART _ext_int1_isr
                 ; 0000 002E  #asm("cli")
0002e2 94f8      	cli
                 ; 0000 002F 
                 ; 0000 0030 // glcd_clear();
                 ; 0000 0031 // glcd_outtextxy(28,30, recive);
                 ; 0000 0032 // delay_ms(125);
                 ; 0000 0033 // glcd_clear();
                 ; 0000 0034 
                 ; 0000 0035  #asm("sei")
0002e3 9478      	sei
                 ; 0000 0036 
                 ; 0000 0037 }
0002e4 9518      	RETI
                 ; .FEND
                 ;
                 ;interrupt [EXT_INT2] void ext_int2_isr(void)
                 ; 0000 003A {
                 _ext_int2_isr:
                 ; .FSTART _ext_int2_isr
                 ; 0000 003B // Place your code here
                 ; 0000 003C 
                 ; 0000 003D }
0002e5 9518      	RETI
                 ; .FEND
                 ;
                 ;#define DATA_REGISTER_EMPTY (1<<UDRE)
                 ;#define RX_COMPLETE (1<<RXC)
                 ;#define FRAMING_ERROR (1<<FE)
                 ;#define PARITY_ERROR (1<<UPE)
                 ;#define DATA_OVERRUN (1<<DOR)
                 ;#define TX_BUFFER_SIZE 8
                 ;char tx_buffer[TX_BUFFER_SIZE];
                 ;#if TX_BUFFER_SIZE <= 256
                 ;unsigned char tx_wr_index=0,tx_rd_index=0;
                 ;#else
                 ;unsigned int tx_wr_index=0,tx_rd_index=0;
                 ;#endif
                 ;#if TX_BUFFER_SIZE < 256
                 ;unsigned char tx_counter=0;
                 ;#else
                 ;unsigned int tx_counter=0;
                 ;#endif
                 ;
                 ;interrupt [USART_TXC] void usart_tx_isr(void)
                 ; 0000 0052 {
                 _usart_tx_isr:
                 ; .FSTART _usart_tx_isr
0002e6 93ea      	ST   -Y,R30
0002e7 93fa      	ST   -Y,R31
0002e8 b7ef      	IN   R30,SREG
0002e9 93ea      	ST   -Y,R30
                 ; 0000 0053 if (tx_counter)
0002ea 2088      	TST  R8
0002eb f061      	BREQ _0x3
                 ; 0000 0054    {
                 ; 0000 0055    --tx_counter;
0002ec 948a      	DEC  R8
                 ; 0000 0056    UDR=tx_buffer[tx_rd_index++];
0002ed 2de9      	MOV  R30,R9
0002ee 9493      	INC  R9
0002ef e0f0      	LDI  R31,0
0002f0 55e1      	SUBI R30,LOW(-_tx_buffer)
0002f1 4ffb      	SBCI R31,HIGH(-_tx_buffer)
0002f2 81e0      	LD   R30,Z
0002f3 b9ec      	OUT  0xC,R30
                 ; 0000 0057 #if TX_BUFFER_SIZE != 256
                 ; 0000 0058    if (tx_rd_index == TX_BUFFER_SIZE) tx_rd_index=0;
0002f4 e0e8      	LDI  R30,LOW(8)
0002f5 15e9      	CP   R30,R9
0002f6 f409      	BRNE _0x4
0002f7 2499      	CLR  R9
                 ; 0000 0059 #endif
                 ; 0000 005A    }
                 _0x4:
                 ; 0000 005B }
                 _0x3:
0002f8 91e9      	LD   R30,Y+
0002f9 bfef      	OUT  SREG,R30
0002fa 91f9      	LD   R31,Y+
0002fb 91e9      	LD   R30,Y+
0002fc 9518      	RETI
                 ; .FEND
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Write a character to the USART Transmitter buffer
                 ;#define _ALTERNATE_PUTCHAR_
                 ;#pragma used+
                 ;void putchar(char c)
                 ; 0000 0062 {
                 _putchar:
                 ; .FSTART _putchar
                 ; 0000 0063 while (tx_counter == TX_BUFFER_SIZE);
0002fd 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x5:
0002fe e0e8      	LDI  R30,LOW(8)
0002ff 15e8      	CP   R30,R8
000300 f3e9      	BREQ _0x5
                 ; 0000 0064 #asm("cli")
000301 94f8      	cli
                 ; 0000 0065 if (tx_counter || ((UCSRA & DATA_REGISTER_EMPTY)==0))
000302 2088      	TST  R8
000303 f411      	BRNE _0x9
000304 995d      	SBIC 0xB,5
000305 c00d      	RJMP _0x8
                 _0x9:
                 ; 0000 0066    {
                 ; 0000 0067    tx_buffer[tx_wr_index++]=c;
000306 2de4      	MOV  R30,R4
000307 9443      	INC  R4
000308 e0f0      	LDI  R31,0
000309 55e1      	SUBI R30,LOW(-_tx_buffer)
00030a 4ffb      	SBCI R31,HIGH(-_tx_buffer)
00030b 81a8      	LD   R26,Y
00030c 83a0      	STD  Z+0,R26
                 ; 0000 0068 #if TX_BUFFER_SIZE != 256
                 ; 0000 0069    if (tx_wr_index == TX_BUFFER_SIZE) tx_wr_index=0;
00030d e0e8      	LDI  R30,LOW(8)
00030e 15e4      	CP   R30,R4
00030f f409      	BRNE _0xB
000310 2444      	CLR  R4
                 ; 0000 006A #endif
                 ; 0000 006B    ++tx_counter;
                 _0xB:
000311 9483      	INC  R8
                 ; 0000 006C    }
                 ; 0000 006D else
000312 c002      	RJMP _0xC
                 _0x8:
                 ; 0000 006E    UDR=c;
000313 81e8      	LD   R30,Y
000314 b9ec      	OUT  0xC,R30
                 ; 0000 006F #asm("sei")
                 _0xC:
000315 9478      	sei
                 ; 0000 0070 }
000316 9621      	ADIW R28,1
000317 9508      	RET
                 ; .FEND
                 ;#pragma used-
                 ;#endif
                 ;
                 ;#define RX_BUFFER_SIZE 8
                 ;char rx_buffer[RX_BUFFER_SIZE];
                 ;#if RX_BUFFER_SIZE <= 256
                 ;unsigned char rx_wr_index=0,rx_rd_index=0;
                 ;#else
                 ;unsigned int rx_wr_index=0,rx_rd_index=0;
                 ;#endif
                 ;#if RX_BUFFER_SIZE < 256
                 ;unsigned char rx_counter=0;
                 ;#else
                 ;unsigned int rx_counter=0;
                 ;#endif
                 ;bit rx_buffer_overflow;
                 ;interrupt [USART_RXC] void usart_rx_isr(void)
                 ; 0000 0082 {
                 _usart_rx_isr:
                 ; .FSTART _usart_rx_isr
000318 920a      	ST   -Y,R0
000319 921a      	ST   -Y,R1
00031a 92fa      	ST   -Y,R15
00031b 936a      	ST   -Y,R22
00031c 937a      	ST   -Y,R23
00031d 938a      	ST   -Y,R24
00031e 939a      	ST   -Y,R25
00031f 93aa      	ST   -Y,R26
000320 93ba      	ST   -Y,R27
000321 93ea      	ST   -Y,R30
000322 93fa      	ST   -Y,R31
000323 b7ef      	IN   R30,SREG
000324 93ea      	ST   -Y,R30
                 ; 0000 0083 char test;
                 ; 0000 0084 char status,data;
                 ; 0000 0085 #asm("cli")
000325 940e 1773 	CALL __SAVELOCR4
                 ;	test -> R17
                 ;	status -> R16
                 ;	data -> R19
000327 94f8      	cli
                 ; 0000 0086 
                 ; 0000 0087 status=UCSRA;
000328 b10b      	IN   R16,11
                 ; 0000 0088 data=UDR;
000329 b13c      	IN   R19,12
                 ; 0000 0089 if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
00032a 2fe0      	MOV  R30,R16
00032b 71ec      	ANDI R30,LOW(0x1C)
00032c f489      	BRNE _0xD
                 ; 0000 008A    {
                 ; 0000 008B    rx_buffer[rx_wr_index++]=data;
00032d 2deb      	MOV  R30,R11
00032e 94b3      	INC  R11
00032f e0f0      	LDI  R31,0
000330 54e9      	SUBI R30,LOW(-_rx_buffer)
000331 4ffb      	SBCI R31,HIGH(-_rx_buffer)
000332 8330      	ST   Z,R19
                 ; 0000 008C #if RX_BUFFER_SIZE == 256
                 ; 0000 008D    // special case for receiver buffer size=256
                 ; 0000 008E    if (++rx_counter == 0) rx_buffer_overflow=1;
                 ; 0000 008F #else
                 ; 0000 0090    if (rx_wr_index == RX_BUFFER_SIZE) rx_wr_index=0;
000333 e0e8      	LDI  R30,LOW(8)
000334 15eb      	CP   R30,R11
000335 f409      	BRNE _0xE
000336 24bb      	CLR  R11
                 ; 0000 0091    if (++rx_counter == RX_BUFFER_SIZE)
                 _0xE:
000337 94d3      	INC  R13
000338 e0e8      	LDI  R30,LOW(8)
000339 15ed      	CP   R30,R13
00033a f419      	BRNE _0xF
                 ; 0000 0092       {
                 ; 0000 0093       rx_counter=0;
00033b 24dd      	CLR  R13
                 ; 0000 0094       rx_buffer_overflow=1;
00033c 9468      	SET
00033d f820      	BLD  R2,0
                 ; 0000 0095       }
                 ; 0000 0096 }
                 _0xF:
                 ; 0000 0097 #endif
                 ; 0000 0098  //zZ36.25 CXx
                 ; 0000 0099 test=getchar();
                 _0xD:
00033e d0c3      	RCALL _getchar
00033f 2f1e      	MOV  R17,R30
                 ; 0000 009A switch(i){
000340 01f3      	MOVW R30,R6
                 ; 0000 009B  case 0:
000341 9730      	SBIW R30,0
000342 f431      	BRNE _0x13
                 ; 0000 009C     if(test=='z'){flag=1;break;}
000343 371a      	CPI  R17,122
000344 f419      	BRNE _0x14
000345 e0e1      	LDI  R30,LOW(1)
000346 2e5e      	MOV  R5,R30
000347 c09e      	RJMP _0x12
                 ; 0000 009D  case 1:
                 _0x14:
000348 c004      	RJMP _0x15
                 _0x13:
000349 30e1      	CPI  R30,LOW(0x1)
00034a e0a0      	LDI  R26,HIGH(0x1)
00034b 07fa      	CPC  R31,R26
00034c f449      	BRNE _0x16
                 _0x15:
                 ; 0000 009E     if(test=='Z' && flag==1){break;}
00034d 351a      	CPI  R17,90
00034e f419      	BRNE _0x18
00034f e0e1      	LDI  R30,LOW(1)
000350 15e5      	CP   R30,R5
000351 f009      	BREQ _0x19
                 _0x18:
000352 c001      	RJMP _0x17
                 _0x19:
000353 c092      	RJMP _0x12
                 ; 0000 009F     else{flag=0;break;}
                 _0x17:
000354 2455      	CLR  R5
000355 c090      	RJMP _0x12
                 ; 0000 00A0  case 2:
                 _0x16:
000356 30e2      	CPI  R30,LOW(0x2)
000357 e0a0      	LDI  R26,HIGH(0x2)
000358 07fa      	CPC  R31,R26
000359 f479      	BRNE _0x1C
                 ; 0000 00A1     if(flag==1){
00035a e0e1      	LDI  R30,LOW(1)
00035b 15e5      	CP   R30,R5
00035c f449      	BRNE _0x1D
                 ; 0000 00A2     if(test >='1' && test <='6'){recive[0]=test;break;}
00035d 3311      	CPI  R17,49
00035e f010      	BRLO _0x1F
00035f 3317      	CPI  R17,55
000360 f008      	BRLO _0x20
                 _0x1F:
000361 c003      	RJMP _0x1E
                 _0x20:
000362 9310 04a8 	STS  _recive,R17
000364 c081      	RJMP _0x12
                 ; 0000 00A3     }
                 _0x1E:
                 ; 0000 00A4     else{flag=0;break;}
000365 c002      	RJMP _0x21
                 _0x1D:
000366 2455      	CLR  R5
000367 c07e      	RJMP _0x12
                 _0x21:
                 ; 0000 00A5  case 3:
000368 c004      	RJMP _0x22
                 _0x1C:
000369 30e3      	CPI  R30,LOW(0x3)
00036a e0a0      	LDI  R26,HIGH(0x3)
00036b 07fa      	CPC  R31,R26
00036c f479      	BRNE _0x23
                 _0x22:
                 ; 0000 00A6     if(flag==1){
00036d e0e1      	LDI  R30,LOW(1)
00036e 15e5      	CP   R30,R5
00036f f449      	BRNE _0x24
                 ; 0000 00A7     if(test >='0' && test <='9'){recive[1]=test;break;}
000370 3310      	CPI  R17,48
000371 f010      	BRLO _0x26
000372 331a      	CPI  R17,58
000373 f008      	BRLO _0x27
                 _0x26:
000374 c003      	RJMP _0x25
                 _0x27:
                +
000375 9310 04a9+STS _recive + ( 1 ) , R17
                 	__PUTBMRN _recive,1,17
000377 c06e      	RJMP _0x12
                 ; 0000 00A8     }
                 _0x25:
                 ; 0000 00A9     else{flag=0;break;}
000378 c002      	RJMP _0x28
                 _0x24:
000379 2455      	CLR  R5
00037a c06b      	RJMP _0x12
                 _0x28:
                 ; 0000 00AA  case 4:
00037b c004      	RJMP _0x29
                 _0x23:
00037c 30e4      	CPI  R30,LOW(0x4)
00037d e0a0      	LDI  R26,HIGH(0x4)
00037e 07fa      	CPC  R31,R26
00037f f449      	BRNE _0x2A
                 _0x29:
                 ; 0000 00AB     if(flag==1){
000380 e0e1      	LDI  R30,LOW(1)
000381 15e5      	CP   R30,R5
000382 f421      	BRNE _0x2B
                 ; 0000 00AC     recive[2]='.';
000383 e2ee      	LDI  R30,LOW(46)
                +
000384 93e0 04aa+STS _recive + ( 2 ) , R30
                 	__PUTB1MN _recive,2
                 ; 0000 00AD     break;
000386 c05f      	RJMP _0x12
                 ; 0000 00AE     }
                 ; 0000 00AF     else{flag=0;break;}
                 _0x2B:
000387 2455      	CLR  R5
000388 c05d      	RJMP _0x12
                 ; 0000 00B0  case 5:
                 _0x2A:
000389 30e5      	CPI  R30,LOW(0x5)
00038a e0a0      	LDI  R26,HIGH(0x5)
00038b 07fa      	CPC  R31,R26
00038c f479      	BRNE _0x2E
                 ; 0000 00B1     if(flag==1){
00038d e0e1      	LDI  R30,LOW(1)
00038e 15e5      	CP   R30,R5
00038f f449      	BRNE _0x2F
                 ; 0000 00B2     if(test >='0' && test <='9'){recive[3]=test;break;}
000390 3310      	CPI  R17,48
000391 f010      	BRLO _0x31
000392 331a      	CPI  R17,58
000393 f008      	BRLO _0x32
                 _0x31:
000394 c003      	RJMP _0x30
                 _0x32:
                +
000395 9310 04ab+STS _recive + ( 3 ) , R17
                 	__PUTBMRN _recive,3,17
000397 c04e      	RJMP _0x12
                 ; 0000 00B3     }
                 _0x30:
                 ; 0000 00B4     else{flag=0;break;}
000398 c002      	RJMP _0x33
                 _0x2F:
000399 2455      	CLR  R5
00039a c04b      	RJMP _0x12
                 _0x33:
                 ; 0000 00B5  case 6:
00039b c004      	RJMP _0x34
                 _0x2E:
00039c 30e6      	CPI  R30,LOW(0x6)
00039d e0a0      	LDI  R26,HIGH(0x6)
00039e 07fa      	CPC  R31,R26
00039f f479      	BRNE _0x35
                 _0x34:
                 ; 0000 00B6     if(flag==1){
0003a0 e0e1      	LDI  R30,LOW(1)
0003a1 15e5      	CP   R30,R5
0003a2 f449      	BRNE _0x36
                 ; 0000 00B7     if(test >='0' && test <='9'){recive[4]=test;break;}
0003a3 3310      	CPI  R17,48
0003a4 f010      	BRLO _0x38
0003a5 331a      	CPI  R17,58
0003a6 f008      	BRLO _0x39
                 _0x38:
0003a7 c003      	RJMP _0x37
                 _0x39:
                +
0003a8 9310 04ac+STS _recive + ( 4 ) , R17
                 	__PUTBMRN _recive,4,17
0003aa c03b      	RJMP _0x12
                 ; 0000 00B8     }
                 _0x37:
                 ; 0000 00B9     else{flag=0;break;}
0003ab c002      	RJMP _0x3A
                 _0x36:
0003ac 2455      	CLR  R5
0003ad c038      	RJMP _0x12
                 _0x3A:
                 ; 0000 00BA  case 7:
0003ae c004      	RJMP _0x3B
                 _0x35:
0003af 30e7      	CPI  R30,LOW(0x7)
0003b0 e0a0      	LDI  R26,HIGH(0x7)
0003b1 07fa      	CPC  R31,R26
0003b2 f459      	BRNE _0x3C
                 _0x3B:
                 ; 0000 00BB     if(test==' ' && flag==1){recive[5]=test;break;}
0003b3 3210      	CPI  R17,32
0003b4 f419      	BRNE _0x3E
0003b5 e0e1      	LDI  R30,LOW(1)
0003b6 15e5      	CP   R30,R5
0003b7 f009      	BREQ _0x3F
                 _0x3E:
0003b8 c003      	RJMP _0x3D
                 _0x3F:
                +
0003b9 9310 04ad+STS _recive + ( 5 ) , R17
                 	__PUTBMRN _recive,5,17
0003bb c02a      	RJMP _0x12
                 ; 0000 00BC     else{flag=0;break;}
                 _0x3D:
0003bc 2455      	CLR  R5
0003bd c028      	RJMP _0x12
                 ; 0000 00BD  case 8:
                 _0x3C:
0003be 30e8      	CPI  R30,LOW(0x8)
0003bf e0a0      	LDI  R26,HIGH(0x8)
0003c0 07fa      	CPC  R31,R26
0003c1 f459      	BRNE _0x42
                 ; 0000 00BE     if(test=='C' && flag==1){recive[6]=test;break;}
0003c2 3413      	CPI  R17,67
0003c3 f419      	BRNE _0x44
0003c4 e0e1      	LDI  R30,LOW(1)
0003c5 15e5      	CP   R30,R5
0003c6 f009      	BREQ _0x45
                 _0x44:
0003c7 c003      	RJMP _0x43
                 _0x45:
                +
0003c8 9310 04ae+STS _recive + ( 6 ) , R17
                 	__PUTBMRN _recive,6,17
0003ca c01b      	RJMP _0x12
                 ; 0000 00BF     else{flag=0;break;}
                 _0x43:
0003cb 2455      	CLR  R5
0003cc c019      	RJMP _0x12
                 ; 0000 00C0  case 9:
                 _0x42:
0003cd 30e9      	CPI  R30,LOW(0x9)
0003ce e0a0      	LDI  R26,HIGH(0x9)
0003cf 07fa      	CPC  R31,R26
0003d0 f449      	BRNE _0x48
                 ; 0000 00C1     if(test=='X' && flag==1){break;}
0003d1 3518      	CPI  R17,88
0003d2 f419      	BRNE _0x4A
0003d3 e0e1      	LDI  R30,LOW(1)
0003d4 15e5      	CP   R30,R5
0003d5 f009      	BREQ _0x4B
                 _0x4A:
0003d6 c001      	RJMP _0x49
                 _0x4B:
0003d7 c00e      	RJMP _0x12
                 ; 0000 00C2     else{flag=0;break;}
                 _0x49:
0003d8 2455      	CLR  R5
0003d9 c00c      	RJMP _0x12
                 ; 0000 00C3  case 10:
                 _0x48:
0003da 30ea      	CPI  R30,LOW(0xA)
0003db e0a0      	LDI  R26,HIGH(0xA)
0003dc 07fa      	CPC  R31,R26
0003dd f441      	BRNE _0x12
                 ; 0000 00C4     if(test=='x' && flag==1){break;}
0003de 3718      	CPI  R17,120
0003df f419      	BRNE _0x50
0003e0 e0e1      	LDI  R30,LOW(1)
0003e1 15e5      	CP   R30,R5
0003e2 f009      	BREQ _0x51
                 _0x50:
0003e3 c001      	RJMP _0x4F
                 _0x51:
0003e4 c001      	RJMP _0x12
                 ; 0000 00C5     else{flag=0;break;}
                 _0x4F:
0003e5 2455      	CLR  R5
                 ; 0000 00C6 }
                 _0x12:
                 ; 0000 00C7 i++;
0003e6 01f3      	MOVW R30,R6
0003e7 9631      	ADIW R30,1
0003e8 013f      	MOVW R6,R30
                 ; 0000 00C8 if(i>=10){i=0;}
0003e9 e0ea      	LDI  R30,LOW(10)
0003ea e0f0      	LDI  R31,HIGH(10)
0003eb 166e      	CP   R6,R30
0003ec 067f      	CPC  R7,R31
0003ed f014      	BRLT _0x53
0003ee 2466      	CLR  R6
0003ef 2477      	CLR  R7
                 ; 0000 00C9    #asm("sei")
                 _0x53:
0003f0 9478      	sei
                 ; 0000 00CA }
0003f1 940e 177a 	CALL __LOADLOCR4
0003f3 9624      	ADIW R28,4
0003f4 91e9      	LD   R30,Y+
0003f5 bfef      	OUT  SREG,R30
0003f6 91f9      	LD   R31,Y+
0003f7 91e9      	LD   R30,Y+
0003f8 91b9      	LD   R27,Y+
0003f9 91a9      	LD   R26,Y+
0003fa 9199      	LD   R25,Y+
0003fb 9189      	LD   R24,Y+
0003fc 9179      	LD   R23,Y+
0003fd 9169      	LD   R22,Y+
0003fe 90f9      	LD   R15,Y+
0003ff 9019      	LD   R1,Y+
000400 9009      	LD   R0,Y+
000401 9518      	RETI
                 ; .FEND
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;#define _ALTERNATE_GETCHAR_
                 ;#pragma used+
                 ;char getchar(void)
                 ; 0000 00CF {
                 _getchar:
                 ; .FSTART _getchar
                 ; 0000 00D0 char data;
                 ; 0000 00D1 while (rx_counter==0);
000402 931a      	ST   -Y,R17
                 ;	data -> R17
                 _0x54:
000403 20dd      	TST  R13
000404 f3f1      	BREQ _0x54
                 ; 0000 00D2 data=rx_buffer[rx_rd_index++];
000405 2dea      	MOV  R30,R10
000406 94a3      	INC  R10
000407 e0f0      	LDI  R31,0
000408 54e9      	SUBI R30,LOW(-_rx_buffer)
000409 4ffb      	SBCI R31,HIGH(-_rx_buffer)
00040a 8110      	LD   R17,Z
                 ; 0000 00D3 #if RX_BUFFER_SIZE != 256
                 ; 0000 00D4 if (rx_rd_index == RX_BUFFER_SIZE) rx_rd_index=0;
00040b e0e8      	LDI  R30,LOW(8)
00040c 15ea      	CP   R30,R10
00040d f409      	BRNE _0x57
00040e 24aa      	CLR  R10
                 ; 0000 00D5 #endif
                 ; 0000 00D6 #asm("cli")
                 _0x57:
00040f 94f8      	cli
                 ; 0000 00D7 --rx_counter;
000410 94da      	DEC  R13
                 ; 0000 00D8 #asm("sei")
000411 9478      	sei
                 ; 0000 00D9 return data;
000412 2fe1      	MOV  R30,R17
000413 9119      	LD   R17,Y+
000414 9508      	RET
                 ; 0000 00DA }
                 ; .FEND
                 ;#pragma used-
                 ;#endif
                 ;
                 ;void main(void)
                 ; 0000 00DF {
                 _main:
                 ; .FSTART _main
                 ; 0000 00E0 int j;
                 ; 0000 00E1 GLCDINIT_t glcd_init_data;
                 ; 0000 00E2 
                 ; 0000 00E3 //defaultpattern();
                 ; 0000 00E4 
                 ; 0000 00E5 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
000415 9726      	SBIW R28,6
                 ;	j -> R16,R17
                 ;	glcd_init_data -> Y+0
000416 e0ef      	LDI  R30,LOW(15)
000417 bbea      	OUT  0x1A,R30
                 ; 0000 00E6 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (1<<PORTA3) | (1<<PORTA2) | (1<<PORTA1) | (1<<PORTA0);
000418 bbeb      	OUT  0x1B,R30
                 ; 0000 00E7 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
000419 e0e0      	LDI  R30,LOW(0)
00041a bbe7      	OUT  0x17,R30
                 ; 0000 00E8 PORTB=(1<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (1<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
00041b e8e4      	LDI  R30,LOW(132)
00041c bbe8      	OUT  0x18,R30
                 ; 0000 00E9 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
00041d e0e0      	LDI  R30,LOW(0)
00041e bbe4      	OUT  0x14,R30
                 ; 0000 00EA PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
00041f bbe5      	OUT  0x15,R30
                 ; 0000 00EB DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000420 bbe1      	OUT  0x11,R30
                 ; 0000 00EC PORTD=(1<<PORTD7) | (1<<PORTD6) | (1<<PORTD5) | (1<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000421 efe0      	LDI  R30,LOW(240)
000422 bbe2      	OUT  0x12,R30
                 ; 0000 00ED TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
000423 e0e0      	LDI  R30,LOW(0)
000424 bfe3      	OUT  0x33,R30
                 ; 0000 00EE TCNT0=0x00;
000425 bfe2      	OUT  0x32,R30
                 ; 0000 00EF OCR0=0x00;
000426 bfec      	OUT  0x3C,R30
                 ; 0000 00F0 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000427 bdef      	OUT  0x2F,R30
                 ; 0000 00F1 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
000428 bdee      	OUT  0x2E,R30
                 ; 0000 00F2 TCNT1H=0x00;
000429 bded      	OUT  0x2D,R30
                 ; 0000 00F3 TCNT1L=0x00;
00042a bdec      	OUT  0x2C,R30
                 ; 0000 00F4 ICR1H=0x00;
00042b bde7      	OUT  0x27,R30
                 ; 0000 00F5 ICR1L=0x00;
00042c bde6      	OUT  0x26,R30
                 ; 0000 00F6 OCR1AH=0x00;
00042d bdeb      	OUT  0x2B,R30
                 ; 0000 00F7 OCR1AL=0x00;
00042e bdea      	OUT  0x2A,R30
                 ; 0000 00F8 OCR1BH=0x00;
00042f bde9      	OUT  0x29,R30
                 ; 0000 00F9 OCR1BL=0x00;
000430 bde8      	OUT  0x28,R30
                 ; 0000 00FA ASSR=0<<AS2;
000431 bde2      	OUT  0x22,R30
                 ; 0000 00FB TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
000432 bde5      	OUT  0x25,R30
                 ; 0000 00FC TCNT2=0x00;
000433 bde4      	OUT  0x24,R30
                 ; 0000 00FD OCR2=0x00;
000434 bde3      	OUT  0x23,R30
                 ; 0000 00FE TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
000435 bfe9      	OUT  0x39,R30
                 ; 0000 00FF 
                 ; 0000 0100 // External Interrupt(s) initialization
                 ; 0000 0101 // INT0: On
                 ; 0000 0102 // INT0 Mode: Falling Edge
                 ; 0000 0103 // INT1: On
                 ; 0000 0104 // INT1 Mode: Falling Edge
                 ; 0000 0105 // INT2: On
                 ; 0000 0106 // INT2 Mode: Falling Edge
                 ; 0000 0107 GICR|=(0<<INT1) | (0<<INT0) | (0<<INT2);
000436 b7eb      	IN   R30,0x3B
000437 bfeb      	OUT  0x3B,R30
                 ; 0000 0108 MCUCR=(1<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
000438 e0ea      	LDI  R30,LOW(10)
000439 bfe5      	OUT  0x35,R30
                 ; 0000 0109 MCUCSR=(0<<ISC2);
00043a e0e0      	LDI  R30,LOW(0)
00043b bfe4      	OUT  0x34,R30
                 ; 0000 010A GIFR=(1<<INTF1) | (1<<INTF0) | (1<<INTF2);
00043c eee0      	LDI  R30,LOW(224)
00043d bfea      	OUT  0x3A,R30
                 ; 0000 010B 
                 ; 0000 010C // USART initialization
                 ; 0000 010D // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 010E // USART Receiver: On
                 ; 0000 010F // USART Transmitter: On
                 ; 0000 0110 // USART Mode: Asynchronous
                 ; 0000 0111 // USART Baud Rate: 9600
                 ; 0000 0112 UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
00043e e0e0      	LDI  R30,LOW(0)
00043f b9eb      	OUT  0xB,R30
                 ; 0000 0113 UCSRB=(1<<RXCIE) | (1<<TXCIE) | (0<<UDRIE) | (1<<RXEN) | (1<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
000440 ede8      	LDI  R30,LOW(216)
000441 b9ea      	OUT  0xA,R30
                 ; 0000 0114 UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
000442 e8e6      	LDI  R30,LOW(134)
000443 bde0      	OUT  0x20,R30
                 ; 0000 0115 UBRRH=0x00;
000444 e0e0      	LDI  R30,LOW(0)
000445 bde0      	OUT  0x20,R30
                 ; 0000 0116 UBRRL=0x33;
000446 e3e3      	LDI  R30,LOW(51)
000447 b9e9      	OUT  0x9,R30
                 ; 0000 0117 
                 ; 0000 0118 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
000448 e8e0      	LDI  R30,LOW(128)
000449 b9e8      	OUT  0x8,R30
                 ; 0000 0119 SFIOR=(0<<ACME);
00044a e0e0      	LDI  R30,LOW(0)
00044b bfe0      	OUT  0x30,R30
                 ; 0000 011A ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
00044c b9e6      	OUT  0x6,R30
                 ; 0000 011B SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
00044d b9ed      	OUT  0xD,R30
                 ; 0000 011C TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
00044e bfe6      	OUT  0x36,R30
                 ; 0000 011D 
                 ; 0000 011E // Graphic Display Controller initialization
                 ; 0000 011F // The KS0108 connections are specified in the
                 ; 0000 0120 // Project|Configure|C Compiler|Libraries|Graphic Display menu:
                 ; 0000 0121 // DB0 - PORTC Bit 0
                 ; 0000 0122 // DB1 - PORTC Bit 1
                 ; 0000 0123 // DB2 - PORTC Bit 2
                 ; 0000 0124 // DB3 - PORTC Bit 3
                 ; 0000 0125 // DB4 - PORTC Bit 4
                 ; 0000 0126 // DB5 - PORTC Bit 5
                 ; 0000 0127 // DB6 - PORTC Bit 6
                 ; 0000 0128 // DB7 - PORTC Bit 7
                 ; 0000 0129 // E - PORTB Bit 4
                 ; 0000 012A // RD /WR - PORTB Bit 3
                 ; 0000 012B // RS - PORTB Bit 1
                 ; 0000 012C // /RST - PORTB Bit 0
                 ; 0000 012D // CS1 - PORTB Bit 5
                 ; 0000 012E // CS2 - PORTB Bit 6
                 ; 0000 012F glcd_init_data.font=font5x7;
00044f e5e4      	LDI  R30,LOW(_font5x7*2)
000450 e0f0      	LDI  R31,HIGH(_font5x7*2)
000451 83e8      	ST   Y,R30
000452 83f9      	STD  Y+1,R31
                 ; 0000 0130 glcd_init_data.readxmem=NULL;
000453 e0e0      	LDI  R30,LOW(0)
000454 83ea      	STD  Y+2,R30
000455 83eb      	STD  Y+2+1,R30
                 ; 0000 0131 glcd_init_data.writexmem=NULL;
000456 83ec      	STD  Y+4,R30
000457 83ed      	STD  Y+4+1,R30
                 ; 0000 0132 glcd_init(&glcd_init_data);
000458 01de      	MOVW R26,R28
000459 940e 0bdb 	CALL _glcd_init
                 ; 0000 0133 
                 ; 0000 0134 glcd_clear();
00045b 940e 0c40 	CALL _glcd_clear
                 ; 0000 0135 glcd_rectround(2,2,124,60, 5);
00045d e0e2      	LDI  R30,LOW(2)
00045e 93ea      	ST   -Y,R30
00045f 93ea      	ST   -Y,R30
000460 e7ec      	LDI  R30,LOW(124)
000461 93ea      	ST   -Y,R30
000462 e3ec      	LDI  R30,LOW(60)
000463 940e 1485 	CALL SUBOPT_0x0
                 ; 0000 0136 glcd_outtextxy(5,15, " IN THE NAME OF GOD");
000465 e0e5      	LDI  R30,LOW(5)
000466 93ea      	ST   -Y,R30
000467 e0ef      	LDI  R30,LOW(15)
000468 93ea      	ST   -Y,R30
                +
000469 e6a0     +LDI R26 , LOW ( _0x58 + ( 0 ) )
00046a e0b2     +LDI R27 , HIGH ( _0x58 + ( 0 ) )
                 	__POINTW2MN _0x58,0
00046b 940e 1489 	CALL SUBOPT_0x1
                 ; 0000 0137 glcd_outtextxy(5,25,"      WELCOME!");
00046d e1e9      	LDI  R30,LOW(25)
00046e 93ea      	ST   -Y,R30
                +
00046f e7a4     +LDI R26 , LOW ( _0x58 + ( 20 ) )
000470 e0b2     +LDI R27 , HIGH ( _0x58 + ( 20 ) )
                 	__POINTW2MN _0x58,20
000471 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0138 for(j=0;j<10;j++) {
                +
000473 e000     +LDI R16 , LOW ( 0 )
000474 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x5A:
                +
000475 300a     +CPI R16 , LOW ( 10 )
000476 e0e0     +LDI R30 , HIGH ( 10 )
000477 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
000478 f4ac      	BRGE _0x5B
                 ; 0000 0139    delay_ms(10);
000479 e0aa      	LDI  R26,LOW(10)
00047a e0b0      	LDI  R27,0
00047b 940e 16c8 	CALL _delay_ms
                 ; 0000 013A    glcd_bar(10+10*j, 40, 20+10*j, 50);
00047d e0aa      	LDI  R26,LOW(10)
00047e 020a      	MULS R16,R26
00047f 01f0      	MOVW R30,R0
000480 01df      	MOVW R26,R30
000481 5fe6      	SUBI R30,-LOW(10)
000482 93ea      	ST   -Y,R30
000483 e2e8      	LDI  R30,LOW(40)
000484 93ea      	ST   -Y,R30
000485 01fd      	MOVW R30,R26
000486 5eec      	SUBI R30,-LOW(20)
000487 93ea      	ST   -Y,R30
000488 e3a2      	LDI  R26,LOW(50)
000489 940e 13d7 	CALL _glcd_bar
                 ; 0000 013B }
                +
00048b 5f0f     +SUBI R16 , LOW ( - 1 )
00048c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00048d cfe7      	RJMP _0x5A
                 _0x5B:
                 ; 0000 013C glcd_clear();
00048e 940e 0c40 	CALL _glcd_clear
                 ; 0000 013D #asm("sei")
000490 9478      	sei
                 ; 0000 013E while (1)
                 _0x5C:
                 ; 0000 013F       {
                 ; 0000 0140             firstmain();
000491 d002      	RCALL _firstmain
                 ; 0000 0141             //glcd_clear();
                 ; 0000 0142       }
000492 cffe      	RJMP _0x5C
                 ; 0000 0143 }
                 _0x5F:
000493 cfff      	RJMP _0x5F
                 ; .FEND
                 
                 	.DSEG
                 _0x58:
000260           	.BYTE 0x23
                 ;
                 ;void firstmain(void){
                 ; 0000 0145 void firstmain(void){
                 
                 	.CSEG
                 _firstmain:
                 ; .FSTART _firstmain
                 ; 0000 0146 int j=0;
                 ; 0000 0147   glcd_rectround(22,1,85,16, 2);
000494 940e 148e 	CALL SUBOPT_0x2
                 ;	j -> R16,R17
000496 e1e6      	LDI  R30,LOW(22)
000497 93ea      	ST   -Y,R30
000498 e0e1      	LDI  R30,LOW(1)
000499 93ea      	ST   -Y,R30
00049a e5e5      	LDI  R30,LOW(85)
00049b 93ea      	ST   -Y,R30
00049c e1e0      	LDI  R30,LOW(16)
00049d 940e 1493 	CALL SUBOPT_0x3
                 ; 0000 0148   glcd_outtextxy(24,5,"ENTER NUMBER:");
00049f e1e8      	LDI  R30,LOW(24)
0004a0 93ea      	ST   -Y,R30
0004a1 e0e5      	LDI  R30,LOW(5)
0004a2 93ea      	ST   -Y,R30
                +
0004a3 e8a3     +LDI R26 , LOW ( _0x60 + ( 0 ) )
0004a4 e0b2     +LDI R27 , HIGH ( _0x60 + ( 0 ) )
                 	__POINTW2MN _0x60,0
0004a5 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0149   glcd_rectround(2,20,124,55, 2);
0004a7 e0e2      	LDI  R30,LOW(2)
0004a8 93ea      	ST   -Y,R30
0004a9 e1e4      	LDI  R30,LOW(20)
0004aa 93ea      	ST   -Y,R30
0004ab e7ec      	LDI  R30,LOW(124)
0004ac 93ea      	ST   -Y,R30
0004ad e3e7      	LDI  R30,LOW(55)
0004ae 940e 1493 	CALL SUBOPT_0x3
                 ; 0000 014A   glcd_outtextxy(5,25,"1. Show  Pattern");
0004b0 e0e5      	LDI  R30,LOW(5)
0004b1 93ea      	ST   -Y,R30
0004b2 e1e9      	LDI  R30,LOW(25)
0004b3 93ea      	ST   -Y,R30
                +
0004b4 e9a1     +LDI R26 , LOW ( _0x60 + ( 14 ) )
0004b5 e0b2     +LDI R27 , HIGH ( _0x60 + ( 14 ) )
                 	__POINTW2MN _0x60,14
0004b6 940e 1489 	CALL SUBOPT_0x1
                 ; 0000 014B   glcd_outtextxy(5,35,"2. Edit  Pattern");
0004b8 e2e3      	LDI  R30,LOW(35)
0004b9 93ea      	ST   -Y,R30
                +
0004ba eaa2     +LDI R26 , LOW ( _0x60 + ( 31 ) )
0004bb e0b2     +LDI R27 , HIGH ( _0x60 + ( 31 ) )
                 	__POINTW2MN _0x60,31
0004bc 940e 1489 	CALL SUBOPT_0x1
                 ; 0000 014C   glcd_outtextxy(5,45,"3. Show  Temprature");
0004be e2ed      	LDI  R30,LOW(45)
0004bf 93ea      	ST   -Y,R30
                +
0004c0 eba3     +LDI R26 , LOW ( _0x60 + ( 48 ) )
0004c1 e0b2     +LDI R27 , HIGH ( _0x60 + ( 48 ) )
                 	__POINTW2MN _0x60,48
0004c2 940e 1489 	CALL SUBOPT_0x1
                 ; 0000 014D   glcd_outtextxy(5,55,"4. About ME!");
0004c4 e3e7      	LDI  R30,LOW(55)
0004c5 93ea      	ST   -Y,R30
                +
0004c6 eca7     +LDI R26 , LOW ( _0x60 + ( 68 ) )
0004c7 e0b2     +LDI R27 , HIGH ( _0x60 + ( 68 ) )
                 	__POINTW2MN _0x60,68
0004c8 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 014E   j=keypad();
0004ca d01d      	RCALL _keypad
0004cb 018f      	MOVW R16,R30
                 ; 0000 014F   switch(j){
                 ; 0000 0150     case 0:
0004cc 9730      	SBIW R30,0
0004cd f411      	BRNE _0x64
                 ; 0000 0151         showpattern();
0004ce d0bb      	RCALL _showpattern
                 ; 0000 0152         break;
0004cf c017      	RJMP _0x63
                 ; 0000 0153     case 1:
                 _0x64:
0004d0 30e1      	CPI  R30,LOW(0x1)
0004d1 e0a0      	LDI  R26,HIGH(0x1)
0004d2 07fa      	CPC  R31,R26
0004d3 f421      	BRNE _0x65
                 ; 0000 0154         glcd_clear();
0004d4 940e 0c40 	CALL _glcd_clear
                 ; 0000 0155         editpattern();
0004d6 d1eb      	RCALL _editpattern
                 ; 0000 0156         break;
0004d7 c00f      	RJMP _0x63
                 ; 0000 0157     case 2:
                 _0x65:
0004d8 30e2      	CPI  R30,LOW(0x2)
0004d9 e0a0      	LDI  R26,HIGH(0x2)
0004da 07fa      	CPC  R31,R26
0004db f421      	BRNE _0x66
                 ; 0000 0158         glcd_clear();
0004dc 940e 0c40 	CALL _glcd_clear
                 ; 0000 0159         showtemp();
0004de d055      	RCALL _showtemp
                 ; 0000 015A         break;
0004df c007      	RJMP _0x63
                 ; 0000 015B     case 3:
                 _0x66:
0004e0 30e3      	CPI  R30,LOW(0x3)
0004e1 e0a0      	LDI  R26,HIGH(0x3)
0004e2 07fa      	CPC  R31,R26
0004e3 f419      	BRNE _0x63
                 ; 0000 015C         glcd_clear();
0004e4 940e 0c40 	CALL _glcd_clear
                 ; 0000 015D         aboutme();
0004e6 d073      	RCALL _aboutme
                 ; 0000 015E   }
                 _0x63:
                 ; 0000 015F }
0004e7 c270      	RJMP _0x2120010
                 ; .FEND
                 
                 	.DSEG
                 _0x60:
000283           	.BYTE 0x51
                 ;
                 ;int keypad(void){
                 ; 0000 0161 int keypad(void){
                 
                 	.CSEG
                 _keypad:
                 ; .FSTART _keypad
                 ; 0000 0162 int i=0,column=0;
                 ; 0000 0163 while(1){
0004e8 940e 1773 	CALL __SAVELOCR4
                 ;	i -> R16,R17
                 ;	column -> R18,R19
0004ea 940e 1497 	CALL SUBOPT_0x4
                 _0x68:
                 ; 0000 0164             for  (i=0;i<4;i++){
                +
0004ec e000     +LDI R16 , LOW ( 0 )
0004ed e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x6C:
                +
0004ee 3004     +CPI R16 , LOW ( 4 )
0004ef e0e0     +LDI R30 , HIGH ( 4 )
0004f0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
0004f1 f57c      	BRGE _0x6D
                 ; 0000 0165             PORTA = shift[i] ;
0004f2 01f8      	MOVW R30,R16
0004f3 5ce8      	SUBI R30,LOW(-_shift*2)
0004f4 4ffd      	SBCI R31,HIGH(-_shift*2)
0004f5 9004      	LPM  R0,Z
0004f6 ba0b      	OUT  0x1B,R0
                 ; 0000 0166             delay_us(10);
                +
0004f7 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0004f8 958a     +DEC R24
0004f9 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 0167             if(PINA.4==0){column=0;while(PINA.4==0){}return i*4 + column;}
0004fa 99cc      	SBIC 0x19,4
0004fb c007      	RJMP _0x6E
                +
0004fc e020     +LDI R18 , LOW ( 0 )
0004fd e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x6F:
0004fe 9bcc      	SBIS 0x19,4
0004ff cffe      	RJMP _0x6F
000500 940e 149c 	CALL SUBOPT_0x5
000502 c02d      	RJMP _0x2120013
                 ; 0000 0168             if(PINA.5==0){column=1;while(PINA.5==0){}return i*4 + column;}
                 _0x6E:
000503 99cd      	SBIC 0x19,5
000504 c007      	RJMP _0x72
                +
000505 e021     +LDI R18 , LOW ( 1 )
000506 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x73:
000507 9bcd      	SBIS 0x19,5
000508 cffe      	RJMP _0x73
000509 940e 149c 	CALL SUBOPT_0x5
00050b c024      	RJMP _0x2120013
                 ; 0000 0169             if(PINA.6==0){column=2;while(PINA.6==0){}return i*4 + column;}
                 _0x72:
00050c 99ce      	SBIC 0x19,6
00050d c007      	RJMP _0x76
                +
00050e e022     +LDI R18 , LOW ( 2 )
00050f e030     +LDI R19 , HIGH ( 2 )
                 	__GETWRN 18,19,2
                 _0x77:
000510 9bce      	SBIS 0x19,6
000511 cffe      	RJMP _0x77
000512 940e 149c 	CALL SUBOPT_0x5
000514 c01b      	RJMP _0x2120013
                 ; 0000 016A             if(PINA.7==0){column=3;while(PINA.7==0){}return i*4 + column;}
                 _0x76:
000515 99cf      	SBIC 0x19,7
000516 c007      	RJMP _0x7A
                +
000517 e023     +LDI R18 , LOW ( 3 )
000518 e030     +LDI R19 , HIGH ( 3 )
                 	__GETWRN 18,19,3
                 _0x7B:
000519 9bcf      	SBIS 0x19,7
00051a cffe      	RJMP _0x7B
00051b 940e 149c 	CALL SUBOPT_0x5
00051d c012      	RJMP _0x2120013
                 ; 0000 016B             }
                 _0x7A:
                +
00051e 5f0f     +SUBI R16 , LOW ( - 1 )
00051f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000520 cfcd      	RJMP _0x6C
                 _0x6D:
                 ; 0000 016C         if(PINB.2==0){while(PINB.2==0);return 16;}
000521 99b2      	SBIC 0x16,2
000522 c005      	RJMP _0x7E
                 _0x7F:
000523 9bb2      	SBIS 0x16,2
000524 cffe      	RJMP _0x7F
000525 e1e0      	LDI  R30,LOW(16)
000526 e0f0      	LDI  R31,HIGH(16)
000527 c008      	RJMP _0x2120013
                 ; 0000 016D         if(PINB.7==0){while(PINB.7==0);return 17;}
                 _0x7E:
000528 99b7      	SBIC 0x16,7
000529 c005      	RJMP _0x82
                 _0x83:
00052a 9bb7      	SBIS 0x16,7
00052b cffe      	RJMP _0x83
00052c e1e1      	LDI  R30,LOW(17)
00052d e0f0      	LDI  R31,HIGH(17)
00052e c001      	RJMP _0x2120013
                 ; 0000 016E         }
                 _0x82:
00052f cfbc      	RJMP _0x68
                 ; 0000 016F }
                 _0x2120013:
000530 940e 177a 	CALL __LOADLOCR4
000532 9624      	ADIW R28,4
000533 9508      	RET
                 ; .FEND
                 ;
                 ;void showtemp(void){
                 ; 0000 0171 void showtemp(void){
                 _showtemp:
                 ; .FSTART _showtemp
                 ; 0000 0172 glcd_rectround(1,1,126,62, 5);
000534 940e 14a2 	CALL SUBOPT_0x6
                 ; 0000 0173 glcd_outtextxy(30,10,"TEMPRATURE:");
000536 e1ee      	LDI  R30,LOW(30)
000537 93ea      	ST   -Y,R30
000538 e0ea      	LDI  R30,LOW(10)
000539 93ea      	ST   -Y,R30
                +
00053a eda4     +LDI R26 , LOW ( _0x86 + ( 0 ) )
00053b e0b2     +LDI R27 , HIGH ( _0x86 + ( 0 ) )
                 	__POINTW2MN _0x86,0
00053c 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0174 glcd_outtextxy(43,20,recive);
00053e e2eb      	LDI  R30,LOW(43)
00053f 93ea      	ST   -Y,R30
000540 e1e4      	LDI  R30,LOW(20)
000541 93ea      	ST   -Y,R30
000542 eaa8      	LDI  R26,LOW(_recive)
000543 e0b4      	LDI  R27,HIGH(_recive)
000544 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0175 glcd_circle(62,45,15);
000546 e3ee      	LDI  R30,LOW(62)
000547 93ea      	ST   -Y,R30
000548 e2ed      	LDI  R30,LOW(45)
000549 93ea      	ST   -Y,R30
00054a e0af      	LDI  R26,LOW(15)
00054b 940e 138d 	CALL _glcd_circle
                 ; 0000 0176 glcd_outtextxy(57,42,"BK");
00054d e3e9      	LDI  R30,LOW(57)
00054e 93ea      	ST   -Y,R30
00054f e2ea      	LDI  R30,LOW(42)
000550 93ea      	ST   -Y,R30
                +
000551 eea0     +LDI R26 , LOW ( _0x86 + ( 12 ) )
000552 e0b2     +LDI R27 , HIGH ( _0x86 + ( 12 ) )
                 	__POINTW2MN _0x86,12
000553 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0177 while(PINB.7==0);
                 _0x87:
000555 9bb7      	SBIS 0x16,7
000556 cffe      	RJMP _0x87
                 ; 0000 0178 while(PINB.7==1);
                 _0x8A:
000557 99b7      	SBIC 0x16,7
000558 cffe      	RJMP _0x8A
                 ; 0000 0179 glcd_clear();
000559 c02d      	RJMP _0x2120012
                 ; 0000 017A }
                 ; .FEND
                 
                 	.DSEG
                 _0x86:
0002d4           	.BYTE 0xF
                 ;
                 ;void aboutme(void){
                 ; 0000 017C void aboutme(void){
                 
                 	.CSEG
                 _aboutme:
                 ; .FSTART _aboutme
                 ; 0000 017D glcd_rectround(1,1,126,62, 5);
00055a 940e 14a2 	CALL SUBOPT_0x6
                 ; 0000 017E glcd_outtextxy(5,8,"SMART   LIGHT   AND");
00055c e0e5      	LDI  R30,LOW(5)
00055d 93ea      	ST   -Y,R30
00055e e0e8      	LDI  R30,LOW(8)
00055f 93ea      	ST   -Y,R30
                +
000560 eea3     +LDI R26 , LOW ( _0x8D + ( 0 ) )
000561 e0b2     +LDI R27 , HIGH ( _0x8D + ( 0 ) )
                 	__POINTW2MN _0x8D,0
000562 940e 1489 	CALL SUBOPT_0x1
                 ; 0000 017F glcd_outtextxy(5,21,"TEMPRATURE  PROJECT");
000564 e1e5      	LDI  R30,LOW(21)
000565 93ea      	ST   -Y,R30
                +
000566 efa7     +LDI R26 , LOW ( _0x8D + ( 20 ) )
000567 e0b2     +LDI R27 , HIGH ( _0x8D + ( 20 ) )
                 	__POINTW2MN _0x8D,20
000568 940e 1489 	CALL SUBOPT_0x1
                 ; 0000 0180 glcd_outtextxy(5,33,"MOHAAMAD JAVAD  ADEL");
00056a e2e1      	LDI  R30,LOW(33)
00056b 93ea      	ST   -Y,R30
                +
00056c e0ab     +LDI R26 , LOW ( _0x8D + ( 40 ) )
00056d e0b3     +LDI R27 , HIGH ( _0x8D + ( 40 ) )
                 	__POINTW2MN _0x8D,40
00056e 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0181 glcd_outtextxy(45,47,"9621010042");
000570 e2ed      	LDI  R30,LOW(45)
000571 93ea      	ST   -Y,R30
000572 e2ef      	LDI  R30,LOW(47)
000573 93ea      	ST   -Y,R30
                +
000574 e2a0     +LDI R26 , LOW ( _0x8D + ( 61 ) )
000575 e0b3     +LDI R27 , HIGH ( _0x8D + ( 61 ) )
                 	__POINTW2MN _0x8D,61
000576 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0182 glcd_circle(30,50,10);
000578 e1ee      	LDI  R30,LOW(30)
000579 940e 14a9 	CALL SUBOPT_0x7
                 ; 0000 0183 glcd_outtextxy(25,47,"BK");
00057b e1e9      	LDI  R30,LOW(25)
00057c 93ea      	ST   -Y,R30
00057d e2ef      	LDI  R30,LOW(47)
00057e 93ea      	ST   -Y,R30
                +
00057f e2ab     +LDI R26 , LOW ( _0x8D + ( 72 ) )
000580 e0b3     +LDI R27 , HIGH ( _0x8D + ( 72 ) )
                 	__POINTW2MN _0x8D,72
000581 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0184 while(PINB.7==0);
                 _0x8E:
000583 9bb7      	SBIS 0x16,7
000584 cffe      	RJMP _0x8E
                 ; 0000 0185 while(PINB.7==1);
                 _0x91:
000585 99b7      	SBIC 0x16,7
000586 cffe      	RJMP _0x91
                 ; 0000 0186 glcd_clear();
                 _0x2120012:
000587 940e 0c40 	CALL _glcd_clear
                 ; 0000 0187 }
000589 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x8D:
0002e3           	.BYTE 0x4B
                 ;
                 ;void showpattern(void){
                 ; 0000 0189 void showpattern(void){
                 
                 	.CSEG
                 _showpattern:
                 ; .FSTART _showpattern
                 ; 0000 018A int d=0;
                 ; 0000 018B char buffer[20];
                 ; 0000 018C tablepattern();
00058a 9764      	SBIW R28,20
00058b 940e 148e 	CALL SUBOPT_0x2
                 ;	d -> R16,R17
                 ;	buffer -> Y+2
00058d 940e 14af 	CALL SUBOPT_0x8
                 ; 0000 018D glcd_rectround(68,0,60,64,2);
                 ; 0000 018E glcd_outtextxy(70,5,"Pattern");
00058f e4e6      	LDI  R30,LOW(70)
000590 93ea      	ST   -Y,R30
000591 e0e5      	LDI  R30,LOW(5)
000592 93ea      	ST   -Y,R30
                +
000593 e2ae     +LDI R26 , LOW ( _0x94 + ( 0 ) )
000594 e0b3     +LDI R27 , HIGH ( _0x94 + ( 0 ) )
                 	__POINTW2MN _0x94,0
000595 940e 14b9 	CALL SUBOPT_0x9
                 ; 0000 018F glcd_circle(84,25,10);
                 ; 0000 0190 glcd_outtextxy(78,22,"<<");
                +
000597 e3a6     +LDI R26 , LOW ( _0x94 + ( 8 ) )
000598 e0b3     +LDI R27 , HIGH ( _0x94 + ( 8 ) )
                 	__POINTW2MN _0x94,8
000599 940e 14c7 	CALL SUBOPT_0xA
                 ; 0000 0191 glcd_circle(110,25,10);
                 ; 0000 0192 glcd_outtextxy(106,22,">>");
                +
00059b e3a9     +LDI R26 , LOW ( _0x94 + ( 11 ) )
00059c e0b3     +LDI R27 , HIGH ( _0x94 + ( 11 ) )
                 	__POINTW2MN _0x94,11
00059d 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0193 glcd_circle(84,50,10);
00059f e5e4      	LDI  R30,LOW(84)
0005a0 940e 14a9 	CALL SUBOPT_0x7
                 ; 0000 0194 glcd_outtextxy(78,48,"OK");
0005a2 940e 14d5 	CALL SUBOPT_0xB
                +
0005a4 e3ac     +LDI R26 , LOW ( _0x94 + ( 14 ) )
0005a5 e0b3     +LDI R27 , HIGH ( _0x94 + ( 14 ) )
                 	__POINTW2MN _0x94,14
0005a6 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0195 glcd_circle(110,50,10);
0005a8 e6ee      	LDI  R30,LOW(110)
0005a9 940e 14a9 	CALL SUBOPT_0x7
                 ; 0000 0196 glcd_outtextxy(105,48,"BK");
0005ab e6e9      	LDI  R30,LOW(105)
0005ac 93ea      	ST   -Y,R30
0005ad e3e0      	LDI  R30,LOW(48)
0005ae 93ea      	ST   -Y,R30
                +
0005af e3af     +LDI R26 , LOW ( _0x94 + ( 17 ) )
0005b0 e0b3     +LDI R27 , HIGH ( _0x94 + ( 17 ) )
                 	__POINTW2MN _0x94,17
0005b1 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0197 while(1){
                 _0x95:
                 ; 0000 0198  switch(d){
0005b3 01f8      	MOVW R30,R16
                 ; 0000 0199   case 0:
0005b4 9730      	SBIW R30,0
0005b5 f429      	BRNE _0x9B
                 ; 0000 019A     glcd_outtextxy(117,5,"1");
0005b6 940e 14da 	CALL SUBOPT_0xC
                +
0005b8 e4a2     +LDI R26 , LOW ( _0x94 + ( 20 ) )
0005b9 e0b3     +LDI R27 , HIGH ( _0x94 + ( 20 ) )
                 	__POINTW2MN _0x94,20
0005ba c03e      	RJMP _0x127
                 ; 0000 019B     showled(d);
                 ; 0000 019C     break;
                 ; 0000 019D   case 1:
                 _0x9B:
0005bb 30e1      	CPI  R30,LOW(0x1)
0005bc e0a0      	LDI  R26,HIGH(0x1)
0005bd 07fa      	CPC  R31,R26
0005be f429      	BRNE _0x9C
                 ; 0000 019E     glcd_outtextxy(117,5,"2");
0005bf 940e 14da 	CALL SUBOPT_0xC
                +
0005c1 e4a4     +LDI R26 , LOW ( _0x94 + ( 22 ) )
0005c2 e0b3     +LDI R27 , HIGH ( _0x94 + ( 22 ) )
                 	__POINTW2MN _0x94,22
0005c3 c035      	RJMP _0x127
                 ; 0000 019F     showled(d);
                 ; 0000 01A0     break;
                 ; 0000 01A1   case 2:
                 _0x9C:
0005c4 30e2      	CPI  R30,LOW(0x2)
0005c5 e0a0      	LDI  R26,HIGH(0x2)
0005c6 07fa      	CPC  R31,R26
0005c7 f429      	BRNE _0x9D
                 ; 0000 01A2     glcd_outtextxy(117,5,"3");
0005c8 940e 14da 	CALL SUBOPT_0xC
                +
0005ca e4a6     +LDI R26 , LOW ( _0x94 + ( 24 ) )
0005cb e0b3     +LDI R27 , HIGH ( _0x94 + ( 24 ) )
                 	__POINTW2MN _0x94,24
0005cc c02c      	RJMP _0x127
                 ; 0000 01A3     showled(d);
                 ; 0000 01A4     break;
                 ; 0000 01A5   case 3:
                 _0x9D:
0005cd 30e3      	CPI  R30,LOW(0x3)
0005ce e0a0      	LDI  R26,HIGH(0x3)
0005cf 07fa      	CPC  R31,R26
0005d0 f429      	BRNE _0x9E
                 ; 0000 01A6     glcd_outtextxy(117,5,"4");
0005d1 940e 14da 	CALL SUBOPT_0xC
                +
0005d3 e4a8     +LDI R26 , LOW ( _0x94 + ( 26 ) )
0005d4 e0b3     +LDI R27 , HIGH ( _0x94 + ( 26 ) )
                 	__POINTW2MN _0x94,26
0005d5 c023      	RJMP _0x127
                 ; 0000 01A7     showled(d);
                 ; 0000 01A8     break;
                 ; 0000 01A9   case 4:
                 _0x9E:
0005d6 30e4      	CPI  R30,LOW(0x4)
0005d7 e0a0      	LDI  R26,HIGH(0x4)
0005d8 07fa      	CPC  R31,R26
0005d9 f429      	BRNE _0x9F
                 ; 0000 01AA     glcd_outtextxy(117,5,"5");
0005da 940e 14da 	CALL SUBOPT_0xC
                +
0005dc e4aa     +LDI R26 , LOW ( _0x94 + ( 28 ) )
0005dd e0b3     +LDI R27 , HIGH ( _0x94 + ( 28 ) )
                 	__POINTW2MN _0x94,28
0005de c01a      	RJMP _0x127
                 ; 0000 01AB     showled(d);
                 ; 0000 01AC     break;
                 ; 0000 01AD   case 5:
                 _0x9F:
0005df 30e5      	CPI  R30,LOW(0x5)
0005e0 e0a0      	LDI  R26,HIGH(0x5)
0005e1 07fa      	CPC  R31,R26
0005e2 f429      	BRNE _0xA0
                 ; 0000 01AE     glcd_outtextxy(117,5,"6");
0005e3 940e 14da 	CALL SUBOPT_0xC
                +
0005e5 e4ac     +LDI R26 , LOW ( _0x94 + ( 30 ) )
0005e6 e0b3     +LDI R27 , HIGH ( _0x94 + ( 30 ) )
                 	__POINTW2MN _0x94,30
0005e7 c011      	RJMP _0x127
                 ; 0000 01AF     showled(d);
                 ; 0000 01B0     break;
                 ; 0000 01B1   case 6:
                 _0xA0:
0005e8 30e6      	CPI  R30,LOW(0x6)
0005e9 e0a0      	LDI  R26,HIGH(0x6)
0005ea 07fa      	CPC  R31,R26
0005eb f429      	BRNE _0xA1
                 ; 0000 01B2     glcd_outtextxy(117,5,"7");
0005ec 940e 14da 	CALL SUBOPT_0xC
                +
0005ee e4ae     +LDI R26 , LOW ( _0x94 + ( 32 ) )
0005ef e0b3     +LDI R27 , HIGH ( _0x94 + ( 32 ) )
                 	__POINTW2MN _0x94,32
0005f0 c008      	RJMP _0x127
                 ; 0000 01B3     showled(d);
                 ; 0000 01B4     break;
                 ; 0000 01B5   case 7:
                 _0xA1:
0005f1 30e7      	CPI  R30,LOW(0x7)
0005f2 e0a0      	LDI  R26,HIGH(0x7)
0005f3 07fa      	CPC  R31,R26
0005f4 f441      	BRNE _0x9A
                 ; 0000 01B6     glcd_outtextxy(117,5,"8");
0005f5 940e 14da 	CALL SUBOPT_0xC
                +
0005f7 e5a0     +LDI R26 , LOW ( _0x94 + ( 34 ) )
0005f8 e0b3     +LDI R27 , HIGH ( _0x94 + ( 34 ) )
                 	__POINTW2MN _0x94,34
                 _0x127:
0005f9 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 01B7     showled(d);
0005fb 01d8      	MOVW R26,R16
0005fc d086      	RCALL _showled
                 ; 0000 01B8     break;
                 ; 0000 01B9  }
                 _0x9A:
                 ; 0000 01BA  if(PINB.7==0){while(PINB.7==0);break;}
0005fd 99b7      	SBIC 0x16,7
0005fe c003      	RJMP _0xA3
                 _0xA4:
0005ff 9bb7      	SBIS 0x16,7
000600 cffe      	RJMP _0xA4
000601 c047      	RJMP _0x97
                 ; 0000 01BB  if(PIND.6==0){while(PIND.6==0);d++;if(d>7){d=0;}}
                 _0xA3:
000602 9986      	SBIC 0x10,6
000603 c00a      	RJMP _0xA7
                 _0xA8:
000604 9b86      	SBIS 0x10,6
000605 cffe      	RJMP _0xA8
                +
000606 5f0f     +SUBI R16 , LOW ( - 1 )
000607 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                +
000608 3008     +CPI R16 , LOW ( 8 )
000609 e0e0     +LDI R30 , HIGH ( 8 )
00060a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
00060b f014      	BRLT _0xAB
                +
00060c e000     +LDI R16 , LOW ( 0 )
00060d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xAB:
                 ; 0000 01BC  if(PIND.4==0){while(PIND.4==0);d--;if(d<0){d=7;}}
                 _0xA7:
00060e 9984      	SBIC 0x10,4
00060f c008      	RJMP _0xAC
                 _0xAD:
000610 9b84      	SBIS 0x10,4
000611 cffe      	RJMP _0xAD
                +
000612 5001     +SUBI R16 , LOW ( 1 )
000613 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000614 2311      	TST  R17
000615 f412      	BRPL _0xB0
                +
000616 e007     +LDI R16 , LOW ( 7 )
000617 e010     +LDI R17 , HIGH ( 7 )
                 	__GETWRN 16,17,7
                 _0xB0:
                 ; 0000 01BD  if(PINB.2==0){
                 _0xAC:
000618 99b2      	SBIC 0x16,2
000619 c02e      	RJMP _0xB1
                 ; 0000 01BE     while(PINB.2==0);
                 _0xB2:
00061a 9bb2      	SBIS 0x16,2
00061b cffe      	RJMP _0xB2
                 ; 0000 01BF     glcd_clear();
00061c 940e 0c40 	CALL _glcd_clear
                 ; 0000 01C0     glcd_rectround(5,20,118,18,5);
00061e e0e5      	LDI  R30,LOW(5)
00061f 93ea      	ST   -Y,R30
000620 e1e4      	LDI  R30,LOW(20)
000621 93ea      	ST   -Y,R30
000622 e7e6      	LDI  R30,LOW(118)
000623 93ea      	ST   -Y,R30
000624 e1e2      	LDI  R30,LOW(18)
000625 940e 1485 	CALL SUBOPT_0x0
                 ; 0000 01C1     sprintf(buffer,"Pattern %d Applied !",d+1);
000627 01fe      	MOVW R30,R28
000628 9632      	ADIW R30,2
000629 93fa      	ST   -Y,R31
00062a 93ea      	ST   -Y,R30
                +
00062b e4e6     +LDI R30 , LOW ( 2 * _0x0 + ( 226 ) )
00062c e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 226 ) )
                 	__POINTW1FN _0x0,226
00062d 93fa      	ST   -Y,R31
00062e 93ea      	ST   -Y,R30
00062f 01f8      	MOVW R30,R16
000630 9631      	ADIW R30,1
000631 940e 16f8 	CALL __CWD1
000633 940e 174b 	CALL __PUTPARD1
000635 e084      	LDI  R24,4
000636 940e 0b2a 	CALL _sprintf
000638 9628      	ADIW R28,8
                 ; 0000 01C2     glcd_outtextxy(7,25,buffer);
000639 e0e7      	LDI  R30,LOW(7)
00063a 93ea      	ST   -Y,R30
00063b e1e9      	LDI  R30,LOW(25)
00063c 93ea      	ST   -Y,R30
00063d 01de      	MOVW R26,R28
00063e 9614      	ADIW R26,4
00063f 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 01C3     patternapply(d);
000641 01d8      	MOVW R26,R16
000642 d33e      	RCALL _patternapply
                 ; 0000 01C4     delay_ms(125);
000643 e7ad      	LDI  R26,LOW(125)
000644 e0b0      	LDI  R27,0
000645 940e 16c8 	CALL _delay_ms
                 ; 0000 01C5     break;
000647 c001      	RJMP _0x97
                 ; 0000 01C6     }
                 ; 0000 01C7 }
                 _0xB1:
000648 cf6a      	RJMP _0x95
                 _0x97:
                 ; 0000 01C8 glcd_clear();
000649 940e 0c40 	CALL _glcd_clear
                 ; 0000 01C9 }
00064b 8119      	LDD  R17,Y+1
00064c 8108      	LDD  R16,Y+0
00064d 9666      	ADIW R28,22
00064e 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x94:
00032e           	.BYTE 0x24
                 ;
                 ;void tablepattern(void){
                 ; 0000 01CB void tablepattern(void){
                 
                 	.CSEG
                 _tablepattern:
                 ; .FSTART _tablepattern
                 ; 0000 01CC int j=0,k=0,x=0,w=0;
                 ; 0000 01CD glcd_clear();
00064f 9722      	SBIW R28,2
000650 e0e0      	LDI  R30,LOW(0)
000651 83e8      	ST   Y,R30
000652 83e9      	STD  Y+1,R30
000653 940e 1771 	CALL __SAVELOCR6
                 ;	j -> R16,R17
                 ;	k -> R18,R19
                 ;	x -> R20,R21
                 ;	w -> Y+6
000655 940e 1497 	CALL SUBOPT_0x4
                +
000657 e040     +LDI R20 , LOW ( 0 )
000658 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
000659 940e 0c40 	CALL _glcd_clear
                 ; 0000 01CE for(j=0;j<16;j++){
                +
00065b e000     +LDI R16 , LOW ( 0 )
00065c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xB6:
                +
00065d 3100     +CPI R16 , LOW ( 16 )
00065e e0e0     +LDI R30 , HIGH ( 16 )
00065f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
000660 f50c      	BRGE _0xB7
                 ; 0000 01CF     for(k=0;k<16;k++){
                +
000661 e020     +LDI R18 , LOW ( 0 )
000662 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xB9:
                +
000663 3120     +CPI R18 , LOW ( 16 )
000664 e0e0     +LDI R30 , HIGH ( 16 )
000665 073e     +CPC R19 , R30
                 	__CPWRN 18,19,16
000666 f48c      	BRGE _0xBA
                 ; 0000 01D0         glcd_rectround(1+w,1+x,3,3, 0);
000667 81ee      	LDD  R30,Y+6
000668 5fef      	SUBI R30,-LOW(1)
000669 93ea      	ST   -Y,R30
00066a 2fe4      	MOV  R30,R20
00066b 5fef      	SUBI R30,-LOW(1)
00066c 93ea      	ST   -Y,R30
00066d e0e3      	LDI  R30,LOW(3)
00066e 93ea      	ST   -Y,R30
00066f 93ea      	ST   -Y,R30
000670 e0a0      	LDI  R26,LOW(0)
000671 940e 113a 	CALL _glcd_rectround
                 ; 0000 01D1         x=x+4;
                +
000673 5f4c     +SUBI R20 , LOW ( - 4 )
000674 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
                 ; 0000 01D2     }
                +
000675 5f2f     +SUBI R18 , LOW ( - 1 )
000676 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000677 cfeb      	RJMP _0xB9
                 _0xBA:
                 ; 0000 01D3     w=w+4;
000678 81ee      	LDD  R30,Y+6
000679 81ff      	LDD  R31,Y+6+1
00067a 9634      	ADIW R30,4
00067b 83ee      	STD  Y+6,R30
00067c 83ff      	STD  Y+6+1,R31
                 ; 0000 01D4     x=0;
                +
00067d e040     +LDI R20 , LOW ( 0 )
00067e e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 ; 0000 01D5 }
                +
00067f 5f0f     +SUBI R16 , LOW ( - 1 )
000680 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000681 cfdb      	RJMP _0xB6
                 _0xB7:
                 ; 0000 01D6 }
000682 c03b      	RJMP _0x2120011
                 ; .FEND
                 ;
                 ;//void defaultpattern(void){
                 ;// int j,k;
                 ;// for(j=0;j<16;j++){
                 ;//    for(k=0;k<8;k++){
                 ;//      center[j][k][0]=0b01010101;
                 ;//      center[j][k][1]=0b10101010;
                 ;//  }
                 ;// }
                 ;//for(j=0;j<16;j++){
                 ;//    center[j][2][0]=0b11110000;
                 ;//    center[j][2][1]=0b00001111;
                 ;//}
                 ;//}
                 ;
                 ;void showled(int d){
                 ; 0000 01E6 void showled(int d){
                 _showled:
                 ; .FSTART _showled
                 ; 0000 01E7 int j,shifter;
                 ; 0000 01E8 char k,binary;
                 ; 0000 01E9 for(j=0;j<16;j++){
000683 93ba      	ST   -Y,R27
000684 93aa      	ST   -Y,R26
000685 940e 1771 	CALL __SAVELOCR6
                 ;	d -> Y+6
                 ;	j -> R16,R17
                 ;	shifter -> R18,R19
                 ;	k -> R21
                 ;	binary -> R20
                +
000687 e000     +LDI R16 , LOW ( 0 )
000688 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xBC:
                +
000689 3100     +CPI R16 , LOW ( 16 )
00068a e0e0     +LDI R30 , HIGH ( 16 )
00068b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
00068c f58c      	BRGE _0xBD
                 ; 0000 01EA     for(k=0;k<2;k++){
00068d e050      	LDI  R21,LOW(0)
                 _0xBF:
00068e 3052      	CPI  R21,2
00068f f558      	BRSH _0xC0
                 ; 0000 01EB         for(shifter=0;shifter<8;shifter++){
                +
000690 e020     +LDI R18 , LOW ( 0 )
000691 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xC2:
                +
000692 3028     +CPI R18 , LOW ( 8 )
000693 e0e0     +LDI R30 , HIGH ( 8 )
000694 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000695 f51c      	BRGE _0xC3
                 ; 0000 01EC             binary = 0b00000001 << shifter ;
000696 2fe2      	MOV  R30,R18
000697 e0a1      	LDI  R26,LOW(1)
000698 940e 16da 	CALL __LSLB12
00069a 2f4e      	MOV  R20,R30
                 ; 0000 01ED             if( (center[j][d][k] & binary) == binary ){
00069b 01f8      	MOVW R30,R16
00069c 940e 14df 	CALL SUBOPT_0xD
00069e 01df      	MOVW R26,R30
00069f 81ee      	LDD  R30,Y+6
0006a0 81ff      	LDD  R31,Y+6+1
0006a1 0fee      	LSL  R30
0006a2 1fff      	ROL  R31
0006a3 0fae      	ADD  R26,R30
0006a4 1fbf      	ADC  R27,R31
0006a5 27ee      	CLR  R30
0006a6 0fa5      	ADD  R26,R21
0006a7 1fbe      	ADC  R27,R30
0006a8 940e 1750 	CALL __EEPROMRDB
0006aa 23e4      	AND  R30,R20
0006ab 174e      	CP   R20,R30
0006ac f429      	BRNE _0xC4
                 ; 0000 01EE                 glcd_setpixel( (4*(shifter%4)) + (16*(j%4)) + 2 , (k*8) + (4*(shifter/4)) + (16*(j/4)) + 2 );
0006ad 940e 14e4 	CALL SUBOPT_0xE
0006af 940e 0ee6 	CALL _glcd_setpixel
                 ; 0000 01EF             }
                 ; 0000 01F0             else{
0006b1 c004      	RJMP _0xC5
                 _0xC4:
                 ; 0000 01F1                 glcd_clrpixel( (4*(shifter%4)) + (16*(j%4)) + 2 , (k*8) + (4*(shifter/4)) + (16*(j/4)) + 2 );
0006b2 940e 14e4 	CALL SUBOPT_0xE
0006b4 940e 0eee 	CALL _glcd_clrpixel
                 ; 0000 01F2             }
                 _0xC5:
                 ; 0000 01F3         }
                +
0006b6 5f2f     +SUBI R18 , LOW ( - 1 )
0006b7 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0006b8 cfd9      	RJMP _0xC2
                 _0xC3:
                 ; 0000 01F4     }
0006b9 5f5f      	SUBI R21,-1
0006ba cfd3      	RJMP _0xBF
                 _0xC0:
                 ; 0000 01F5 }
                +
0006bb 5f0f     +SUBI R16 , LOW ( - 1 )
0006bc 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0006bd cfcb      	RJMP _0xBC
                 _0xBD:
                 ; 0000 01F6 }
                 _0x2120011:
0006be 940e 1778 	CALL __LOADLOCR6
0006c0 9628      	ADIW R28,8
0006c1 9508      	RET
                 ; .FEND
                 ;
                 ;void editpattern(void){
                 ; 0000 01F8 void editpattern(void){
                 _editpattern:
                 ; .FSTART _editpattern
                 ; 0000 01F9 int d=0;
                 ; 0000 01FA tablepattern();
0006c2 940e 148e 	CALL SUBOPT_0x2
                 ;	d -> R16,R17
0006c4 940e 14af 	CALL SUBOPT_0x8
                 ; 0000 01FB glcd_rectround(68,0,60,64,2);
                 ; 0000 01FC glcd_outtextxy(70,5,"Pattern");
0006c6 e4e6      	LDI  R30,LOW(70)
0006c7 93ea      	ST   -Y,R30
0006c8 e0e5      	LDI  R30,LOW(5)
0006c9 93ea      	ST   -Y,R30
                +
0006ca e5a2     +LDI R26 , LOW ( _0xC6 + ( 0 ) )
0006cb e0b3     +LDI R27 , HIGH ( _0xC6 + ( 0 ) )
                 	__POINTW2MN _0xC6,0
0006cc 940e 14b9 	CALL SUBOPT_0x9
                 ; 0000 01FD glcd_circle(84,25,10);
                 ; 0000 01FE glcd_outtextxy(78,22,"<<");
                +
0006ce e5aa     +LDI R26 , LOW ( _0xC6 + ( 8 ) )
0006cf e0b3     +LDI R27 , HIGH ( _0xC6 + ( 8 ) )
                 	__POINTW2MN _0xC6,8
0006d0 940e 14c7 	CALL SUBOPT_0xA
                 ; 0000 01FF glcd_circle(110,25,10);
                 ; 0000 0200 glcd_outtextxy(106,22,">>");
                +
0006d2 e5ad     +LDI R26 , LOW ( _0xC6 + ( 11 ) )
0006d3 e0b3     +LDI R27 , HIGH ( _0xC6 + ( 11 ) )
                 	__POINTW2MN _0xC6,11
0006d4 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0201 glcd_circle(84,50,10);
0006d6 e5e4      	LDI  R30,LOW(84)
0006d7 940e 14a9 	CALL SUBOPT_0x7
                 ; 0000 0202 glcd_outtextxy(78,48,"ED");
0006d9 940e 14d5 	CALL SUBOPT_0xB
                +
0006db e6a0     +LDI R26 , LOW ( _0xC6 + ( 14 ) )
0006dc e0b3     +LDI R27 , HIGH ( _0xC6 + ( 14 ) )
                 	__POINTW2MN _0xC6,14
0006dd 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0203 glcd_circle(110,50,10);
0006df e6ee      	LDI  R30,LOW(110)
0006e0 940e 14a9 	CALL SUBOPT_0x7
                 ; 0000 0204 glcd_outtextxy(105,48,"BK");
0006e2 e6e9      	LDI  R30,LOW(105)
0006e3 93ea      	ST   -Y,R30
0006e4 e3e0      	LDI  R30,LOW(48)
0006e5 93ea      	ST   -Y,R30
                +
0006e6 e6a3     +LDI R26 , LOW ( _0xC6 + ( 17 ) )
0006e7 e0b3     +LDI R27 , HIGH ( _0xC6 + ( 17 ) )
                 	__POINTW2MN _0xC6,17
0006e8 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0205 while(1){
                 _0xC7:
                 ; 0000 0206  switch(d){
0006ea 01f8      	MOVW R30,R16
                 ; 0000 0207   case 0:
0006eb 9730      	SBIW R30,0
0006ec f429      	BRNE _0xCD
                 ; 0000 0208     glcd_outtextxy(117,5,"1");
0006ed 940e 14da 	CALL SUBOPT_0xC
                +
0006ef e6a6     +LDI R26 , LOW ( _0xC6 + ( 20 ) )
0006f0 e0b3     +LDI R27 , HIGH ( _0xC6 + ( 20 ) )
                 	__POINTW2MN _0xC6,20
0006f1 c03e      	RJMP _0x128
                 ; 0000 0209     showled(d);
                 ; 0000 020A     break;
                 ; 0000 020B   case 1:
                 _0xCD:
0006f2 30e1      	CPI  R30,LOW(0x1)
0006f3 e0a0      	LDI  R26,HIGH(0x1)
0006f4 07fa      	CPC  R31,R26
0006f5 f429      	BRNE _0xCE
                 ; 0000 020C     glcd_outtextxy(117,5,"2");
0006f6 940e 14da 	CALL SUBOPT_0xC
                +
0006f8 e6a8     +LDI R26 , LOW ( _0xC6 + ( 22 ) )
0006f9 e0b3     +LDI R27 , HIGH ( _0xC6 + ( 22 ) )
                 	__POINTW2MN _0xC6,22
0006fa c035      	RJMP _0x128
                 ; 0000 020D     showled(d);
                 ; 0000 020E     break;
                 ; 0000 020F   case 2:
                 _0xCE:
0006fb 30e2      	CPI  R30,LOW(0x2)
0006fc e0a0      	LDI  R26,HIGH(0x2)
0006fd 07fa      	CPC  R31,R26
0006fe f429      	BRNE _0xCF
                 ; 0000 0210     glcd_outtextxy(117,5,"3");
0006ff 940e 14da 	CALL SUBOPT_0xC
                +
000701 e6aa     +LDI R26 , LOW ( _0xC6 + ( 24 ) )
000702 e0b3     +LDI R27 , HIGH ( _0xC6 + ( 24 ) )
                 	__POINTW2MN _0xC6,24
000703 c02c      	RJMP _0x128
                 ; 0000 0211     showled(d);
                 ; 0000 0212     break;
                 ; 0000 0213   case 3:
                 _0xCF:
000704 30e3      	CPI  R30,LOW(0x3)
000705 e0a0      	LDI  R26,HIGH(0x3)
000706 07fa      	CPC  R31,R26
000707 f429      	BRNE _0xD0
                 ; 0000 0214     glcd_outtextxy(117,5,"4");
000708 940e 14da 	CALL SUBOPT_0xC
                +
00070a e6ac     +LDI R26 , LOW ( _0xC6 + ( 26 ) )
00070b e0b3     +LDI R27 , HIGH ( _0xC6 + ( 26 ) )
                 	__POINTW2MN _0xC6,26
00070c c023      	RJMP _0x128
                 ; 0000 0215     showled(d);
                 ; 0000 0216     break;
                 ; 0000 0217   case 4:
                 _0xD0:
00070d 30e4      	CPI  R30,LOW(0x4)
00070e e0a0      	LDI  R26,HIGH(0x4)
00070f 07fa      	CPC  R31,R26
000710 f429      	BRNE _0xD1
                 ; 0000 0218     glcd_outtextxy(117,5,"5");
000711 940e 14da 	CALL SUBOPT_0xC
                +
000713 e6ae     +LDI R26 , LOW ( _0xC6 + ( 28 ) )
000714 e0b3     +LDI R27 , HIGH ( _0xC6 + ( 28 ) )
                 	__POINTW2MN _0xC6,28
000715 c01a      	RJMP _0x128
                 ; 0000 0219     showled(d);
                 ; 0000 021A     break;
                 ; 0000 021B   case 5:
                 _0xD1:
000716 30e5      	CPI  R30,LOW(0x5)
000717 e0a0      	LDI  R26,HIGH(0x5)
000718 07fa      	CPC  R31,R26
000719 f429      	BRNE _0xD2
                 ; 0000 021C     glcd_outtextxy(117,5,"6");
00071a 940e 14da 	CALL SUBOPT_0xC
                +
00071c e7a0     +LDI R26 , LOW ( _0xC6 + ( 30 ) )
00071d e0b3     +LDI R27 , HIGH ( _0xC6 + ( 30 ) )
                 	__POINTW2MN _0xC6,30
00071e c011      	RJMP _0x128
                 ; 0000 021D     showled(d);
                 ; 0000 021E     break;
                 ; 0000 021F   case 6:
                 _0xD2:
00071f 30e6      	CPI  R30,LOW(0x6)
000720 e0a0      	LDI  R26,HIGH(0x6)
000721 07fa      	CPC  R31,R26
000722 f429      	BRNE _0xD3
                 ; 0000 0220     glcd_outtextxy(117,5,"7");
000723 940e 14da 	CALL SUBOPT_0xC
                +
000725 e7a2     +LDI R26 , LOW ( _0xC6 + ( 32 ) )
000726 e0b3     +LDI R27 , HIGH ( _0xC6 + ( 32 ) )
                 	__POINTW2MN _0xC6,32
000727 c008      	RJMP _0x128
                 ; 0000 0221     showled(d);
                 ; 0000 0222     break;
                 ; 0000 0223   case 7:
                 _0xD3:
000728 30e7      	CPI  R30,LOW(0x7)
000729 e0a0      	LDI  R26,HIGH(0x7)
00072a 07fa      	CPC  R31,R26
00072b f441      	BRNE _0xCC
                 ; 0000 0224     glcd_outtextxy(117,5,"8");
00072c 940e 14da 	CALL SUBOPT_0xC
                +
00072e e7a4     +LDI R26 , LOW ( _0xC6 + ( 34 ) )
00072f e0b3     +LDI R27 , HIGH ( _0xC6 + ( 34 ) )
                 	__POINTW2MN _0xC6,34
                 _0x128:
000730 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0225     showled(d);
000732 01d8      	MOVW R26,R16
000733 df4f      	RCALL _showled
                 ; 0000 0226     break;
                 ; 0000 0227     }
                 _0xCC:
                 ; 0000 0228  if(PINB.7==0){while(PINB.7==0);break;}
000734 99b7      	SBIC 0x16,7
000735 c003      	RJMP _0xD5
                 _0xD6:
000736 9bb7      	SBIS 0x16,7
000737 cffe      	RJMP _0xD6
000738 c01d      	RJMP _0xC9
                 ; 0000 0229  if(PINB.2==0){while(PINB.2==0);savepattern(d);}
                 _0xD5:
000739 99b2      	SBIC 0x16,2
00073a c004      	RJMP _0xD9
                 _0xDA:
00073b 9bb2      	SBIS 0x16,2
00073c cffe      	RJMP _0xDA
00073d 01d8      	MOVW R26,R16
00073e d01c      	RCALL _savepattern
                 ; 0000 022A  if(PIND.6==0){while(PIND.6==0);d++;if(d>7){d=0;}}
                 _0xD9:
00073f 9986      	SBIC 0x10,6
000740 c00a      	RJMP _0xDD
                 _0xDE:
000741 9b86      	SBIS 0x10,6
000742 cffe      	RJMP _0xDE
                +
000743 5f0f     +SUBI R16 , LOW ( - 1 )
000744 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                +
000745 3008     +CPI R16 , LOW ( 8 )
000746 e0e0     +LDI R30 , HIGH ( 8 )
000747 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000748 f014      	BRLT _0xE1
                +
000749 e000     +LDI R16 , LOW ( 0 )
00074a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE1:
                 ; 0000 022B  if(PIND.4==0){while(PIND.4==0);d--;if(d<0){d=7;}}
                 _0xDD:
00074b 9984      	SBIC 0x10,4
00074c c008      	RJMP _0xE2
                 _0xE3:
00074d 9b84      	SBIS 0x10,4
00074e cffe      	RJMP _0xE3
                +
00074f 5001     +SUBI R16 , LOW ( 1 )
000750 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000751 2311      	TST  R17
000752 f412      	BRPL _0xE6
                +
000753 e007     +LDI R16 , LOW ( 7 )
000754 e010     +LDI R17 , HIGH ( 7 )
                 	__GETWRN 16,17,7
                 _0xE6:
                 ; 0000 022C }
                 _0xE2:
000755 cf94      	RJMP _0xC7
                 _0xC9:
                 ; 0000 022D glcd_clear();
000756 940e 0c40 	CALL _glcd_clear
                 ; 0000 022E }
                 _0x2120010:
000758 9109      	LD   R16,Y+
000759 9119      	LD   R17,Y+
00075a 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0xC6:
000352           	.BYTE 0x24
                 ;
                 ;void savepattern(int x){
                 ; 0000 0230 void savepattern(int x){
                 
                 	.CSEG
                 _savepattern:
                 ; .FSTART _savepattern
                 ; 0000 0231 int j=0;
                 ; 0000 0232 glcd_outtextxy(70,15,"         ");
00075b 93ba      	ST   -Y,R27
00075c 93aa      	ST   -Y,R26
00075d 940e 148e 	CALL SUBOPT_0x2
                 ;	x -> Y+2
                 ;	j -> R16,R17
00075f 940e 1510 	CALL SUBOPT_0xF
                +
000761 e7a6     +LDI R26 , LOW ( _0xE7 + ( 0 ) )
000762 e0b3     +LDI R27 , HIGH ( _0xE7 + ( 0 ) )
                 	__POINTW2MN _0xE7,0
000763 940e 1515 	CALL SUBOPT_0x10
                 ; 0000 0233 glcd_outtextxy(70,20,"         ");
000765 e1e4      	LDI  R30,LOW(20)
000766 93ea      	ST   -Y,R30
                +
000767 e8a0     +LDI R26 , LOW ( _0xE7 + ( 10 ) )
000768 e0b3     +LDI R27 , HIGH ( _0xE7 + ( 10 ) )
                 	__POINTW2MN _0xE7,10
000769 940e 1515 	CALL SUBOPT_0x10
                 ; 0000 0234 glcd_outtextxy(70,25,"         ");
00076b e1e9      	LDI  R30,LOW(25)
00076c 93ea      	ST   -Y,R30
                +
00076d e8aa     +LDI R26 , LOW ( _0xE7 + ( 20 ) )
00076e e0b3     +LDI R27 , HIGH ( _0xE7 + ( 20 ) )
                 	__POINTW2MN _0xE7,20
00076f 940e 1515 	CALL SUBOPT_0x10
                 ; 0000 0235 glcd_outtextxy(70,30,"         ");
000771 e1ee      	LDI  R30,LOW(30)
000772 93ea      	ST   -Y,R30
                +
000773 e9a4     +LDI R26 , LOW ( _0xE7 + ( 30 ) )
000774 e0b3     +LDI R27 , HIGH ( _0xE7 + ( 30 ) )
                 	__POINTW2MN _0xE7,30
000775 940e 151a 	CALL SUBOPT_0x11
                 ; 0000 0236 glcd_outtextxy(74,20,"PRESS ED");
000777 e1e4      	LDI  R30,LOW(20)
000778 93ea      	ST   -Y,R30
                +
000779 e9ae     +LDI R26 , LOW ( _0xE7 + ( 40 ) )
00077a e0b3     +LDI R27 , HIGH ( _0xE7 + ( 40 ) )
                 	__POINTW2MN _0xE7,40
00077b 940e 151f 	CALL SUBOPT_0x12
                 ; 0000 0237 glcd_outtextxy(77,30,"TO EDIT");
00077d e1ee      	LDI  R30,LOW(30)
00077e 93ea      	ST   -Y,R30
                +
00077f eaa7     +LDI R26 , LOW ( _0xE7 + ( 49 ) )
000780 e0b3     +LDI R27 , HIGH ( _0xE7 + ( 49 ) )
                 	__POINTW2MN _0xE7,49
000781 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0238 while(1){
                 _0xE8:
                 ; 0000 0239     glcd_rectround(16*(j%4),16*(j/4),17,17, 0);
000783 940e 1524 	CALL SUBOPT_0x13
000785 e1a0      	LDI  R26,LOW(16)
000786 02ea      	MULS R30,R26
000787 920a      	ST   -Y,R0
000788 940e 152a 	CALL SUBOPT_0x14
00078a e1a0      	LDI  R26,LOW(16)
00078b 02ea      	MULS R30,R26
00078c 920a      	ST   -Y,R0
00078d e1e1      	LDI  R30,LOW(17)
00078e 93ea      	ST   -Y,R30
00078f 93ea      	ST   -Y,R30
000790 e0a0      	LDI  R26,LOW(0)
000791 940e 113a 	CALL _glcd_rectround
                 ; 0000 023A     if(PIND.7==0){while(PIND.7==0);clearround(j);if(j>11){j=(j%4);}else{j=j+4;}}
000793 9987      	SBIC 0x10,7
000794 c00e      	RJMP _0xEB
                 _0xEC:
000795 9b87      	SBIS 0x10,7
000796 cffe      	RJMP _0xEC
000797 01d8      	MOVW R26,R16
000798 d075      	RCALL _clearround
                +
000799 300c     +CPI R16 , LOW ( 12 )
00079a e0e0     +LDI R30 , HIGH ( 12 )
00079b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
00079c f024      	BRLT _0xEF
00079d 940e 1524 	CALL SUBOPT_0x13
00079f 018f      	MOVW R16,R30
0007a0 c002      	RJMP _0xF0
                 _0xEF:
                +
0007a1 5f0c     +SUBI R16 , LOW ( - 4 )
0007a2 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 _0xF0:
                 ; 0000 023B     if(PIND.5==0){while(PIND.5==0);clearround(j);if(j<4){j=12+(j%4);}else{j=j-4;}}
                 _0xEB:
0007a3 9985      	SBIC 0x10,5
0007a4 c010      	RJMP _0xF1
                 _0xF2:
0007a5 9b85      	SBIS 0x10,5
0007a6 cffe      	RJMP _0xF2
0007a7 01d8      	MOVW R26,R16
0007a8 d065      	RCALL _clearround
                +
0007a9 3004     +CPI R16 , LOW ( 4 )
0007aa e0e0     +LDI R30 , HIGH ( 4 )
0007ab 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
0007ac f434      	BRGE _0xF5
0007ad 01d8      	MOVW R26,R16
0007ae 940e 1530 	CALL SUBOPT_0x15
0007b0 963c      	ADIW R30,12
0007b1 018f      	MOVW R16,R30
0007b2 c002      	RJMP _0xF6
                 _0xF5:
                +
0007b3 5004     +SUBI R16 , LOW ( 4 )
0007b4 4010     +SBCI R17 , HIGH ( 4 )
                 	__SUBWRN 16,17,4
                 _0xF6:
                 ; 0000 023C     if(PIND.6==0){while(PIND.6==0);clearround(j);if((j+1)%4==0){j=(j/4)*4;}else{j=j+1;}}
                 _0xF1:
0007b5 9986      	SBIC 0x10,6
0007b6 c012      	RJMP _0xF7
                 _0xF8:
0007b7 9b86      	SBIS 0x10,6
0007b8 cffe      	RJMP _0xF8
0007b9 01d8      	MOVW R26,R16
0007ba d053      	RCALL _clearround
0007bb 01d8      	MOVW R26,R16
0007bc 9611      	ADIW R26,1
0007bd 940e 1530 	CALL SUBOPT_0x15
0007bf 9730      	SBIW R30,0
0007c0 f431      	BRNE _0xFB
0007c1 940e 152a 	CALL SUBOPT_0x14
0007c3 940e 16ee 	CALL __LSLW2
0007c5 018f      	MOVW R16,R30
0007c6 c002      	RJMP _0xFC
                 _0xFB:
                +
0007c7 5f0f     +SUBI R16 , LOW ( - 1 )
0007c8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 _0xFC:
                 ; 0000 023D     if(PIND.4==0){while(PIND.4==0);clearround(j);if(j%4==0){j=j+3;}else{j=j-1;}}
                 _0xF7:
0007c9 9984      	SBIC 0x10,4
0007ca c00e      	RJMP _0xFD
                 _0xFE:
0007cb 9b84      	SBIS 0x10,4
0007cc cffe      	RJMP _0xFE
0007cd 01d8      	MOVW R26,R16
0007ce d03f      	RCALL _clearround
0007cf 01d8      	MOVW R26,R16
0007d0 940e 1530 	CALL SUBOPT_0x15
0007d2 9730      	SBIW R30,0
0007d3 f419      	BRNE _0x101
                +
0007d4 5f0d     +SUBI R16 , LOW ( - 3 )
0007d5 4f1f     +SBCI R17 , HIGH ( - 3 )
                 	__ADDWRN 16,17,3
0007d6 c002      	RJMP _0x102
                 _0x101:
                +
0007d7 5001     +SUBI R16 , LOW ( 1 )
0007d8 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 _0x102:
                 ; 0000 023E     if(PINB.7==0){while(PINB.7==0);clearround(j);break;}
                 _0xFD:
0007d9 99b7      	SBIC 0x16,7
0007da c005      	RJMP _0x103
                 _0x104:
0007db 9bb7      	SBIS 0x16,7
0007dc cffe      	RJMP _0x104
0007dd 01d8      	MOVW R26,R16
0007de d02f      	RCALL _clearround
0007df c00a      	RJMP _0xEA
                 ; 0000 023F     if(PINB.2==0){while(PINB.2==0);save2pattern(j,x);}
                 _0x103:
0007e0 99b2      	SBIC 0x16,2
0007e1 c007      	RJMP _0x107
                 _0x108:
0007e2 9bb2      	SBIS 0x16,2
0007e3 cffe      	RJMP _0x108
0007e4 931a      	ST   -Y,R17
0007e5 930a      	ST   -Y,R16
0007e6 81ac      	LDD  R26,Y+4
0007e7 81bd      	LDD  R27,Y+4+1
0007e8 d07d      	RCALL _save2pattern
                 ; 0000 0240 }
                 _0x107:
0007e9 cf99      	RJMP _0xE8
                 _0xEA:
                 ; 0000 0241 glcd_outtextxy(70,15,"         ");
0007ea 940e 1510 	CALL SUBOPT_0xF
                +
0007ec eaaf     +LDI R26 , LOW ( _0xE7 + ( 57 ) )
0007ed e0b3     +LDI R27 , HIGH ( _0xE7 + ( 57 ) )
                 	__POINTW2MN _0xE7,57
0007ee 940e 1515 	CALL SUBOPT_0x10
                 ; 0000 0242 glcd_outtextxy(70,20,"         ");
0007f0 e1e4      	LDI  R30,LOW(20)
0007f1 93ea      	ST   -Y,R30
                +
0007f2 eba9     +LDI R26 , LOW ( _0xE7 + ( 67 ) )
0007f3 e0b3     +LDI R27 , HIGH ( _0xE7 + ( 67 ) )
                 	__POINTW2MN _0xE7,67
0007f4 940e 1515 	CALL SUBOPT_0x10
                 ; 0000 0243 glcd_outtextxy(70,25,"         ");
0007f6 e1e9      	LDI  R30,LOW(25)
0007f7 93ea      	ST   -Y,R30
                +
0007f8 eca3     +LDI R26 , LOW ( _0xE7 + ( 77 ) )
0007f9 e0b3     +LDI R27 , HIGH ( _0xE7 + ( 77 ) )
                 	__POINTW2MN _0xE7,77
0007fa 940e 1515 	CALL SUBOPT_0x10
                 ; 0000 0244 glcd_outtextxy(70,30,"         ");
0007fc e1ee      	LDI  R30,LOW(30)
0007fd 93ea      	ST   -Y,R30
                +
0007fe ecad     +LDI R26 , LOW ( _0xE7 + ( 87 ) )
0007ff e0b3     +LDI R27 , HIGH ( _0xE7 + ( 87 ) )
                 	__POINTW2MN _0xE7,87
000800 940e 14b9 	CALL SUBOPT_0x9
                 ; 0000 0245 glcd_circle(84,25,10);
                 ; 0000 0246 glcd_outtextxy(78,22,"<<");
                +
000802 eda7     +LDI R26 , LOW ( _0xE7 + ( 97 ) )
000803 e0b3     +LDI R27 , HIGH ( _0xE7 + ( 97 ) )
                 	__POINTW2MN _0xE7,97
000804 940e 14c7 	CALL SUBOPT_0xA
                 ; 0000 0247 glcd_circle(110,25,10);
                 ; 0000 0248 glcd_outtextxy(106,22,">>");
                +
000806 edaa     +LDI R26 , LOW ( _0xE7 + ( 100 ) )
000807 e0b3     +LDI R27 , HIGH ( _0xE7 + ( 100 ) )
                 	__POINTW2MN _0xE7,100
000808 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0249 }
00080a 8119      	LDD  R17,Y+1
00080b 8108      	LDD  R16,Y+0
00080c 940c 0c64 	JMP  _0x212000E
                 ; .FEND
                 
                 	.DSEG
                 _0xE7:
000376           	.BYTE 0x67
                 ;
                 ;void clearround(int w){
                 ; 0000 024B void clearround(int w){
                 
                 	.CSEG
                 _clearround:
                 ; .FSTART _clearround
                 ; 0000 024C int k=0;
                 ; 0000 024D     for(k=0;k<16;k++){
00080e 93ba      	ST   -Y,R27
00080f 93aa      	ST   -Y,R26
000810 940e 148e 	CALL SUBOPT_0x2
                 ;	w -> Y+2
                 ;	k -> R16,R17
                +
000812 e000     +LDI R16 , LOW ( 0 )
000813 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x10C:
                +
000814 3100     +CPI R16 , LOW ( 16 )
000815 e0e0     +LDI R30 , HIGH ( 16 )
000816 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
000817 f454      	BRGE _0x10D
                 ; 0000 024E         glcd_clrpixel( ((w%4)*16)+k , (w/4)*16 );
000818 940e 1535 	CALL SUBOPT_0x16
00081a 940e 153f 	CALL SUBOPT_0x17
00081c 2fae      	MOV  R26,R30
00081d 940e 0eee 	CALL _glcd_clrpixel
                 ; 0000 024F     }
                +
00081f 5f0f     +SUBI R16 , LOW ( - 1 )
000820 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000821 cff2      	RJMP _0x10C
                 _0x10D:
                 ; 0000 0250     for(k=0;k<16;k++){
                +
000822 e000     +LDI R16 , LOW ( 0 )
000823 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x10F:
                +
000824 3100     +CPI R16 , LOW ( 16 )
000825 e0e0     +LDI R30 , HIGH ( 16 )
000826 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
000827 f44c      	BRGE _0x110
                 ; 0000 0251         glcd_clrpixel( ((w%4)*16)+16 , ((w/4)*16) + k );
000828 940e 1535 	CALL SUBOPT_0x16
00082a 5fe0      	SUBI R30,-LOW(16)
00082b 93ea      	ST   -Y,R30
00082c 940e 154b 	CALL SUBOPT_0x18
                 ; 0000 0252     }
                +
00082e 5f0f     +SUBI R16 , LOW ( - 1 )
00082f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000830 cff3      	RJMP _0x10F
                 _0x110:
                 ; 0000 0253     for(k=16;k>0;k--){
                +
000831 e100     +LDI R16 , LOW ( 16 )
000832 e010     +LDI R17 , HIGH ( 16 )
                 	__GETWRN 16,17,16
                 _0x112:
000833 2400      	CLR  R0
000834 1600      	CP   R0,R16
000835 0601      	CPC  R0,R17
000836 f4d4      	BRGE _0x113
                 ; 0000 0254         if ( w<12 ) { glcd_clrpixel( ((w%4)*16)+k , (w/4)*16 + 16 ); }
000837 81aa      	LDD  R26,Y+2
000838 81bb      	LDD  R27,Y+2+1
000839 971c      	SBIW R26,12
00083a f44c      	BRGE _0x114
00083b 940e 1535 	CALL SUBOPT_0x16
00083d 940e 153f 	CALL SUBOPT_0x17
00083f 5fe0      	SUBI R30,-LOW(16)
000840 2fae      	MOV  R26,R30
000841 940e 0eee 	CALL _glcd_clrpixel
                 ; 0000 0255         else { glcd_clrpixel( ((w%4)*16)+k , (w/4)*16 + 15 ); k=k-3; }
000843 c00a      	RJMP _0x115
                 _0x114:
000844 940e 1535 	CALL SUBOPT_0x16
000846 940e 153f 	CALL SUBOPT_0x17
000848 5fe1      	SUBI R30,-LOW(15)
000849 2fae      	MOV  R26,R30
00084a 940e 0eee 	CALL _glcd_clrpixel
                +
00084c 5003     +SUBI R16 , LOW ( 3 )
00084d 4010     +SBCI R17 , HIGH ( 3 )
                 	__SUBWRN 16,17,3
                 _0x115:
                 ; 0000 0256     }
                +
00084e 5001     +SUBI R16 , LOW ( 1 )
00084f 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000850 cfe2      	RJMP _0x112
                 _0x113:
                 ; 0000 0257     for(k=16;k>0;k--){
                +
000851 e100     +LDI R16 , LOW ( 16 )
000852 e010     +LDI R17 , HIGH ( 16 )
                 	__GETWRN 16,17,16
                 _0x117:
000853 2400      	CLR  R0
000854 1600      	CP   R0,R16
000855 0601      	CPC  R0,R17
000856 f45c      	BRGE _0x118
                 ; 0000 0258         glcd_clrpixel( (w%4)*16 , ((w/4)*16) + k );
000857 81ea      	LDD  R30,Y+2
000858 81fb      	LDD  R31,Y+2+1
000859 940e 1558 	CALL SUBOPT_0x19
00085b 02ea      	MULS R30,R26
00085c 920a      	ST   -Y,R0
00085d 940e 154b 	CALL SUBOPT_0x18
                 ; 0000 0259     }
                +
00085f 5001     +SUBI R16 , LOW ( 1 )
000860 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000861 cff1      	RJMP _0x117
                 _0x118:
                 ; 0000 025A }
000862 8119      	LDD  R17,Y+1
000863 8108      	LDD  R16,Y+0
000864 940c 0c64 	JMP  _0x212000E
                 ; .FEND
                 ;
                 ;void save2pattern(int j,int x){
                 ; 0000 025C void save2pattern(int j,int x){
                 _save2pattern:
                 ; .FSTART _save2pattern
                 ; 0000 025D int shifter=0,k=0;
                 ; 0000 025E char binary,buffer_center[2];
                 ; 0000 025F glcd_outtextxy(70,15,"         ");
000866 93ba      	ST   -Y,R27
000867 93aa      	ST   -Y,R26
000868 9722      	SBIW R28,2
000869 940e 1771 	CALL __SAVELOCR6
                 ;	j -> Y+10
                 ;	x -> Y+8
                 ;	shifter -> R16,R17
                 ;	k -> R18,R19
                 ;	binary -> R21
                 ;	buffer_center -> Y+6
00086b 940e 1497 	CALL SUBOPT_0x4
00086d 940e 1510 	CALL SUBOPT_0xF
                +
00086f edad     +LDI R26 , LOW ( _0x119 + ( 0 ) )
000870 e0b3     +LDI R27 , HIGH ( _0x119 + ( 0 ) )
                 	__POINTW2MN _0x119,0
000871 940e 1515 	CALL SUBOPT_0x10
                 ; 0000 0260 glcd_outtextxy(70,20,"         ");
000873 e1e4      	LDI  R30,LOW(20)
000874 93ea      	ST   -Y,R30
                +
000875 eea7     +LDI R26 , LOW ( _0x119 + ( 10 ) )
000876 e0b3     +LDI R27 , HIGH ( _0x119 + ( 10 ) )
                 	__POINTW2MN _0x119,10
000877 940e 1515 	CALL SUBOPT_0x10
                 ; 0000 0261 glcd_outtextxy(70,25,"         ");
000879 e1e9      	LDI  R30,LOW(25)
00087a 93ea      	ST   -Y,R30
                +
00087b efa1     +LDI R26 , LOW ( _0x119 + ( 20 ) )
00087c e0b3     +LDI R27 , HIGH ( _0x119 + ( 20 ) )
                 	__POINTW2MN _0x119,20
00087d 940e 1515 	CALL SUBOPT_0x10
                 ; 0000 0262 glcd_outtextxy(70,30,"         ");
00087f e1ee      	LDI  R30,LOW(30)
000880 93ea      	ST   -Y,R30
                +
000881 efab     +LDI R26 , LOW ( _0x119 + ( 30 ) )
000882 e0b3     +LDI R27 , HIGH ( _0x119 + ( 30 ) )
                 	__POINTW2MN _0x119,30
000883 940e 151a 	CALL SUBOPT_0x11
                 ; 0000 0263 glcd_outtextxy(74,19,"USE KEYS");
000885 e1e3      	LDI  R30,LOW(19)
000886 93ea      	ST   -Y,R30
                +
000887 e0a5     +LDI R26 , LOW ( _0x119 + ( 40 ) )
000888 e0b4     +LDI R27 , HIGH ( _0x119 + ( 40 ) )
                 	__POINTW2MN _0x119,40
000889 940e 151f 	CALL SUBOPT_0x12
                 ; 0000 0264 glcd_outtextxy(77,29,"TO EDIT");
00088b e1ed      	LDI  R30,LOW(29)
00088c 93ea      	ST   -Y,R30
                +
00088d e0ae     +LDI R26 , LOW ( _0x119 + ( 49 ) )
00088e e0b4     +LDI R27 , HIGH ( _0x119 + ( 49 ) )
                 	__POINTW2MN _0x119,49
00088f 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0265 glcd_outtextxy(78,48,"SV");
000891 940e 14d5 	CALL SUBOPT_0xB
                +
000893 e1a6     +LDI R26 , LOW ( _0x119 + ( 57 ) )
000894 e0b4     +LDI R27 , HIGH ( _0x119 + ( 57 ) )
                 	__POINTW2MN _0x119,57
000895 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0266 buffer_center[0]=center[j][x][0];
000897 940e 155e 	CALL SUBOPT_0x1A
000899 940e 1561 	CALL SUBOPT_0x1B
00089b 0fae      	ADD  R26,R30
00089c 1fbf      	ADC  R27,R31
00089d 940e 1750 	CALL __EEPROMRDB
00089f 83ee      	STD  Y+6,R30
                 ; 0000 0267 buffer_center[1]=center[j][x][1];
0008a0 940e 155e 	CALL SUBOPT_0x1A
0008a2 940e 1561 	CALL SUBOPT_0x1B
0008a4 0fae      	ADD  R26,R30
0008a5 1fbf      	ADC  R27,R31
0008a6 9611      	ADIW R26,1
0008a7 940e 1750 	CALL __EEPROMRDB
0008a9 83ef      	STD  Y+7,R30
                 ; 0000 0268 while(1){
                 _0x11A:
                 ; 0000 0269     shifter=keypad();
0008aa dc3d      	RCALL _keypad
0008ab 018f      	MOVW R16,R30
                 ; 0000 026A     if( shifter<8 ){
                +
0008ac 3008     +CPI R16 , LOW ( 8 )
0008ad e0e0     +LDI R30 , HIGH ( 8 )
0008ae 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
0008af f544      	BRGE _0x11D
                 ; 0000 026B         binary = 0b00000001 << shifter ;
0008b0 2fe0      	MOV  R30,R16
0008b1 e0a1      	LDI  R26,LOW(1)
0008b2 940e 16da 	CALL __LSLB12
0008b4 2f5e      	MOV  R21,R30
                 ; 0000 026C         k=0;
                +
0008b5 e020     +LDI R18 , LOW ( 0 )
0008b6 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 ; 0000 026D         if( (buffer_center[k] & binary) == binary ){
0008b7 940e 1567 	CALL SUBOPT_0x1C
0008b9 23e5      	AND  R30,R21
0008ba 175e      	CP   R21,R30
0008bb f459      	BRNE _0x11E
                 ; 0000 026E             glcd_clrpixel( (j%4)*16 + 2 + (shifter%4)*4 , (j/4)*16 + 2 + (shifter/4)*4 );
0008bc 940e 156d 	CALL SUBOPT_0x1D
0008be 940e 1570 	CALL SUBOPT_0x1E
0008c0 940e 1575 	CALL SUBOPT_0x1F
0008c2 940e 1585 	CALL SUBOPT_0x20
0008c4 940e 0eee 	CALL _glcd_clrpixel
                 ; 0000 026F             buffer_center[k]=buffer_center[k] ^ binary ;
0008c6 c00a      	RJMP _0x129
                 ; 0000 0270         }
                 ; 0000 0271         else{
                 _0x11E:
                 ; 0000 0272             glcd_setpixel( (j%4)*16 + 2 + (shifter%4)*4 , (j/4)*16 + 2 + (shifter/4)*4 );
0008c7 940e 156d 	CALL SUBOPT_0x1D
0008c9 940e 1570 	CALL SUBOPT_0x1E
0008cb 940e 1575 	CALL SUBOPT_0x1F
0008cd 940e 1585 	CALL SUBOPT_0x20
0008cf 940e 0ee6 	CALL _glcd_setpixel
                 ; 0000 0273             buffer_center[k]=buffer_center[k] ^ binary ;
                 _0x129:
0008d1 01f9      	MOVW R30,R18
0008d2 940e 158a 	CALL SUBOPT_0x21
0008d4 27e5      	EOR  R30,R21
0008d5 01d0      	MOVW R26,R0
0008d6 93ec      	ST   X,R30
                 ; 0000 0274         }
                 ; 0000 0275     }
                 ; 0000 0276     else if(shifter == 16){
0008d7 c07a      	RJMP _0x120
                 _0x11D:
0008d8 e1e0      	LDI  R30,LOW(16)
0008d9 e0f0      	LDI  R31,HIGH(16)
0008da 17e0      	CP   R30,R16
0008db 07f1      	CPC  R31,R17
0008dc f009      	BREQ PC+2
0008dd c047      	RJMP _0x121
                 ; 0000 0277         center[j][x][0]=buffer_center[0];
0008de 940e 155e 	CALL SUBOPT_0x1A
0008e0 940e 1561 	CALL SUBOPT_0x1B
0008e2 0fae      	ADD  R26,R30
0008e3 1fbf      	ADC  R27,R31
0008e4 81ee      	LDD  R30,Y+6
0008e5 940e 175c 	CALL __EEPROMWRB
                 ; 0000 0278         center[j][x][1]=buffer_center[1];
0008e7 940e 155e 	CALL SUBOPT_0x1A
0008e9 940e 1561 	CALL SUBOPT_0x1B
0008eb 0fae      	ADD  R26,R30
0008ec 1fbf      	ADC  R27,R31
0008ed 9611      	ADIW R26,1
0008ee 81ef      	LDD  R30,Y+7
0008ef 940e 175c 	CALL __EEPROMWRB
                 ; 0000 0279         glcd_outtextxy(70,15,"         ");
0008f1 940e 1510 	CALL SUBOPT_0xF
                +
0008f3 e1a9     +LDI R26 , LOW ( _0x119 + ( 60 ) )
0008f4 e0b4     +LDI R27 , HIGH ( _0x119 + ( 60 ) )
                 	__POINTW2MN _0x119,60
0008f5 940e 1515 	CALL SUBOPT_0x10
                 ; 0000 027A         glcd_outtextxy(70,20,"         ");
0008f7 e1e4      	LDI  R30,LOW(20)
0008f8 93ea      	ST   -Y,R30
                +
0008f9 e2a3     +LDI R26 , LOW ( _0x119 + ( 70 ) )
0008fa e0b4     +LDI R27 , HIGH ( _0x119 + ( 70 ) )
                 	__POINTW2MN _0x119,70
0008fb 940e 1515 	CALL SUBOPT_0x10
                 ; 0000 027B         glcd_outtextxy(70,25,"         ");
0008fd e1e9      	LDI  R30,LOW(25)
0008fe 93ea      	ST   -Y,R30
                +
0008ff e2ad     +LDI R26 , LOW ( _0x119 + ( 80 ) )
000900 e0b4     +LDI R27 , HIGH ( _0x119 + ( 80 ) )
                 	__POINTW2MN _0x119,80
000901 940e 1515 	CALL SUBOPT_0x10
                 ; 0000 027C         glcd_outtextxy(70,30,"         ");
000903 e1ee      	LDI  R30,LOW(30)
000904 93ea      	ST   -Y,R30
                +
000905 e3a7     +LDI R26 , LOW ( _0x119 + ( 90 ) )
000906 e0b4     +LDI R27 , HIGH ( _0x119 + ( 90 ) )
                 	__POINTW2MN _0x119,90
000907 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 027D         glcd_outtextxy(82,20,"BLOCK");
000909 e5e2      	LDI  R30,LOW(82)
00090a 93ea      	ST   -Y,R30
00090b e1e4      	LDI  R30,LOW(20)
00090c 93ea      	ST   -Y,R30
                +
00090d e4a1     +LDI R26 , LOW ( _0x119 + ( 100 ) )
00090e e0b4     +LDI R27 , HIGH ( _0x119 + ( 100 ) )
                 	__POINTW2MN _0x119,100
00090f 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 027E         glcd_outtextxy(78,30,"SAVED !");
000911 e4ee      	LDI  R30,LOW(78)
000912 93ea      	ST   -Y,R30
000913 e1ee      	LDI  R30,LOW(30)
000914 93ea      	ST   -Y,R30
                +
000915 e4a7     +LDI R26 , LOW ( _0x119 + ( 106 ) )
000916 e0b4     +LDI R27 , HIGH ( _0x119 + ( 106 ) )
                 	__POINTW2MN _0x119,106
000917 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 027F         writeapply(x,j);
000919 85e8      	LDD  R30,Y+8
00091a 85f9      	LDD  R31,Y+8+1
00091b 93fa      	ST   -Y,R31
00091c 93ea      	ST   -Y,R30
00091d 85ac      	LDD  R26,Y+12
00091e 85bd      	LDD  R27,Y+12+1
00091f d070      	RCALL _writeapply
                 ; 0000 0280         delay_ms(100);
000920 e6a4      	LDI  R26,LOW(100)
000921 e0b0      	LDI  R27,0
000922 940e 16c8 	CALL _delay_ms
                 ; 0000 0281         break; }
000924 c02e      	RJMP _0x11C
                 ; 0000 0282     else if(shifter == 17){ break; }
                 _0x121:
000925 e1e1      	LDI  R30,LOW(17)
000926 e0f0      	LDI  R31,HIGH(17)
000927 17e0      	CP   R30,R16
000928 07f1      	CPC  R31,R17
000929 f149      	BREQ _0x11C
                 ; 0000 0283     else {
                 ; 0000 0284         binary = 0b00000001 << (shifter-8) ;
00092a 2fe0      	MOV  R30,R16
00092b 50e8      	SUBI R30,LOW(8)
00092c e0a1      	LDI  R26,LOW(1)
00092d 940e 16da 	CALL __LSLB12
00092f 2f5e      	MOV  R21,R30
                 ; 0000 0285         k=1;
                +
000930 e021     +LDI R18 , LOW ( 1 )
000931 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 ; 0000 0286         if( (buffer_center[k] & binary) == binary ){
000932 940e 1567 	CALL SUBOPT_0x1C
000934 23e5      	AND  R30,R21
000935 175e      	CP   R21,R30
000936 f459      	BRNE _0x125
                 ; 0000 0287             glcd_clrpixel( (j%4)*16 + 2 + (shifter%4)*4 , (j/4)*16 + 2 + (shifter/4)*4 );
000937 940e 156d 	CALL SUBOPT_0x1D
000939 940e 1570 	CALL SUBOPT_0x1E
00093b 940e 1575 	CALL SUBOPT_0x1F
00093d 940e 1585 	CALL SUBOPT_0x20
00093f 940e 0eee 	CALL _glcd_clrpixel
                 ; 0000 0288             buffer_center[k]=buffer_center[k] ^ binary ;
000941 c00a      	RJMP _0x12A
                 ; 0000 0289         }
                 ; 0000 028A         else{
                 _0x125:
                 ; 0000 028B             glcd_setpixel( (j%4)*16 + 2 + (shifter%4)*4 , (j/4)*16 + 2 + (shifter/4)*4 );
000942 940e 156d 	CALL SUBOPT_0x1D
000944 940e 1570 	CALL SUBOPT_0x1E
000946 940e 1575 	CALL SUBOPT_0x1F
000948 940e 1585 	CALL SUBOPT_0x20
00094a 940e 0ee6 	CALL _glcd_setpixel
                 ; 0000 028C             buffer_center[k]=buffer_center[k] ^ binary ;
                 _0x12A:
00094c 01f9      	MOVW R30,R18
00094d 940e 158a 	CALL SUBOPT_0x21
00094f 27e5      	EOR  R30,R21
000950 01d0      	MOVW R26,R0
000951 93ec      	ST   X,R30
                 ; 0000 028D         }
                 ; 0000 028E     }
                 _0x120:
                 ; 0000 028F }
000952 cf57      	RJMP _0x11A
                 _0x11C:
                 ; 0000 0290 glcd_outtextxy(70,15,"         ");
000953 940e 1510 	CALL SUBOPT_0xF
                +
000955 e4af     +LDI R26 , LOW ( _0x119 + ( 114 ) )
000956 e0b4     +LDI R27 , HIGH ( _0x119 + ( 114 ) )
                 	__POINTW2MN _0x119,114
000957 940e 1515 	CALL SUBOPT_0x10
                 ; 0000 0291 glcd_outtextxy(70,20,"         ");
000959 e1e4      	LDI  R30,LOW(20)
00095a 93ea      	ST   -Y,R30
                +
00095b e5a9     +LDI R26 , LOW ( _0x119 + ( 124 ) )
00095c e0b4     +LDI R27 , HIGH ( _0x119 + ( 124 ) )
                 	__POINTW2MN _0x119,124
00095d 940e 1515 	CALL SUBOPT_0x10
                 ; 0000 0292 glcd_outtextxy(70,25,"         ");
00095f e1e9      	LDI  R30,LOW(25)
000960 93ea      	ST   -Y,R30
                +
000961 e6a3     +LDI R26 , LOW ( _0x119 + ( 134 ) )
000962 e0b4     +LDI R27 , HIGH ( _0x119 + ( 134 ) )
                 	__POINTW2MN _0x119,134
000963 940e 1515 	CALL SUBOPT_0x10
                 ; 0000 0293 glcd_outtextxy(70,30,"         ");
000965 e1ee      	LDI  R30,LOW(30)
000966 93ea      	ST   -Y,R30
                +
000967 e6ad     +LDI R26 , LOW ( _0x119 + ( 144 ) )
000968 e0b4     +LDI R27 , HIGH ( _0x119 + ( 144 ) )
                 	__POINTW2MN _0x119,144
000969 940e 151a 	CALL SUBOPT_0x11
                 ; 0000 0294 glcd_outtextxy(74,19,"PRESS ED");
00096b e1e3      	LDI  R30,LOW(19)
00096c 93ea      	ST   -Y,R30
                +
00096d e7a7     +LDI R26 , LOW ( _0x119 + ( 154 ) )
00096e e0b4     +LDI R27 , HIGH ( _0x119 + ( 154 ) )
                 	__POINTW2MN _0x119,154
00096f 940e 151f 	CALL SUBOPT_0x12
                 ; 0000 0295 glcd_outtextxy(77,29,"TO EDIT");
000971 e1ed      	LDI  R30,LOW(29)
000972 93ea      	ST   -Y,R30
                +
000973 e8a0     +LDI R26 , LOW ( _0x119 + ( 163 ) )
000974 e0b4     +LDI R27 , HIGH ( _0x119 + ( 163 ) )
                 	__POINTW2MN _0x119,163
000975 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0296 glcd_outtextxy(78,48,"ED");
000977 940e 14d5 	CALL SUBOPT_0xB
                +
000979 e8a8     +LDI R26 , LOW ( _0x119 + ( 171 ) )
00097a e0b4     +LDI R27 , HIGH ( _0x119 + ( 171 ) )
                 	__POINTW2MN _0x119,171
00097b 940e 0fdc 	CALL _glcd_outtextxy
                 ; 0000 0297 }
00097d 940e 1778 	CALL __LOADLOCR6
00097f 962c      	ADIW R28,12
000980 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x119:
0003dd           	.BYTE 0xAE
                 ;
                 ;void patternapply(int d){
                 ; 0000 0299 void patternapply(int d){
                 
                 	.CSEG
                 _patternapply:
                 ; .FSTART _patternapply
                 ; 0000 029A     char temp,select=0b10001111;
                 ; 0000 029B     temp = d << 4 ;
000981 940e 1590 	CALL SUBOPT_0x22
                 ;	d -> Y+2
                 ;	temp -> R17
                 ;	select -> R16
000983 e80f      	LDI  R16,143
000984 81ea      	LDD  R30,Y+2
000985 95e2      	SWAP R30
000986 7fe0      	ANDI R30,0xF0
000987 2f1e      	MOV  R17,R30
                 ; 0000 029C     temp = select ^ temp ;
000988 2710      	EOR  R17,R16
                 ; 0000 029D //    putchar('X');
                 ; 0000 029E //    delay_us(50);
                 ; 0000 029F     putchar(temp);
000989 2fa1      	MOV  R26,R17
00098a 940e 02fd 	CALL _putchar
                 ; 0000 02A0 //    delay_us(50);
                 ; 0000 02A1 //    putchar('Z') ;
                 ; 0000 02A2 }
00098c 8119      	LDD  R17,Y+1
00098d 8108      	LDD  R16,Y+0
00098e 940c 0c64 	JMP  _0x212000E
                 ; .FEND
                 ;
                 ;void writeapply(int d,int w){
                 ; 0000 02A4 void writeapply(int d,int w){
                 _writeapply:
                 ; .FSTART _writeapply
                 ; 0000 02A5 char temp,write=0b00000000;
                 ; 0000 02A6 temp = d << 4 ;
000990 940e 1590 	CALL SUBOPT_0x22
                 ;	d -> Y+4
                 ;	w -> Y+2
                 ;	temp -> R17
                 ;	write -> R16
000992 e000      	LDI  R16,0
000993 81ec      	LDD  R30,Y+4
000994 95e2      	SWAP R30
000995 7fe0      	ANDI R30,0xF0
000996 2f1e      	MOV  R17,R30
                 ; 0000 02A7 write = write ^ temp ;
000997 2701      	EOR  R16,R17
                 ; 0000 02A8 temp = w << 0 ;
000998 811a      	LDD  R17,Y+2
                 ; 0000 02A9 write = write ^ temp ;
000999 2701      	EOR  R16,R17
                 ; 0000 02AA //putchar('X');
                 ; 0000 02AB //delay_us(100);
                 ; 0000 02AC putchar(write);
00099a 2fa0      	MOV  R26,R16
00099b 940e 1595 	CALL SUBOPT_0x23
                 ; 0000 02AD delay_us(100);
                 ; 0000 02AE putchar(center[w][d][0]);
00099d 01df      	MOVW R26,R30
00099e 81ec      	LDD  R30,Y+4
00099f 81fd      	LDD  R31,Y+4+1
0009a0 0fee      	LSL  R30
0009a1 1fff      	ROL  R31
0009a2 0fae      	ADD  R26,R30
0009a3 1fbf      	ADC  R27,R31
0009a4 940e 1750 	CALL __EEPROMRDB
0009a6 2fae      	MOV  R26,R30
0009a7 940e 1595 	CALL SUBOPT_0x23
                 ; 0000 02AF delay_us(100);
                 ; 0000 02B0 putchar(center[w][d][1]);
0009a9 01df      	MOVW R26,R30
0009aa 81ec      	LDD  R30,Y+4
0009ab 81fd      	LDD  R31,Y+4+1
0009ac 0fee      	LSL  R30
0009ad 1fff      	ROL  R31
0009ae 0fae      	ADD  R26,R30
0009af 1fbf      	ADC  R27,R31
0009b0 9611      	ADIW R26,1
0009b1 940e 1750 	CALL __EEPROMRDB
0009b3 2fae      	MOV  R26,R30
0009b4 940e 02fd 	CALL _putchar
                 ; 0000 02B1 //delay_us(100);
                 ; 0000 02B2 //putchar('Z') ;
                 ; 0000 02B3 }
0009b6 8119      	LDD  R17,Y+1
0009b7 8108      	LDD  R16,Y+0
0009b8 940c 0cdd 	JMP  _0x212000B
                 ; .FEND
                 ;
                 ;//void defaultpattern(void){
                 ;//int block=0,pattern=0,row=0;
                 ;//int num =0b11011101;
                 ;//for(block=0;block<16;block++){
                 ;//    for(pattern=0;pattern<8;pattern++){
                 ;//        for(row=0;row<2;row++){
                 ;//            center[block][pattern][row]= num;
                 ;//            num++;
                 ;//        }
                 ;//    }
                 ;//num=0b11011101;
                 ;//}
                 ;//}
                 ;
                 ;
                 ;
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
0009ba 940e 1590 	CALL SUBOPT_0x22
0009bc 81aa      	LDD  R26,Y+2
0009bd 81bb      	LDD  R27,Y+2+1
0009be 9612      	ADIW R26,2
0009bf 940e 1743 	CALL __GETW1P
0009c1 9730      	SBIW R30,0
0009c2 f159      	BREQ _0x2020010
0009c3 81aa      	LDD  R26,Y+2
0009c4 81bb      	LDD  R27,Y+2+1
0009c5 9614      	ADIW R26,4
0009c6 940e 1743 	CALL __GETW1P
0009c8 018f      	MOVW R16,R30
0009c9 9730      	SBIW R30,0
0009ca f061      	BREQ _0x2020012
                +
0009cb 3002     +CPI R16 , LOW ( 2 )
0009cc e0e0     +LDI R30 , HIGH ( 2 )
0009cd 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0009ce f098      	BRLO _0x2020013
0009cf 01f8      	MOVW R30,R16
0009d0 9731      	SBIW R30,1
0009d1 018f      	MOVW R16,R30
                +
0009d2 81aa     +LDD R26 , Y + 2
0009d3 81bb     +LDD R27 , Y + 2 + 1
0009d4 9614     +ADIW R26 , 4
0009d5 93ed     +ST X + , R30
0009d6 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0009d7 81aa      	LDD  R26,Y+2
0009d8 81bb      	LDD  R27,Y+2+1
0009d9 9612      	ADIW R26,2
0009da 91ed      	LD   R30,X+
0009db 91fd      	LD   R31,X+
0009dc 9631      	ADIW R30,1
0009dd 93fe      	ST   -X,R31
0009de 93ee      	ST   -X,R30
0009df 9731      	SBIW R30,1
0009e0 81ac      	LDD  R26,Y+4
0009e1 83a0      	STD  Z+0,R26
                 _0x2020013:
0009e2 81aa      	LDD  R26,Y+2
0009e3 81bb      	LDD  R27,Y+2+1
0009e4 940e 1743 	CALL __GETW1P
0009e6 23ff      	TST  R31
0009e7 f02a      	BRMI _0x2020014
0009e8 91ed      	LD   R30,X+
0009e9 91fd      	LD   R31,X+
0009ea 9631      	ADIW R30,1
0009eb 93fe      	ST   -X,R31
0009ec 93ee      	ST   -X,R30
                 _0x2020014:
0009ed c006      	RJMP _0x2020015
                 _0x2020010:
0009ee 81aa      	LDD  R26,Y+2
0009ef 81bb      	LDD  R27,Y+2+1
0009f0 efef      	LDI  R30,LOW(65535)
0009f1 efff      	LDI  R31,HIGH(65535)
0009f2 93ed      	ST   X+,R30
0009f3 93fc      	ST   X,R31
                 _0x2020015:
0009f4 940c 0c86 	JMP  _0x212000D
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0009f6 93ba      	ST   -Y,R27
0009f7 93aa      	ST   -Y,R26
0009f8 9726      	SBIW R28,6
0009f9 940e 1771 	CALL __SAVELOCR6
0009fb e010      	LDI  R17,0
0009fc 85ac      	LDD  R26,Y+12
0009fd 85bd      	LDD  R27,Y+12+1
0009fe e0e0      	LDI  R30,LOW(0)
0009ff e0f0      	LDI  R31,HIGH(0)
000a00 93ed      	ST   X+,R30
000a01 93fc      	ST   X,R31
                 _0x2020016:
000a02 89ea      	LDD  R30,Y+18
000a03 89fb      	LDD  R31,Y+18+1
000a04 9631      	ADIW R30,1
000a05 8bea      	STD  Y+18,R30
000a06 8bfb      	STD  Y+18+1,R31
000a07 9731      	SBIW R30,1
000a08 91e4      	LPM  R30,Z
000a09 2f2e      	MOV  R18,R30
000a0a 30e0      	CPI  R30,0
000a0b f409      	BRNE PC+2
000a0c c115      	RJMP _0x2020018
000a0d 2fe1      	MOV  R30,R17
000a0e 30e0      	CPI  R30,0
000a0f f439      	BRNE _0x202001C
000a10 3225      	CPI  R18,37
000a11 f411      	BRNE _0x202001D
000a12 e011      	LDI  R17,LOW(1)
000a13 c002      	RJMP _0x202001E
                 _0x202001D:
000a14 940e 159e 	CALL SUBOPT_0x24
                 _0x202001E:
000a16 c10a      	RJMP _0x202001B
                 _0x202001C:
000a17 30e1      	CPI  R30,LOW(0x1)
000a18 f4a9      	BRNE _0x202001F
000a19 3225      	CPI  R18,37
000a1a f419      	BRNE _0x2020020
000a1b 940e 159e 	CALL SUBOPT_0x24
000a1d c102      	RJMP _0x20200CC
                 _0x2020020:
000a1e e012      	LDI  R17,LOW(2)
000a1f e040      	LDI  R20,LOW(0)
000a20 e000      	LDI  R16,LOW(0)
000a21 322d      	CPI  R18,45
000a22 f411      	BRNE _0x2020021
000a23 e001      	LDI  R16,LOW(1)
000a24 c0fc      	RJMP _0x202001B
                 _0x2020021:
000a25 322b      	CPI  R18,43
000a26 f411      	BRNE _0x2020022
000a27 e24b      	LDI  R20,LOW(43)
000a28 c0f8      	RJMP _0x202001B
                 _0x2020022:
000a29 3220      	CPI  R18,32
000a2a f411      	BRNE _0x2020023
000a2b e240      	LDI  R20,LOW(32)
000a2c c0f4      	RJMP _0x202001B
                 _0x2020023:
000a2d c002      	RJMP _0x2020024
                 _0x202001F:
000a2e 30e2      	CPI  R30,LOW(0x2)
000a2f f439      	BRNE _0x2020025
                 _0x2020024:
000a30 e050      	LDI  R21,LOW(0)
000a31 e013      	LDI  R17,LOW(3)
000a32 3320      	CPI  R18,48
000a33 f411      	BRNE _0x2020026
000a34 6800      	ORI  R16,LOW(128)
000a35 c0eb      	RJMP _0x202001B
                 _0x2020026:
000a36 c003      	RJMP _0x2020027
                 _0x2020025:
000a37 30e3      	CPI  R30,LOW(0x3)
000a38 f009      	BREQ PC+2
000a39 c0e7      	RJMP _0x202001B
                 _0x2020027:
000a3a 3320      	CPI  R18,48
000a3b f010      	BRLO _0x202002A
000a3c 332a      	CPI  R18,58
000a3d f008      	BRLO _0x202002B
                 _0x202002A:
000a3e c007      	RJMP _0x2020029
                 _0x202002B:
000a3f e0aa      	LDI  R26,LOW(10)
000a40 9f5a      	MUL  R21,R26
000a41 2d50      	MOV  R21,R0
000a42 2fe2      	MOV  R30,R18
000a43 53e0      	SUBI R30,LOW(48)
000a44 0f5e      	ADD  R21,R30
000a45 c0db      	RJMP _0x202001B
                 _0x2020029:
000a46 2fe2      	MOV  R30,R18
000a47 36e3      	CPI  R30,LOW(0x63)
000a48 f449      	BRNE _0x202002F
000a49 940e 15a5 	CALL SUBOPT_0x25
000a4b 89e8      	LDD  R30,Y+16
000a4c 89f9      	LDD  R31,Y+16+1
000a4d 81a4      	LDD  R26,Z+4
000a4e 93aa      	ST   -Y,R26
000a4f 940e 15ab 	CALL SUBOPT_0x26
000a51 c0ce      	RJMP _0x2020030
                 _0x202002F:
000a52 37e3      	CPI  R30,LOW(0x73)
000a53 f441      	BRNE _0x2020032
000a54 940e 15a5 	CALL SUBOPT_0x25
000a56 940e 15b1 	CALL SUBOPT_0x27
000a58 940e 13fb 	CALL _strlen
000a5a 2f1e      	MOV  R17,R30
000a5b c00a      	RJMP _0x2020033
                 _0x2020032:
000a5c 37e0      	CPI  R30,LOW(0x70)
000a5d f461      	BRNE _0x2020035
000a5e 940e 15a5 	CALL SUBOPT_0x25
000a60 940e 15b1 	CALL SUBOPT_0x27
000a62 940e 1407 	CALL _strlenf
000a64 2f1e      	MOV  R17,R30
000a65 6008      	ORI  R16,LOW(8)
                 _0x2020033:
000a66 6002      	ORI  R16,LOW(2)
000a67 770f      	ANDI R16,LOW(127)
000a68 e030      	LDI  R19,LOW(0)
000a69 c034      	RJMP _0x2020036
                 _0x2020035:
000a6a 36e4      	CPI  R30,LOW(0x64)
000a6b f011      	BREQ _0x2020039
000a6c 36e9      	CPI  R30,LOW(0x69)
000a6d f411      	BRNE _0x202003A
                 _0x2020039:
000a6e 6004      	ORI  R16,LOW(4)
000a6f c002      	RJMP _0x202003B
                 _0x202003A:
000a70 37e5      	CPI  R30,LOW(0x75)
000a71 f431      	BRNE _0x202003C
                 _0x202003B:
000a72 e3ec      	LDI  R30,LOW(_tbl10_G101*2)
000a73 e0f2      	LDI  R31,HIGH(_tbl10_G101*2)
000a74 83ee      	STD  Y+6,R30
000a75 83ff      	STD  Y+6+1,R31
000a76 e015      	LDI  R17,LOW(5)
000a77 c00c      	RJMP _0x202003D
                 _0x202003C:
000a78 35e8      	CPI  R30,LOW(0x58)
000a79 f411      	BRNE _0x202003F
000a7a 6008      	ORI  R16,LOW(8)
000a7b c003      	RJMP _0x2020040
                 _0x202003F:
000a7c 37e8      	CPI  R30,LOW(0x78)
000a7d f009      	BREQ PC+2
000a7e c0a1      	RJMP _0x2020071
                 _0x2020040:
000a7f e4e6      	LDI  R30,LOW(_tbl16_G101*2)
000a80 e0f2      	LDI  R31,HIGH(_tbl16_G101*2)
000a81 83ee      	STD  Y+6,R30
000a82 83ff      	STD  Y+6+1,R31
000a83 e014      	LDI  R17,LOW(4)
                 _0x202003D:
000a84 ff02      	SBRS R16,2
000a85 c014      	RJMP _0x2020042
000a86 940e 15a5 	CALL SUBOPT_0x25
000a88 940e 15bb 	CALL SUBOPT_0x28
000a8a 85ab      	LDD  R26,Y+11
000a8b 23aa      	TST  R26
000a8c f43a      	BRPL _0x2020043
000a8d 85ea      	LDD  R30,Y+10
000a8e 85fb      	LDD  R31,Y+10+1
000a8f 940e 16d6 	CALL __ANEGW1
000a91 87ea      	STD  Y+10,R30
000a92 87fb      	STD  Y+10+1,R31
000a93 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000a94 3040      	CPI  R20,0
000a95 f011      	BREQ _0x2020044
000a96 5f1f      	SUBI R17,-LOW(1)
000a97 c001      	RJMP _0x2020045
                 _0x2020044:
000a98 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
000a99 c004      	RJMP _0x2020046
                 _0x2020042:
000a9a 940e 15a5 	CALL SUBOPT_0x25
000a9c 940e 15bb 	CALL SUBOPT_0x28
                 _0x2020046:
                 _0x2020036:
000a9e fd00      	SBRC R16,0
000a9f c011      	RJMP _0x2020047
                 _0x2020048:
000aa0 1715      	CP   R17,R21
000aa1 f478      	BRSH _0x202004A
000aa2 ff07      	SBRS R16,7
000aa3 c008      	RJMP _0x202004B
000aa4 ff02      	SBRS R16,2
000aa5 c004      	RJMP _0x202004C
000aa6 7f0b      	ANDI R16,LOW(251)
000aa7 2f24      	MOV  R18,R20
000aa8 5011      	SUBI R17,LOW(1)
000aa9 c001      	RJMP _0x202004D
                 _0x202004C:
000aaa e320      	LDI  R18,LOW(48)
                 _0x202004D:
000aab c001      	RJMP _0x202004E
                 _0x202004B:
000aac e220      	LDI  R18,LOW(32)
                 _0x202004E:
000aad 940e 159e 	CALL SUBOPT_0x24
000aaf 5051      	SUBI R21,LOW(1)
000ab0 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000ab1 2f31      	MOV  R19,R17
000ab2 ff01      	SBRS R16,1
000ab3 c017      	RJMP _0x202004F
                 _0x2020050:
000ab4 3030      	CPI  R19,0
000ab5 f0a1      	BREQ _0x2020052
000ab6 ff03      	SBRS R16,3
000ab7 c006      	RJMP _0x2020053
000ab8 81ee      	LDD  R30,Y+6
000ab9 81ff      	LDD  R31,Y+6+1
000aba 9125      	LPM  R18,Z+
000abb 83ee      	STD  Y+6,R30
000abc 83ff      	STD  Y+6+1,R31
000abd c005      	RJMP _0x2020054
                 _0x2020053:
000abe 81ae      	LDD  R26,Y+6
000abf 81bf      	LDD  R27,Y+6+1
000ac0 912d      	LD   R18,X+
000ac1 83ae      	STD  Y+6,R26
000ac2 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000ac3 940e 159e 	CALL SUBOPT_0x24
000ac5 3050      	CPI  R21,0
000ac6 f009      	BREQ _0x2020055
000ac7 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000ac8 5031      	SUBI R19,LOW(1)
000ac9 cfea      	RJMP _0x2020050
                 _0x2020052:
000aca c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000acb e320      	LDI  R18,LOW(48)
000acc 81ee      	LDD  R30,Y+6
000acd 81ff      	LDD  R31,Y+6+1
000ace 940e 1747 	CALL __GETW1PF
000ad0 87e8      	STD  Y+8,R30
000ad1 87f9      	STD  Y+8+1,R31
000ad2 81ee      	LDD  R30,Y+6
000ad3 81ff      	LDD  R31,Y+6+1
000ad4 9632      	ADIW R30,2
000ad5 83ee      	STD  Y+6,R30
000ad6 83ff      	STD  Y+6+1,R31
                 _0x202005A:
000ad7 85e8      	LDD  R30,Y+8
000ad8 85f9      	LDD  R31,Y+8+1
000ad9 85aa      	LDD  R26,Y+10
000ada 85bb      	LDD  R27,Y+10+1
000adb 17ae      	CP   R26,R30
000adc 07bf      	CPC  R27,R31
000add f050      	BRLO _0x202005C
000ade 5f2f      	SUBI R18,-LOW(1)
000adf 85a8      	LDD  R26,Y+8
000ae0 85b9      	LDD  R27,Y+8+1
000ae1 85ea      	LDD  R30,Y+10
000ae2 85fb      	LDD  R31,Y+10+1
000ae3 1bea      	SUB  R30,R26
000ae4 0bfb      	SBC  R31,R27
000ae5 87ea      	STD  Y+10,R30
000ae6 87fb      	STD  Y+10+1,R31
000ae7 cfef      	RJMP _0x202005A
                 _0x202005C:
000ae8 332a      	CPI  R18,58
000ae9 f028      	BRLO _0x202005D
000aea ff03      	SBRS R16,3
000aeb c002      	RJMP _0x202005E
000aec 5f29      	SUBI R18,-LOW(7)
000aed c001      	RJMP _0x202005F
                 _0x202005E:
000aee 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
000aef fd04      	SBRC R16,4
000af0 c01a      	RJMP _0x2020061
000af1 3321      	CPI  R18,49
000af2 f420      	BRSH _0x2020063
000af3 85a8      	LDD  R26,Y+8
000af4 85b9      	LDD  R27,Y+8+1
000af5 9711      	SBIW R26,1
000af6 f409      	BRNE _0x2020062
                 _0x2020063:
000af7 c009      	RJMP _0x20200CD
                 _0x2020062:
000af8 1753      	CP   R21,R19
000af9 f010      	BRLO _0x2020067
000afa ff00      	SBRS R16,0
000afb c001      	RJMP _0x2020068
                 _0x2020067:
000afc c013      	RJMP _0x2020066
                 _0x2020068:
000afd e220      	LDI  R18,LOW(32)
000afe ff07      	SBRS R16,7
000aff c00b      	RJMP _0x2020069
000b00 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
000b01 6100      	ORI  R16,LOW(16)
000b02 ff02      	SBRS R16,2
000b03 c007      	RJMP _0x202006A
000b04 7f0b      	ANDI R16,LOW(251)
000b05 934a      	ST   -Y,R20
000b06 940e 15ab 	CALL SUBOPT_0x26
000b08 3050      	CPI  R21,0
000b09 f009      	BREQ _0x202006B
000b0a 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000b0b 940e 159e 	CALL SUBOPT_0x24
000b0d 3050      	CPI  R21,0
000b0e f009      	BREQ _0x202006C
000b0f 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000b10 5031      	SUBI R19,LOW(1)
000b11 85a8      	LDD  R26,Y+8
000b12 85b9      	LDD  R27,Y+8+1
000b13 9712      	SBIW R26,2
000b14 f008      	BRLO _0x2020059
000b15 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
000b16 ff00      	SBRS R16,0
000b17 c008      	RJMP _0x202006D
                 _0x202006E:
000b18 3050      	CPI  R21,0
000b19 f031      	BREQ _0x2020070
000b1a 5051      	SUBI R21,LOW(1)
000b1b e2e0      	LDI  R30,LOW(32)
000b1c 93ea      	ST   -Y,R30
000b1d 940e 15ab 	CALL SUBOPT_0x26
000b1f cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
000b20 e010      	LDI  R17,LOW(0)
                 _0x202001B:
000b21 cee0      	RJMP _0x2020016
                 _0x2020018:
000b22 85ac      	LDD  R26,Y+12
000b23 85bd      	LDD  R27,Y+12+1
000b24 940e 1743 	CALL __GETW1P
000b26 940e 1778 	CALL __LOADLOCR6
000b28 9664      	ADIW R28,20
000b29 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000b2a 92ff      	PUSH R15
000b2b 2ef8      	MOV  R15,R24
000b2c 9726      	SBIW R28,6
000b2d 940e 1773 	CALL __SAVELOCR4
000b2f 940e 15c3 	CALL SUBOPT_0x29
000b31 9730      	SBIW R30,0
000b32 f419      	BRNE _0x2020072
000b33 efef      	LDI  R30,LOW(65535)
000b34 efff      	LDI  R31,HIGH(65535)
000b35 c023      	RJMP _0x212000F
                 _0x2020072:
000b36 01de      	MOVW R26,R28
000b37 9616      	ADIW R26,6
000b38 940e 16d2 	CALL __ADDW2R15
000b3a 018d      	MOVW R16,R26
000b3b 940e 15c3 	CALL SUBOPT_0x29
000b3d 83ee      	STD  Y+6,R30
000b3e 83ff      	STD  Y+6+1,R31
000b3f e0e0      	LDI  R30,LOW(0)
000b40 87e8      	STD  Y+8,R30
000b41 87e9      	STD  Y+8+1,R30
000b42 01de      	MOVW R26,R28
000b43 961a      	ADIW R26,10
000b44 940e 16d2 	CALL __ADDW2R15
000b46 940e 1743 	CALL __GETW1P
000b48 93fa      	ST   -Y,R31
000b49 93ea      	ST   -Y,R30
000b4a 931a      	ST   -Y,R17
000b4b 930a      	ST   -Y,R16
000b4c ebea      	LDI  R30,LOW(_put_buff_G101)
000b4d e0f9      	LDI  R31,HIGH(_put_buff_G101)
000b4e 93fa      	ST   -Y,R31
000b4f 93ea      	ST   -Y,R30
000b50 01de      	MOVW R26,R28
000b51 961a      	ADIW R26,10
000b52 dea3      	RCALL __print_G101
000b53 019f      	MOVW R18,R30
000b54 81ae      	LDD  R26,Y+6
000b55 81bf      	LDD  R27,Y+6+1
000b56 e0e0      	LDI  R30,LOW(0)
000b57 93ec      	ST   X,R30
000b58 01f9      	MOVW R30,R18
                 _0x212000F:
000b59 940e 177a 	CALL __LOADLOCR4
000b5b 962a      	ADIW R28,10
000b5c 90ff      	POP  R15
000b5d 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _ks0108_enable_G102:
                 ; .FSTART _ks0108_enable_G102
000b5e 0000      	nop
000b5f 9ac4      	SBI  0x18,4
000b60 0000      	nop
000b61 9508      	RET
                 ; .FEND
                 _ks0108_disable_G102:
                 ; .FSTART _ks0108_disable_G102
000b62 98c4      	CBI  0x18,4
000b63 98c5      	CBI  0x18,5
000b64 98c6      	CBI  0x18,6
000b65 9508      	RET
                 ; .FEND
                 _ks0108_rdbus_G102:
                 ; .FSTART _ks0108_rdbus_G102
000b66 931a      	ST   -Y,R17
000b67 dff6      	RCALL _ks0108_enable_G102
000b68 b313      	IN   R17,19
000b69 98c4      	CBI  0x18,4
000b6a 2fe1      	MOV  R30,R17
000b6b 9119      	LD   R17,Y+
000b6c 9508      	RET
                 ; .FEND
                 _ks0108_busy_G102:
                 ; .FSTART _ks0108_busy_G102
000b6d 93aa      	ST   -Y,R26
000b6e 931a      	ST   -Y,R17
000b6f e0e0      	LDI  R30,LOW(0)
000b70 bbe4      	OUT  0x14,R30
000b71 9ac3      	SBI  0x18,3
000b72 98c1      	CBI  0x18,1
000b73 81e9      	LDD  R30,Y+1
000b74 5fef      	SUBI R30,-LOW(1)
000b75 2f1e      	MOV  R17,R30
000b76 ff10      	SBRS R17,0
000b77 c002      	RJMP _0x2040003
000b78 9ac5      	SBI  0x18,5
000b79 c001      	RJMP _0x2040004
                 _0x2040003:
000b7a 98c5      	CBI  0x18,5
                 _0x2040004:
000b7b ff11      	SBRS R17,1
000b7c c002      	RJMP _0x2040005
000b7d 9ac6      	SBI  0x18,6
000b7e c001      	RJMP _0x2040006
                 _0x2040005:
000b7f 98c6      	CBI  0x18,6
                 _0x2040006:
                 _0x2040007:
000b80 dfe5      	RCALL _ks0108_rdbus_G102
000b81 78e0      	ANDI R30,LOW(0x80)
000b82 f7e9      	BRNE _0x2040007
000b83 8118      	LDD  R17,Y+0
000b84 c11d      	RJMP _0x212000C
                 ; .FEND
                 _ks0108_wrcmd_G102:
                 ; .FSTART _ks0108_wrcmd_G102
000b85 93aa      	ST   -Y,R26
000b86 81a9      	LDD  R26,Y+1
000b87 dfe5      	RCALL _ks0108_busy_G102
000b88 940e 15ca 	CALL SUBOPT_0x2A
000b8a c117      	RJMP _0x212000C
                 ; .FEND
                 _ks0108_setloc_G102:
                 ; .FSTART _ks0108_setloc_G102
                +
000b8b 91e0 04c4+LDS R30 , _ks0108_coord_G102 + ( 1 )
                 	__GETB1MN _ks0108_coord_G102,1
000b8d 93ea      	ST   -Y,R30
000b8e 91e0 04c3 	LDS  R30,_ks0108_coord_G102
000b90 73ef      	ANDI R30,LOW(0x3F)
000b91 64e0      	ORI  R30,0x40
000b92 2fae      	MOV  R26,R30
000b93 dff1      	RCALL _ks0108_wrcmd_G102
                +
000b94 91e0 04c4+LDS R30 , _ks0108_coord_G102 + ( 1 )
                 	__GETB1MN _ks0108_coord_G102,1
000b96 93ea      	ST   -Y,R30
                +
000b97 91e0 04c5+LDS R30 , _ks0108_coord_G102 + ( 2 )
                 	__GETB1MN _ks0108_coord_G102,2
000b99 6be8      	ORI  R30,LOW(0xB8)
000b9a 2fae      	MOV  R26,R30
000b9b dfe9      	RCALL _ks0108_wrcmd_G102
000b9c 9508      	RET
                 ; .FEND
                 _ks0108_gotoxp_G102:
                 ; .FSTART _ks0108_gotoxp_G102
000b9d 93aa      	ST   -Y,R26
000b9e 81e9      	LDD  R30,Y+1
000b9f 93e0 04c3 	STS  _ks0108_coord_G102,R30
000ba1 95e2      	SWAP R30
000ba2 70ef      	ANDI R30,0xF
000ba3 95e6      	LSR  R30
000ba4 95e6      	LSR  R30
                +
000ba5 93e0 04c4+STS _ks0108_coord_G102 + ( 1 ) , R30
                 	__PUTB1MN _ks0108_coord_G102,1
000ba7 81e8      	LD   R30,Y
                +
000ba8 93e0 04c5+STS _ks0108_coord_G102 + ( 2 ) , R30
                 	__PUTB1MN _ks0108_coord_G102,2
000baa dfe0      	RCALL _ks0108_setloc_G102
000bab c0f6      	RJMP _0x212000C
                 ; .FEND
                 _ks0108_nextx_G102:
                 ; .FSTART _ks0108_nextx_G102
000bac 91a0 04c3 	LDS  R26,_ks0108_coord_G102
000bae 5faf      	SUBI R26,-LOW(1)
000baf 93a0 04c3 	STS  _ks0108_coord_G102,R26
000bb1 38a0      	CPI  R26,LOW(0x80)
000bb2 f018      	BRLO _0x204000A
000bb3 e0e0      	LDI  R30,LOW(0)
000bb4 93e0 04c3 	STS  _ks0108_coord_G102,R30
                 _0x204000A:
000bb6 91e0 04c3 	LDS  R30,_ks0108_coord_G102
000bb8 73ef      	ANDI R30,LOW(0x3F)
000bb9 f431      	BRNE _0x204000B
000bba 91e0 04c3 	LDS  R30,_ks0108_coord_G102
000bbc 93ea      	ST   -Y,R30
                +
000bbd 91a0 04c5+LDS R26 , _ks0108_coord_G102 + ( 2 )
                 	__GETB2MN _ks0108_coord_G102,2
000bbf dfdd      	RCALL _ks0108_gotoxp_G102
                 _0x204000B:
000bc0 9508      	RET
                 ; .FEND
                 _ks0108_wrdata_G102:
                 ; .FSTART _ks0108_wrdata_G102
000bc1 93aa      	ST   -Y,R26
                +
000bc2 91a0 04c4+LDS R26 , _ks0108_coord_G102 + ( 1 )
                 	__GETB2MN _ks0108_coord_G102,1
000bc4 dfa8      	RCALL _ks0108_busy_G102
000bc5 9ac1      	SBI  0x18,1
000bc6 940e 15ca 	CALL SUBOPT_0x2A
000bc8 9621      	ADIW R28,1
000bc9 9508      	RET
                 ; .FEND
                 _ks0108_rddata_G102:
                 ; .FSTART _ks0108_rddata_G102
                +
000bca 91a0 04c4+LDS R26 , _ks0108_coord_G102 + ( 1 )
                 	__GETB2MN _ks0108_coord_G102,1
000bcc dfa0      	RCALL _ks0108_busy_G102
000bcd e0e0      	LDI  R30,LOW(0)
000bce bbe4      	OUT  0x14,R30
000bcf 9ac3      	SBI  0x18,3
000bd0 9ac1      	SBI  0x18,1
000bd1 df94      	RCALL _ks0108_rdbus_G102
000bd2 9508      	RET
                 ; .FEND
                 _ks0108_rdbyte_G102:
                 ; .FSTART _ks0108_rdbyte_G102
000bd3 940e 15d3 	CALL SUBOPT_0x2B
000bd5 940e 15d8 	CALL SUBOPT_0x2C
000bd7 dff2      	RCALL _ks0108_rddata_G102
000bd8 dfb2      	RCALL _ks0108_setloc_G102
000bd9 dff0      	RCALL _ks0108_rddata_G102
000bda c0c7      	RJMP _0x212000C
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
000bdb 93ba      	ST   -Y,R27
000bdc 93aa      	ST   -Y,R26
000bdd 931a      	ST   -Y,R17
000bde 9abc      	SBI  0x17,4
000bdf 9abb      	SBI  0x17,3
000be0 9ab9      	SBI  0x17,1
000be1 9ab8      	SBI  0x17,0
000be2 9ac0      	SBI  0x18,0
000be3 9abd      	SBI  0x17,5
000be4 9abe      	SBI  0x17,6
000be5 df7c      	RCALL _ks0108_disable_G102
000be6 98c0      	CBI  0x18,0
000be7 e6a4      	LDI  R26,LOW(100)
000be8 e0b0      	LDI  R27,0
000be9 940e 16c8 	CALL _delay_ms
000beb 9ac0      	SBI  0x18,0
000bec e010      	LDI  R17,LOW(0)
                 _0x204000C:
000bed 3012      	CPI  R17,2
000bee f440      	BRSH _0x204000E
000bef 931a      	ST   -Y,R17
000bf0 e3af      	LDI  R26,LOW(63)
000bf1 df93      	RCALL _ks0108_wrcmd_G102
000bf2 931a      	ST   -Y,R17
000bf3 9513      	INC  R17
000bf4 eca0      	LDI  R26,LOW(192)
000bf5 df8f      	RCALL _ks0108_wrcmd_G102
000bf6 cff6      	RJMP _0x204000C
                 _0x204000E:
000bf7 e0e1      	LDI  R30,LOW(1)
000bf8 93e0 048b 	STS  _glcd_state,R30
000bfa e0e0      	LDI  R30,LOW(0)
                +
000bfb 93e0 048c+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
000bfd 81e9      	LDD  R30,Y+1
000bfe 81fa      	LDD  R31,Y+1+1
000bff 9730      	SBIW R30,0
000c00 f0a9      	BREQ _0x204000F
000c01 81a9      	LDD  R26,Y+1
000c02 81ba      	LDD  R27,Y+1+1
000c03 940e 1743 	CALL __GETW1P
                +
000c05 93e0 048f+STS _glcd_state + ( 4 ) , R30
000c07 93f0 0490+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
000c09 9612      	ADIW R26,2
000c0a 940e 1743 	CALL __GETW1P
                +
000c0c 93e0 04a4+STS _glcd_state + ( 25 ) , R30
000c0e 93f0 04a5+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
000c10 81a9      	LDD  R26,Y+1
000c11 81ba      	LDD  R27,Y+1+1
000c12 9614      	ADIW R26,4
000c13 940e 1743 	CALL __GETW1P
000c15 c00a      	RJMP _0x20400AC
                 _0x204000F:
000c16 e0e0      	LDI  R30,LOW(0)
000c17 e0f0      	LDI  R31,HIGH(0)
                +
000c18 93e0 048f+STS _glcd_state + ( 4 ) , R30
000c1a 93f0 0490+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
000c1c 93e0 04a4+STS _glcd_state + ( 25 ) , R30
000c1e 93f0 04a5+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20400AC:
                +
000c20 93e0 04a6+STS _glcd_state + ( 27 ) , R30
000c22 93f0 04a7+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
000c24 e0e1      	LDI  R30,LOW(1)
                +
000c25 93e0 0491+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
000c27 93e0 0492+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
000c29 93e0 0493+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
000c2b efef      	LDI  R30,LOW(255)
                +
000c2c 93e0 0494+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
000c2e e0e1      	LDI  R30,LOW(1)
                +
000c2f 93e0 049b+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
000c31 e9ec     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
000c32 e0f4     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
000c33 93fa      	ST   -Y,R31
000c34 93ea      	ST   -Y,R30
000c35 efef      	LDI  R30,LOW(255)
000c36 93ea      	ST   -Y,R30
000c37 e0a8      	LDI  R26,LOW(8)
000c38 e0b0      	LDI  R27,0
000c39 940e 13eb 	CALL _memset
000c3b d004      	RCALL _glcd_clear
000c3c e0e1      	LDI  R30,LOW(1)
000c3d 8118      	LDD  R17,Y+0
000c3e 9623      	ADIW R28,3
000c3f 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
000c40 940e 1773 	CALL __SAVELOCR4
000c42 e000      	LDI  R16,0
000c43 e030      	LDI  R19,0
                +
000c44 91e0 048c+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000c46 30e0      	CPI  R30,0
000c47 f009      	BREQ _0x2040015
000c48 ef0f      	LDI  R16,LOW(255)
                 _0x2040015:
                 _0x2040016:
000c49 3038      	CPI  R19,8
000c4a f478      	BRSH _0x2040018
000c4b e0e0      	LDI  R30,LOW(0)
000c4c 93ea      	ST   -Y,R30
000c4d 2fa3      	MOV  R26,R19
000c4e 5f3f      	SUBI R19,-1
000c4f df4d      	RCALL _ks0108_gotoxp_G102
000c50 e010      	LDI  R17,LOW(0)
                 _0x2040019:
000c51 2fa1      	MOV  R26,R17
000c52 5f1f      	SUBI R17,-1
000c53 38a0      	CPI  R26,LOW(0x80)
000c54 f420      	BRSH _0x204001B
000c55 2fa0      	MOV  R26,R16
000c56 940e 15de 	CALL SUBOPT_0x2D
000c58 cff8      	RJMP _0x2040019
                 _0x204001B:
000c59 cfef      	RJMP _0x2040016
                 _0x2040018:
000c5a e0e0      	LDI  R30,LOW(0)
000c5b 93ea      	ST   -Y,R30
000c5c e0a0      	LDI  R26,LOW(0)
000c5d df3f      	RCALL _ks0108_gotoxp_G102
000c5e e0e0      	LDI  R30,LOW(0)
000c5f 93ea      	ST   -Y,R30
000c60 e0a0      	LDI  R26,LOW(0)
000c61 d3aa      	RCALL _glcd_moveto
000c62 940e 177a 	CALL __LOADLOCR4
                 _0x212000E:
000c64 9624      	ADIW R28,4
000c65 9508      	RET
                 ; .FEND
                 _glcd_putpixel:
                 ; .FSTART _glcd_putpixel
000c66 93aa      	ST   -Y,R26
000c67 931a      	ST   -Y,R17
000c68 930a      	ST   -Y,R16
000c69 81ac      	LDD  R26,Y+4
000c6a 38a0      	CPI  R26,LOW(0x80)
000c6b f418      	BRSH _0x204001D
000c6c 81ab      	LDD  R26,Y+3
000c6d 34a0      	CPI  R26,LOW(0x40)
000c6e f008      	BRLO _0x204001C
                 _0x204001D:
000c6f c016      	RJMP _0x212000D
                 _0x204001C:
000c70 81ec      	LDD  R30,Y+4
000c71 93ea      	ST   -Y,R30
000c72 81ac      	LDD  R26,Y+4
000c73 df5f      	RCALL _ks0108_rdbyte_G102
000c74 2f1e      	MOV  R17,R30
000c75 df15      	RCALL _ks0108_setloc_G102
000c76 81eb      	LDD  R30,Y+3
000c77 70e7      	ANDI R30,LOW(0x7)
000c78 e0a1      	LDI  R26,LOW(1)
000c79 940e 16da 	CALL __LSLB12
000c7b 2f0e      	MOV  R16,R30
000c7c 81ea      	LDD  R30,Y+2
000c7d 30e0      	CPI  R30,0
000c7e f011      	BREQ _0x204001F
000c7f 2b10      	OR   R17,R16
000c80 c003      	RJMP _0x2040020
                 _0x204001F:
000c81 2fe0      	MOV  R30,R16
000c82 95e0      	COM  R30
000c83 231e      	AND  R17,R30
                 _0x2040020:
000c84 2fa1      	MOV  R26,R17
000c85 df3b      	RCALL _ks0108_wrdata_G102
                 _0x212000D:
000c86 8119      	LDD  R17,Y+1
000c87 8108      	LDD  R16,Y+0
000c88 9625      	ADIW R28,5
000c89 9508      	RET
                 ; .FEND
                 _glcd_getpixel:
                 ; .FSTART _glcd_getpixel
000c8a 93aa      	ST   -Y,R26
000c8b 81a9      	LDD  R26,Y+1
000c8c 38a0      	CPI  R26,LOW(0x80)
000c8d f418      	BRSH _0x2040022
000c8e 81a8      	LD   R26,Y
000c8f 34a0      	CPI  R26,LOW(0x40)
000c90 f010      	BRLO _0x2040021
                 _0x2040022:
000c91 e0e0      	LDI  R30,LOW(0)
000c92 c00f      	RJMP _0x212000C
                 _0x2040021:
000c93 81e9      	LDD  R30,Y+1
000c94 93ea      	ST   -Y,R30
000c95 81a9      	LDD  R26,Y+1
000c96 df3c      	RCALL _ks0108_rdbyte_G102
000c97 2e1e      	MOV  R1,R30
000c98 81e8      	LD   R30,Y
000c99 70e7      	ANDI R30,LOW(0x7)
000c9a e0a1      	LDI  R26,LOW(1)
000c9b 940e 16da 	CALL __LSLB12
000c9d 21e1      	AND  R30,R1
000c9e f011      	BREQ _0x2040024
000c9f e0e1      	LDI  R30,LOW(1)
000ca0 c001      	RJMP _0x2040025
                 _0x2040024:
000ca1 e0e0      	LDI  R30,LOW(0)
                 _0x2040025:
                 _0x212000C:
000ca2 9622      	ADIW R28,2
000ca3 9508      	RET
                 ; .FEND
                 _ks0108_wrmasked_G102:
                 ; .FSTART _ks0108_wrmasked_G102
000ca4 93aa      	ST   -Y,R26
000ca5 931a      	ST   -Y,R17
000ca6 81ed      	LDD  R30,Y+5
000ca7 93ea      	ST   -Y,R30
000ca8 81ad      	LDD  R26,Y+5
000ca9 df29      	RCALL _ks0108_rdbyte_G102
000caa 2f1e      	MOV  R17,R30
000cab dedf      	RCALL _ks0108_setloc_G102
000cac 81e9      	LDD  R30,Y+1
000cad 30e7      	CPI  R30,LOW(0x7)
000cae f011      	BREQ _0x204002B
000caf 30e8      	CPI  R30,LOW(0x8)
000cb0 f439      	BRNE _0x204002C
                 _0x204002B:
000cb1 81eb      	LDD  R30,Y+3
000cb2 93ea      	ST   -Y,R30
000cb3 81aa      	LDD  R26,Y+2
000cb4 940e 141f 	CALL _glcd_mappixcolor1bit
000cb6 83eb      	STD  Y+3,R30
000cb7 c008      	RJMP _0x204002D
                 _0x204002C:
000cb8 30e3      	CPI  R30,LOW(0x3)
000cb9 f421      	BRNE _0x204002F
000cba 81eb      	LDD  R30,Y+3
000cbb 95e0      	COM  R30
000cbc 83eb      	STD  Y+3,R30
000cbd c002      	RJMP _0x2040030
                 _0x204002F:
000cbe 30e0      	CPI  R30,0
000cbf f421      	BRNE _0x2040031
                 _0x2040030:
                 _0x204002D:
000cc0 81ea      	LDD  R30,Y+2
000cc1 95e0      	COM  R30
000cc2 231e      	AND  R17,R30
000cc3 c002      	RJMP _0x2040032
                 _0x2040031:
000cc4 30e2      	CPI  R30,LOW(0x2)
000cc5 f429      	BRNE _0x2040033
                 _0x2040032:
000cc6 81ea      	LDD  R30,Y+2
000cc7 81ab      	LDD  R26,Y+3
000cc8 23ea      	AND  R30,R26
000cc9 2b1e      	OR   R17,R30
000cca c00e      	RJMP _0x2040029
                 _0x2040033:
000ccb 30e1      	CPI  R30,LOW(0x1)
000ccc f429      	BRNE _0x2040034
000ccd 81ea      	LDD  R30,Y+2
000cce 81ab      	LDD  R26,Y+3
000ccf 23ea      	AND  R30,R26
000cd0 271e      	EOR  R17,R30
000cd1 c007      	RJMP _0x2040029
                 _0x2040034:
000cd2 30e4      	CPI  R30,LOW(0x4)
000cd3 f429      	BRNE _0x2040029
000cd4 81ea      	LDD  R30,Y+2
000cd5 95e0      	COM  R30
000cd6 81ab      	LDD  R26,Y+3
000cd7 2bea      	OR   R30,R26
000cd8 231e      	AND  R17,R30
                 _0x2040029:
000cd9 2fa1      	MOV  R26,R17
000cda 940e 15de 	CALL SUBOPT_0x2D
000cdc 8118      	LDD  R17,Y+0
                 _0x212000B:
000cdd 9626      	ADIW R28,6
000cde 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
000cdf 93aa      	ST   -Y,R26
000ce0 9723      	SBIW R28,3
000ce1 940e 1771 	CALL __SAVELOCR6
000ce3 89a8      	LDD  R26,Y+16
000ce4 38a0      	CPI  R26,LOW(0x80)
000ce5 f448      	BRSH _0x2040037
000ce6 85af      	LDD  R26,Y+15
000ce7 34a0      	CPI  R26,LOW(0x40)
000ce8 f430      	BRSH _0x2040037
000ce9 85ae      	LDD  R26,Y+14
000cea 30a0      	CPI  R26,LOW(0x0)
000ceb f019      	BREQ _0x2040037
000cec 85ad      	LDD  R26,Y+13
000ced 30a0      	CPI  R26,LOW(0x0)
000cee f409      	BRNE _0x2040036
                 _0x2040037:
000cef c1c8      	RJMP _0x212000A
                 _0x2040036:
000cf0 85ee      	LDD  R30,Y+14
000cf1 87e8      	STD  Y+8,R30
000cf2 89a8      	LDD  R26,Y+16
000cf3 27bb      	CLR  R27
000cf4 85ee      	LDD  R30,Y+14
000cf5 e0f0      	LDI  R31,0
000cf6 0fae      	ADD  R26,R30
000cf7 1fbf      	ADC  R27,R31
000cf8 38a1      	CPI  R26,LOW(0x81)
000cf9 e0e0      	LDI  R30,HIGH(0x81)
000cfa 07be      	CPC  R27,R30
000cfb f020      	BRLO _0x2040039
000cfc 89a8      	LDD  R26,Y+16
000cfd e8e0      	LDI  R30,LOW(128)
000cfe 1bea      	SUB  R30,R26
000cff 87ee      	STD  Y+14,R30
                 _0x2040039:
000d00 852d      	LDD  R18,Y+13
000d01 85af      	LDD  R26,Y+15
000d02 27bb      	CLR  R27
000d03 85ed      	LDD  R30,Y+13
000d04 e0f0      	LDI  R31,0
000d05 0fae      	ADD  R26,R30
000d06 1fbf      	ADC  R27,R31
000d07 34a1      	CPI  R26,LOW(0x41)
000d08 e0e0      	LDI  R30,HIGH(0x41)
000d09 07be      	CPC  R27,R30
000d0a f020      	BRLO _0x204003A
000d0b 85af      	LDD  R26,Y+15
000d0c e4e0      	LDI  R30,LOW(64)
000d0d 1bea      	SUB  R30,R26
000d0e 87ed      	STD  Y+13,R30
                 _0x204003A:
000d0f 85a9      	LDD  R26,Y+9
000d10 30a6      	CPI  R26,LOW(0x6)
000d11 f009      	BREQ PC+2
000d12 c05b      	RJMP _0x204003B
000d13 85ec      	LDD  R30,Y+12
000d14 30e1      	CPI  R30,LOW(0x1)
000d15 f409      	BRNE _0x204003F
000d16 c1a1      	RJMP _0x212000A
                 _0x204003F:
000d17 30e3      	CPI  R30,LOW(0x3)
000d18 f439      	BRNE _0x2040042
                +
000d19 91e0 04a6+LDS R30 , _glcd_state + ( 27 )
000d1b 91f0 04a7+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
000d1d 9730      	SBIW R30,0
000d1e f409      	BRNE _0x2040041
000d1f c198      	RJMP _0x212000A
                 _0x2040041:
                 _0x2040042:
000d20 8508      	LDD  R16,Y+8
000d21 85ed      	LDD  R30,Y+13
000d22 95e6      	LSR  R30
000d23 95e6      	LSR  R30
000d24 95e6      	LSR  R30
000d25 2f3e      	MOV  R19,R30
000d26 2fe2      	MOV  R30,R18
000d27 70e7      	ANDI R30,LOW(0x7)
000d28 f419      	BRNE _0x2040044
000d29 85ad      	LDD  R26,Y+13
000d2a 172a      	CP   R18,R26
000d2b f0e9      	BREQ _0x2040043
                 _0x2040044:
000d2c 2fa0      	MOV  R26,R16
000d2d 27bb      	CLR  R27
000d2e 2fe3      	MOV  R30,R19
000d2f e0f0      	LDI  R31,0
000d30 940e 16fd 	CALL __MULW12U
000d32 85aa      	LDD  R26,Y+10
000d33 85bb      	LDD  R27,Y+10+1
000d34 940e 15e2 	CALL SUBOPT_0x2E
000d36 9526      	LSR  R18
000d37 9526      	LSR  R18
000d38 9526      	LSR  R18
000d39 2f53      	MOV  R21,R19
                 _0x2040046:
000d3a 935f      	PUSH R21
000d3b 5f5f      	SUBI R21,-1
000d3c 2fe2      	MOV  R30,R18
000d3d 91af      	POP  R26
000d3e 17ea      	CP   R30,R26
000d3f f048      	BRLO _0x2040048
000d40 2f10      	MOV  R17,R16
                 _0x2040049:
000d41 2fe1      	MOV  R30,R17
000d42 5011      	SUBI R17,1
000d43 30e0      	CPI  R30,0
000d44 f019      	BREQ _0x204004B
000d45 940e 15e7 	CALL SUBOPT_0x2F
000d47 cff9      	RJMP _0x2040049
                 _0x204004B:
000d48 cff1      	RJMP _0x2040046
                 _0x2040048:
                 _0x2040043:
000d49 85ae      	LDD  R26,Y+14
000d4a 170a      	CP   R16,R26
000d4b f111      	BREQ _0x204004C
000d4c 85ee      	LDD  R30,Y+14
000d4d 85aa      	LDD  R26,Y+10
000d4e 85bb      	LDD  R27,Y+10+1
000d4f e0f0      	LDI  R31,0
000d50 940e 15e2 	CALL SUBOPT_0x2E
000d52 85ed      	LDD  R30,Y+13
000d53 70e7      	ANDI R30,LOW(0x7)
000d54 f009      	BREQ _0x204004D
000d55 5f3f      	SUBI R19,-LOW(1)
                 _0x204004D:
000d56 e020      	LDI  R18,LOW(0)
                 _0x204004E:
000d57 932f      	PUSH R18
000d58 5f2f      	SUBI R18,-1
000d59 2fe3      	MOV  R30,R19
000d5a 91af      	POP  R26
000d5b 17ae      	CP   R26,R30
000d5c f488      	BRSH _0x2040050
000d5d 851e      	LDD  R17,Y+14
                 _0x2040051:
000d5e 931f      	PUSH R17
000d5f 5f1f      	SUBI R17,-1
000d60 2fe0      	MOV  R30,R16
000d61 91af      	POP  R26
000d62 17ae      	CP   R26,R30
000d63 f418      	BRSH _0x2040053
000d64 940e 15e7 	CALL SUBOPT_0x2F
000d66 cff7      	RJMP _0x2040051
                 _0x2040053:
000d67 85ee      	LDD  R30,Y+14
000d68 81ae      	LDD  R26,Y+6
000d69 81bf      	LDD  R27,Y+6+1
000d6a e0f0      	LDI  R31,0
000d6b 940e 15e2 	CALL SUBOPT_0x2E
000d6d cfe9      	RJMP _0x204004E
                 _0x2040050:
                 _0x204004C:
                 _0x204003B:
000d6e 85ef      	LDD  R30,Y+15
000d6f 70e7      	ANDI R30,LOW(0x7)
000d70 2f3e      	MOV  R19,R30
                 _0x2040054:
000d71 85ed      	LDD  R30,Y+13
000d72 30e0      	CPI  R30,0
000d73 f409      	BRNE PC+2
000d74 c143      	RJMP _0x2040056
000d75 85ea      	LDD  R30,Y+10
000d76 85fb      	LDD  R31,Y+10+1
000d77 83ee      	STD  Y+6,R30
000d78 83ff      	STD  Y+6+1,R31
000d79 e010      	LDI  R17,LOW(0)
000d7a 8908      	LDD  R16,Y+16
000d7b 3030      	CPI  R19,0
000d7c f009      	BREQ PC+2
000d7d c065      	RJMP _0x2040057
000d7e 85ad      	LDD  R26,Y+13
000d7f 30a8      	CPI  R26,LOW(0x8)
000d80 f408      	BRSH PC+2
000d81 c05c      	RJMP _0x2040058
000d82 85e9      	LDD  R30,Y+9
000d83 30e0      	CPI  R30,0
000d84 f011      	BREQ _0x204005D
000d85 30e3      	CPI  R30,LOW(0x3)
000d86 f409      	BRNE _0x204005E
                 _0x204005D:
000d87 c002      	RJMP _0x204005F
                 _0x204005E:
000d88 30e7      	CPI  R30,LOW(0x7)
000d89 f409      	BRNE _0x2040060
                 _0x204005F:
000d8a c002      	RJMP _0x2040061
                 _0x2040060:
000d8b 30e8      	CPI  R30,LOW(0x8)
000d8c f409      	BRNE _0x2040062
                 _0x2040061:
000d8d c002      	RJMP _0x2040063
                 _0x2040062:
000d8e 30e6      	CPI  R30,LOW(0x6)
000d8f f409      	BRNE _0x2040064
                 _0x2040063:
000d90 c002      	RJMP _0x2040065
                 _0x2040064:
000d91 30e9      	CPI  R30,LOW(0x9)
000d92 f409      	BRNE _0x2040066
                 _0x2040065:
000d93 c002      	RJMP _0x2040067
                 _0x2040066:
000d94 30ea      	CPI  R30,LOW(0xA)
000d95 f421      	BRNE _0x204005B
                 _0x2040067:
000d96 930a      	ST   -Y,R16
000d97 89e8      	LDD  R30,Y+16
000d98 940e 15d8 	CALL SUBOPT_0x2C
                 _0x204005B:
                 _0x2040069:
000d9a 931f      	PUSH R17
000d9b 5f1f      	SUBI R17,-1
000d9c 85ee      	LDD  R30,Y+14
000d9d 91af      	POP  R26
000d9e 17ae      	CP   R26,R30
000d9f f5b8      	BRSH _0x204006B
000da0 85a9      	LDD  R26,Y+9
000da1 30a6      	CPI  R26,LOW(0x6)
000da2 f461      	BRNE _0x204006C
000da3 de26      	RCALL _ks0108_rddata_G102
000da4 dde6      	RCALL _ks0108_setloc_G102
000da5 940e 15f4 	CALL SUBOPT_0x30
000da7 93fa      	ST   -Y,R31
000da8 93ea      	ST   -Y,R30
000da9 de20      	RCALL _ks0108_rddata_G102
000daa 2fae      	MOV  R26,R30
000dab 940e 1466 	CALL _glcd_writemem
000dad ddfe      	RCALL _ks0108_nextx_G102
000dae c027      	RJMP _0x204006D
                 _0x204006C:
000daf 85e9      	LDD  R30,Y+9
000db0 30e9      	CPI  R30,LOW(0x9)
000db1 f411      	BRNE _0x2040071
000db2 e050      	LDI  R21,LOW(0)
000db3 c00e      	RJMP _0x2040072
                 _0x2040071:
000db4 30ea      	CPI  R30,LOW(0xA)
000db5 f411      	BRNE _0x2040070
000db6 ef5f      	LDI  R21,LOW(255)
000db7 c00a      	RJMP _0x2040072
                 _0x2040070:
000db8 940e 15f4 	CALL SUBOPT_0x30
000dba 940e 15fd 	CALL SUBOPT_0x31
000dbc 2f5e      	MOV  R21,R30
000dbd 85e9      	LDD  R30,Y+9
000dbe 30e7      	CPI  R30,LOW(0x7)
000dbf f011      	BREQ _0x2040079
000dc0 30e8      	CPI  R30,LOW(0x8)
000dc1 f421      	BRNE _0x204007A
                 _0x2040079:
                 _0x2040072:
000dc2 940e 1603 	CALL SUBOPT_0x32
000dc4 2f5e      	MOV  R21,R30
000dc5 c006      	RJMP _0x204007B
                 _0x204007A:
000dc6 30e3      	CPI  R30,LOW(0x3)
000dc7 f411      	BRNE _0x204007D
000dc8 9550      	COM  R21
000dc9 c002      	RJMP _0x204007E
                 _0x204007D:
000dca 30e0      	CPI  R30,0
000dcb f421      	BRNE _0x2040080
                 _0x204007E:
                 _0x204007B:
000dcc 2fa5      	MOV  R26,R21
000dcd 940e 15de 	CALL SUBOPT_0x2D
000dcf c006      	RJMP _0x2040077
                 _0x2040080:
000dd0 940e 1607 	CALL SUBOPT_0x33
000dd2 efef      	LDI  R30,LOW(255)
000dd3 93ea      	ST   -Y,R30
000dd4 85ad      	LDD  R26,Y+13
000dd5 dece      	RCALL _ks0108_wrmasked_G102
                 _0x2040077:
                 _0x204006D:
000dd6 cfc3      	RJMP _0x2040069
                 _0x204006B:
000dd7 85ef      	LDD  R30,Y+15
000dd8 5fe8      	SUBI R30,-LOW(8)
000dd9 87ef      	STD  Y+15,R30
000dda 85ed      	LDD  R30,Y+13
000ddb 50e8      	SUBI R30,LOW(8)
000ddc 87ed      	STD  Y+13,R30
000ddd c0d1      	RJMP _0x2040081
                 _0x2040058:
000dde 855d      	LDD  R21,Y+13
000ddf e020      	LDI  R18,LOW(0)
000de0 e0e0      	LDI  R30,LOW(0)
000de1 87ed      	STD  Y+13,R30
000de2 c07a      	RJMP _0x2040082
                 _0x2040057:
000de3 2fe3      	MOV  R30,R19
000de4 85ad      	LDD  R26,Y+13
000de5 0fae      	ADD  R26,R30
000de6 30a9      	CPI  R26,LOW(0x9)
000de7 f420      	BRSH _0x2040083
000de8 852d      	LDD  R18,Y+13
000de9 e0e0      	LDI  R30,LOW(0)
000dea 87ed      	STD  Y+13,R30
000deb c003      	RJMP _0x2040084
                 _0x2040083:
000dec e0e8      	LDI  R30,LOW(8)
000ded 1be3      	SUB  R30,R19
000dee 2f2e      	MOV  R18,R30
                 _0x2040084:
000def 933a      	ST   -Y,R19
000df0 2fa2      	MOV  R26,R18
000df1 940e 1414 	CALL _glcd_getmask
000df3 2f4e      	MOV  R20,R30
000df4 85e9      	LDD  R30,Y+9
000df5 30e6      	CPI  R30,LOW(0x6)
000df6 f4f1      	BRNE _0x2040088
                 _0x2040089:
000df7 931f      	PUSH R17
000df8 5f1f      	SUBI R17,-1
000df9 85ee      	LDD  R30,Y+14
000dfa 91af      	POP  R26
000dfb 17ae      	CP   R26,R30
000dfc f4b8      	BRSH _0x204008B
000dfd 940e 160d 	CALL SUBOPT_0x34
000dff 2fae      	MOV  R26,R30
000e00 2fe3      	MOV  R30,R19
000e01 940e 16e2 	CALL __LSRB12
000e03 940e 1614 	CALL SUBOPT_0x35
000e05 2fe3      	MOV  R30,R19
000e06 2fa4      	MOV  R26,R20
000e07 940e 16e2 	CALL __LSRB12
000e09 95e0      	COM  R30
000e0a 21e1      	AND  R30,R1
000e0b 2b5e      	OR   R21,R30
000e0c 940e 15f4 	CALL SUBOPT_0x30
000e0e 93fa      	ST   -Y,R31
000e0f 93ea      	ST   -Y,R30
000e10 2fa5      	MOV  R26,R21
000e11 940e 1466 	CALL _glcd_writemem
000e13 cfe3      	RJMP _0x2040089
                 _0x204008B:
000e14 c02c      	RJMP _0x2040087
                 _0x2040088:
000e15 30e9      	CPI  R30,LOW(0x9)
000e16 f411      	BRNE _0x204008C
000e17 e050      	LDI  R21,LOW(0)
000e18 c003      	RJMP _0x204008D
                 _0x204008C:
000e19 30ea      	CPI  R30,LOW(0xA)
000e1a f4a9      	BRNE _0x2040093
000e1b ef5f      	LDI  R21,LOW(255)
                 _0x204008D:
000e1c 940e 1603 	CALL SUBOPT_0x32
000e1e 2fae      	MOV  R26,R30
000e1f 2fe3      	MOV  R30,R19
000e20 940e 16da 	CALL __LSLB12
000e22 2f5e      	MOV  R21,R30
                 _0x2040090:
000e23 931f      	PUSH R17
000e24 5f1f      	SUBI R17,-1
000e25 85ee      	LDD  R30,Y+14
000e26 91af      	POP  R26
000e27 17ae      	CP   R26,R30
000e28 f430      	BRSH _0x2040092
000e29 940e 1607 	CALL SUBOPT_0x33
000e2b 934a      	ST   -Y,R20
000e2c e0a0      	LDI  R26,LOW(0)
000e2d de76      	RCALL _ks0108_wrmasked_G102
000e2e cff4      	RJMP _0x2040090
                 _0x2040092:
000e2f c011      	RJMP _0x2040087
                 _0x2040093:
                 _0x2040094:
000e30 931f      	PUSH R17
000e31 5f1f      	SUBI R17,-1
000e32 85ee      	LDD  R30,Y+14
000e33 91af      	POP  R26
000e34 17ae      	CP   R26,R30
000e35 f458      	BRSH _0x2040096
000e36 940e 161f 	CALL SUBOPT_0x36
000e38 2fae      	MOV  R26,R30
000e39 2fe3      	MOV  R30,R19
000e3a 940e 16da 	CALL __LSLB12
000e3c 93ea      	ST   -Y,R30
000e3d 934a      	ST   -Y,R20
000e3e 85ad      	LDD  R26,Y+13
000e3f de64      	RCALL _ks0108_wrmasked_G102
000e40 cfef      	RJMP _0x2040094
                 _0x2040096:
                 _0x2040087:
000e41 85ed      	LDD  R30,Y+13
000e42 30e0      	CPI  R30,0
000e43 f409      	BRNE _0x2040097
000e44 c073      	RJMP _0x2040056
                 _0x2040097:
000e45 85ad      	LDD  R26,Y+13
000e46 30a8      	CPI  R26,LOW(0x8)
000e47 f428      	BRSH _0x2040098
000e48 85ed      	LDD  R30,Y+13
000e49 1be2      	SUB  R30,R18
000e4a 2f5e      	MOV  R21,R30
000e4b e0e0      	LDI  R30,LOW(0)
000e4c c003      	RJMP _0x20400AD
                 _0x2040098:
000e4d 2f53      	MOV  R21,R19
000e4e 85ed      	LDD  R30,Y+13
000e4f 50e8      	SUBI R30,LOW(8)
                 _0x20400AD:
000e50 87ed      	STD  Y+13,R30
000e51 e010      	LDI  R17,LOW(0)
000e52 85ef      	LDD  R30,Y+15
000e53 5fe8      	SUBI R30,-LOW(8)
000e54 87ef      	STD  Y+15,R30
000e55 e0e8      	LDI  R30,LOW(8)
000e56 1be3      	SUB  R30,R19
000e57 2f2e      	MOV  R18,R30
000e58 8908      	LDD  R16,Y+16
000e59 85ea      	LDD  R30,Y+10
000e5a 85fb      	LDD  R31,Y+10+1
000e5b 83ee      	STD  Y+6,R30
000e5c 83ff      	STD  Y+6+1,R31
                 _0x2040082:
000e5d 2fe5      	MOV  R30,R21
000e5e e0f0      	LDI  R31,0
000e5f 5be2      	SUBI R30,LOW(-__glcd_mask*2)
000e60 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000e61 9144      	LPM  R20,Z
000e62 85e9      	LDD  R30,Y+9
000e63 30e6      	CPI  R30,LOW(0x6)
000e64 f4f1      	BRNE _0x204009D
                 _0x204009E:
000e65 931f      	PUSH R17
000e66 5f1f      	SUBI R17,-1
000e67 85ee      	LDD  R30,Y+14
000e68 91af      	POP  R26
000e69 17ae      	CP   R26,R30
000e6a f4b8      	BRSH _0x20400A0
000e6b 940e 160d 	CALL SUBOPT_0x34
000e6d 2fae      	MOV  R26,R30
000e6e 2fe2      	MOV  R30,R18
000e6f 940e 16da 	CALL __LSLB12
000e71 940e 1614 	CALL SUBOPT_0x35
000e73 2fe2      	MOV  R30,R18
000e74 2fa4      	MOV  R26,R20
000e75 940e 16da 	CALL __LSLB12
000e77 95e0      	COM  R30
000e78 21e1      	AND  R30,R1
000e79 2b5e      	OR   R21,R30
000e7a 940e 15f4 	CALL SUBOPT_0x30
000e7c 93fa      	ST   -Y,R31
000e7d 93ea      	ST   -Y,R30
000e7e 2fa5      	MOV  R26,R21
000e7f 940e 1466 	CALL _glcd_writemem
000e81 cfe3      	RJMP _0x204009E
                 _0x20400A0:
000e82 c02c      	RJMP _0x204009C
                 _0x204009D:
000e83 30e9      	CPI  R30,LOW(0x9)
000e84 f411      	BRNE _0x20400A1
000e85 e050      	LDI  R21,LOW(0)
000e86 c003      	RJMP _0x20400A2
                 _0x20400A1:
000e87 30ea      	CPI  R30,LOW(0xA)
000e88 f4a9      	BRNE _0x20400A8
000e89 ef5f      	LDI  R21,LOW(255)
                 _0x20400A2:
000e8a 940e 1603 	CALL SUBOPT_0x32
000e8c 2fae      	MOV  R26,R30
000e8d 2fe2      	MOV  R30,R18
000e8e 940e 16e2 	CALL __LSRB12
000e90 2f5e      	MOV  R21,R30
                 _0x20400A5:
000e91 931f      	PUSH R17
000e92 5f1f      	SUBI R17,-1
000e93 85ee      	LDD  R30,Y+14
000e94 91af      	POP  R26
000e95 17ae      	CP   R26,R30
000e96 f430      	BRSH _0x20400A7
000e97 940e 1607 	CALL SUBOPT_0x33
000e99 934a      	ST   -Y,R20
000e9a e0a0      	LDI  R26,LOW(0)
000e9b de08      	RCALL _ks0108_wrmasked_G102
000e9c cff4      	RJMP _0x20400A5
                 _0x20400A7:
000e9d c011      	RJMP _0x204009C
                 _0x20400A8:
                 _0x20400A9:
000e9e 931f      	PUSH R17
000e9f 5f1f      	SUBI R17,-1
000ea0 85ee      	LDD  R30,Y+14
000ea1 91af      	POP  R26
000ea2 17ae      	CP   R26,R30
000ea3 f458      	BRSH _0x20400AB
000ea4 940e 161f 	CALL SUBOPT_0x36
000ea6 2fae      	MOV  R26,R30
000ea7 2fe2      	MOV  R30,R18
000ea8 940e 16e2 	CALL __LSRB12
000eaa 93ea      	ST   -Y,R30
000eab 934a      	ST   -Y,R20
000eac 85ad      	LDD  R26,Y+13
000ead ddf6      	RCALL _ks0108_wrmasked_G102
000eae cfef      	RJMP _0x20400A9
                 _0x20400AB:
                 _0x204009C:
                 _0x2040081:
000eaf 85e8      	LDD  R30,Y+8
000eb0 85aa      	LDD  R26,Y+10
000eb1 85bb      	LDD  R27,Y+10+1
000eb2 e0f0      	LDI  R31,0
000eb3 0fea      	ADD  R30,R26
000eb4 1ffb      	ADC  R31,R27
000eb5 87ea      	STD  Y+10,R30
000eb6 87fb      	STD  Y+10+1,R31
000eb7 ceb9      	RJMP _0x2040054
                 _0x2040056:
                 _0x212000A:
000eb8 940e 1778 	CALL __LOADLOCR6
000eba 9661      	ADIW R28,17
000ebb 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
000ebc 940e 162c 	CALL SUBOPT_0x37
000ebe f024      	BRLT _0x2060003
000ebf e0e0      	LDI  R30,LOW(0)
000ec0 e0f0      	LDI  R31,HIGH(0)
000ec1 940c 141d 	JMP  _0x2120003
                 _0x2060003:
000ec3 81a8      	LD   R26,Y
000ec4 81b9      	LDD  R27,Y+1
000ec5 38a0      	CPI  R26,LOW(0x80)
000ec6 e0e0      	LDI  R30,HIGH(0x80)
000ec7 07be      	CPC  R27,R30
000ec8 f024      	BRLT _0x2060004
000ec9 e7ef      	LDI  R30,LOW(127)
000eca e0f0      	LDI  R31,HIGH(127)
000ecb 940c 141d 	JMP  _0x2120003
                 _0x2060004:
000ecd 81e8      	LD   R30,Y
000ece 81f9      	LDD  R31,Y+1
000ecf 940c 141d 	JMP  _0x2120003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
000ed1 940e 162c 	CALL SUBOPT_0x37
000ed3 f024      	BRLT _0x2060005
000ed4 e0e0      	LDI  R30,LOW(0)
000ed5 e0f0      	LDI  R31,HIGH(0)
000ed6 940c 141d 	JMP  _0x2120003
                 _0x2060005:
000ed8 81a8      	LD   R26,Y
000ed9 81b9      	LDD  R27,Y+1
000eda 34a0      	CPI  R26,LOW(0x40)
000edb e0e0      	LDI  R30,HIGH(0x40)
000edc 07be      	CPC  R27,R30
000edd f024      	BRLT _0x2060006
000ede e3ef      	LDI  R30,LOW(63)
000edf e0f0      	LDI  R31,HIGH(63)
000ee0 940c 141d 	JMP  _0x2120003
                 _0x2060006:
000ee2 81e8      	LD   R30,Y
000ee3 81f9      	LDD  R31,Y+1
000ee4 940c 141d 	JMP  _0x2120003
                 ; .FEND
                 _glcd_setpixel:
                 ; .FSTART _glcd_setpixel
000ee6 940e 15d3 	CALL SUBOPT_0x2B
000ee8 93ea      	ST   -Y,R30
000ee9 91a0 048b 	LDS  R26,_glcd_state
000eeb dd7a      	RCALL _glcd_putpixel
000eec 940c 141d 	JMP  _0x2120003
                 ; .FEND
                 _glcd_clrpixel:
                 ; .FSTART _glcd_clrpixel
000eee 940e 15d3 	CALL SUBOPT_0x2B
000ef0 93ea      	ST   -Y,R30
                +
000ef1 91a0 048c+LDS R26 , _glcd_state + ( 1 )
                 	__GETB2MN _glcd_state,1
000ef3 dd72      	RCALL _glcd_putpixel
000ef4 940c 141d 	JMP  _0x2120003
                 ; .FEND
                 _glcd_getcharw_G103:
                 ; .FSTART _glcd_getcharw_G103
000ef6 93ba      	ST   -Y,R27
000ef7 93aa      	ST   -Y,R26
000ef8 9723      	SBIW R28,3
000ef9 940e 1633 	CALL SUBOPT_0x38
000efb 018f      	MOVW R16,R30
000efc 2e00      	MOV  R0,R16
000efd 2a01      	OR   R0,R17
000efe f419      	BRNE _0x206000B
000eff e0e0      	LDI  R30,LOW(0)
000f00 e0f0      	LDI  R31,HIGH(0)
000f01 c05f      	RJMP _0x2120009
                 _0x206000B:
000f02 940e 163a 	CALL SUBOPT_0x39
000f04 820f      	STD  Y+7,R0
000f05 940e 163a 	CALL SUBOPT_0x39
000f07 820e      	STD  Y+6,R0
000f08 940e 163a 	CALL SUBOPT_0x39
000f0a 8608      	STD  Y+8,R0
000f0b 85eb      	LDD  R30,Y+11
000f0c 85a8      	LDD  R26,Y+8
000f0d 17ea      	CP   R30,R26
000f0e f418      	BRSH _0x206000C
000f0f e0e0      	LDI  R30,LOW(0)
000f10 e0f0      	LDI  R31,HIGH(0)
000f11 c04f      	RJMP _0x2120009
                 _0x206000C:
000f12 01f8      	MOVW R30,R16
                +
000f13 5f0f     +SUBI R16 , LOW ( - 1 )
000f14 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000f15 9154      	LPM  R21,Z
000f16 85a8      	LDD  R26,Y+8
000f17 27bb      	CLR  R27
000f18 27ee      	CLR  R30
000f19 0fa5      	ADD  R26,R21
000f1a 1fbe      	ADC  R27,R30
000f1b 85eb      	LDD  R30,Y+11
000f1c e0f0      	LDI  R31,0
000f1d 17ea      	CP   R30,R26
000f1e 07fb      	CPC  R31,R27
000f1f f018      	BRLO _0x206000D
000f20 e0e0      	LDI  R30,LOW(0)
000f21 e0f0      	LDI  R31,HIGH(0)
000f22 c03e      	RJMP _0x2120009
                 _0x206000D:
000f23 81ee      	LDD  R30,Y+6
000f24 95e6      	LSR  R30
000f25 95e6      	LSR  R30
000f26 95e6      	LSR  R30
000f27 2f4e      	MOV  R20,R30
000f28 81ee      	LDD  R30,Y+6
000f29 70e7      	ANDI R30,LOW(0x7)
000f2a f009      	BREQ _0x206000E
000f2b 5f4f      	SUBI R20,-LOW(1)
                 _0x206000E:
000f2c 81ef      	LDD  R30,Y+7
000f2d 30e0      	CPI  R30,0
000f2e f0a1      	BREQ _0x206000F
000f2f 85a9      	LDD  R26,Y+9
000f30 85ba      	LDD  R27,Y+9+1
000f31 93ec      	ST   X,R30
000f32 85a8      	LDD  R26,Y+8
000f33 85eb      	LDD  R30,Y+11
000f34 1bea      	SUB  R30,R26
000f35 e0f0      	LDI  R31,0
000f36 01df      	MOVW R26,R30
000f37 81ef      	LDD  R30,Y+7
000f38 e0f0      	LDI  R31,0
000f39 940e 16fd 	CALL __MULW12U
000f3b 01df      	MOVW R26,R30
000f3c 2fe4      	MOV  R30,R20
000f3d e0f0      	LDI  R31,0
000f3e 940e 16fd 	CALL __MULW12U
000f40 0fe0      	ADD  R30,R16
000f41 1ff1      	ADC  R31,R17
000f42 c01e      	RJMP _0x2120009
                 _0x206000F:
000f43 0198      	MOVW R18,R16
000f44 2fe5      	MOV  R30,R21
000f45 e0f0      	LDI  R31,0
                +
000f46 0f0e     +ADD R16 , R30
000f47 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2060010:
000f48 85a8      	LDD  R26,Y+8
000f49 5faf      	SUBI R26,-LOW(1)
000f4a 87a8      	STD  Y+8,R26
000f4b 50a1      	SUBI R26,LOW(1)
000f4c 85eb      	LDD  R30,Y+11
000f4d 17ae      	CP   R26,R30
000f4e f460      	BRSH _0x2060012
000f4f 01f9      	MOVW R30,R18
                +
000f50 5f2f     +SUBI R18 , LOW ( - 1 )
000f51 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000f52 91a4      	LPM  R26,Z
000f53 e0b0      	LDI  R27,0
000f54 2fe4      	MOV  R30,R20
000f55 e0f0      	LDI  R31,0
000f56 940e 16fd 	CALL __MULW12U
                +
000f58 0f0e     +ADD R16 , R30
000f59 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
000f5a cfed      	RJMP _0x2060010
                 _0x2060012:
000f5b 01f9      	MOVW R30,R18
000f5c 91e4      	LPM  R30,Z
000f5d 85a9      	LDD  R26,Y+9
000f5e 85ba      	LDD  R27,Y+9+1
000f5f 93ec      	ST   X,R30
000f60 01f8      	MOVW R30,R16
                 _0x2120009:
000f61 940e 1778 	CALL __LOADLOCR6
000f63 962c      	ADIW R28,12
000f64 9508      	RET
                 ; .FEND
                 _glcd_new_line_G103:
                 ; .FSTART _glcd_new_line_G103
000f65 e0e0      	LDI  R30,LOW(0)
                +
000f66 93e0 048d+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
000f68 91a0 048e+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000f6a 27bb      	CLR  R27
000f6b 940e 163f 	CALL SUBOPT_0x3A
000f6d e0f0      	LDI  R31,0
000f6e 0fae      	ADD  R26,R30
000f6f 1fbf      	ADC  R27,R31
                +
000f70 91e0 0492+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000f72 e0f0      	LDI  R31,0
000f73 0fae      	ADD  R26,R30
000f74 1fbf      	ADC  R27,R31
000f75 df5b      	RCALL _glcd_clipy
                +
000f76 93e0 048e+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000f78 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
000f79 93aa      	ST   -Y,R26
000f7a 9721      	SBIW R28,1
000f7b 940e 1633 	CALL SUBOPT_0x38
000f7d 9730      	SBIW R30,0
000f7e f409      	BRNE PC+2
000f7f c057      	RJMP _0x206001F
000f80 81af      	LDD  R26,Y+7
000f81 30aa      	CPI  R26,LOW(0xA)
000f82 f409      	BRNE _0x2060020
000f83 c04f      	RJMP _0x2060021
                 _0x2060020:
000f84 81ef      	LDD  R30,Y+7
000f85 93ea      	ST   -Y,R30
000f86 01de      	MOVW R26,R28
000f87 9617      	ADIW R26,7
000f88 df6d      	RCALL _glcd_getcharw_G103
000f89 01af      	MOVW R20,R30
000f8a 9730      	SBIW R30,0
000f8b f419      	BRNE _0x2060022
000f8c 940e 1778 	CALL __LOADLOCR6
000f8e c446      	RJMP _0x2120006
                 _0x2060022:
                +
000f8f 91e0 0491+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000f91 81ae      	LDD  R26,Y+6
000f92 0fea      	ADD  R30,R26
000f93 2f3e      	MOV  R19,R30
                +
000f94 91a0 048d+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000f96 27bb      	CLR  R27
000f97 940e 1646 	CALL SUBOPT_0x3B
                +
000f99 3801     +CPI R16 , LOW ( 129 )
000f9a e0e0     +LDI R30 , HIGH ( 129 )
000f9b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,129
000f9c f018      	BRLO _0x2060023
000f9d 2f03      	MOV  R16,R19
000f9e 2711      	CLR  R17
000f9f dfc5      	RCALL _glcd_new_line_G103
                 _0x2060023:
                +
000fa0 91e0 048d+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000fa2 93ea      	ST   -Y,R30
                +
000fa3 91e0 048e+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000fa5 93ea      	ST   -Y,R30
000fa6 85e8      	LDD  R30,Y+8
000fa7 93ea      	ST   -Y,R30
000fa8 940e 163f 	CALL SUBOPT_0x3A
000faa 93ea      	ST   -Y,R30
000fab e0e1      	LDI  R30,LOW(1)
000fac 93ea      	ST   -Y,R30
000fad 935a      	ST   -Y,R21
000fae 934a      	ST   -Y,R20
000faf e0a7      	LDI  R26,LOW(7)
000fb0 dd2e      	RCALL _glcd_block
                +
000fb1 91e0 048d+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000fb3 81ae      	LDD  R26,Y+6
000fb4 0fea      	ADD  R30,R26
000fb5 93ea      	ST   -Y,R30
                +
000fb6 91e0 048e+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000fb8 93ea      	ST   -Y,R30
                +
000fb9 91e0 0491+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000fbb 93ea      	ST   -Y,R30
000fbc 940e 163f 	CALL SUBOPT_0x3A
000fbe 940e 164b 	CALL SUBOPT_0x3C
                +
000fc0 91e0 048d+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000fc2 93ea      	ST   -Y,R30
                +
000fc3 91a0 048e+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000fc5 940e 163f 	CALL SUBOPT_0x3A
000fc7 0fea      	ADD  R30,R26
000fc8 93ea      	ST   -Y,R30
000fc9 933a      	ST   -Y,R19
                +
000fca 91e0 0492+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000fcc 940e 164b 	CALL SUBOPT_0x3C
000fce e8e0      	LDI  R30,LOW(128)
000fcf e0f0      	LDI  R31,HIGH(128)
000fd0 17e0      	CP   R30,R16
000fd1 07f1      	CPC  R31,R17
000fd2 f421      	BRNE _0x2060024
                 _0x2060021:
000fd3 df91      	RCALL _glcd_new_line_G103
000fd4 940e 1778 	CALL __LOADLOCR6
000fd6 c3fe      	RJMP _0x2120006
                 _0x2060024:
                 _0x206001F:
                +
000fd7 9300 048d+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
000fd9 940e 1778 	CALL __LOADLOCR6
000fdb c3f9      	RJMP _0x2120006
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
000fdc 93ba      	ST   -Y,R27
000fdd 93aa      	ST   -Y,R26
000fde 931a      	ST   -Y,R17
000fdf 81ec      	LDD  R30,Y+4
000fe0 93ea      	ST   -Y,R30
000fe1 81ac      	LDD  R26,Y+4
000fe2 d029      	RCALL _glcd_moveto
                 _0x2060025:
000fe3 81a9      	LDD  R26,Y+1
000fe4 81ba      	LDD  R27,Y+1+1
000fe5 91ed      	LD   R30,X+
000fe6 83a9      	STD  Y+1,R26
000fe7 83ba      	STD  Y+1+1,R27
000fe8 2f1e      	MOV  R17,R30
000fe9 30e0      	CPI  R30,0
000fea f019      	BREQ _0x2060027
000feb 2fa1      	MOV  R26,R17
000fec df8c      	RCALL _glcd_putchar
000fed cff5      	RJMP _0x2060025
                 _0x2060027:
000fee 8118      	LDD  R17,Y+0
000fef 940c 13f9 	JMP  _0x2120004
                 ; .FEND
                 _glcd_putpixelm_G103:
                 ; .FSTART _glcd_putpixelm_G103
000ff1 93aa      	ST   -Y,R26
000ff2 81ea      	LDD  R30,Y+2
000ff3 93ea      	ST   -Y,R30
000ff4 81ea      	LDD  R30,Y+2
000ff5 93ea      	ST   -Y,R30
                +
000ff6 91e0 0494+LDS R30 , _glcd_state + ( 9 )
                 	__GETB1MN _glcd_state,9
000ff8 81aa      	LDD  R26,Y+2
000ff9 23ea      	AND  R30,R26
000ffa f019      	BREQ _0x206003E
000ffb 91e0 048b 	LDS  R30,_glcd_state
000ffd c002      	RJMP _0x206003F
                 _0x206003E:
                +
000ffe 91e0 048c+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
                 _0x206003F:
001000 2fae      	MOV  R26,R30
001001 dc64      	RCALL _glcd_putpixel
001002 81e8      	LD   R30,Y
001003 0fee      	LSL  R30
001004 83e8      	ST   Y,R30
001005 30e0      	CPI  R30,0
001006 f411      	BRNE _0x2060041
001007 e0e1      	LDI  R30,LOW(1)
001008 83e8      	ST   Y,R30
                 _0x2060041:
001009 81e8      	LD   R30,Y
00100a 940c 1464 	JMP  _0x2120002
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
00100c 93aa      	ST   -Y,R26
00100d 81a9      	LDD  R26,Y+1
00100e 27bb      	CLR  R27
00100f deac      	RCALL _glcd_clipx
                +
001010 93e0 048d+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
001012 81a8      	LD   R26,Y
001013 27bb      	CLR  R27
001014 debc      	RCALL _glcd_clipy
                +
001015 93e0 048e+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
001017 940c 141d 	JMP  _0x2120003
                 ; .FEND
                 _glcd_line:
                 ; .FSTART _glcd_line
001019 93aa      	ST   -Y,R26
00101a 972b      	SBIW R28,11
00101b 940e 1771 	CALL __SAVELOCR6
00101d 89ac      	LDD  R26,Y+20
00101e 27bb      	CLR  R27
00101f de9c      	RCALL _glcd_clipx
001020 8bec      	STD  Y+20,R30
001021 89aa      	LDD  R26,Y+18
001022 27bb      	CLR  R27
001023 de98      	RCALL _glcd_clipx
001024 8bea      	STD  Y+18,R30
001025 89ab      	LDD  R26,Y+19
001026 27bb      	CLR  R27
001027 dea9      	RCALL _glcd_clipy
001028 8beb      	STD  Y+19,R30
001029 89a9      	LDD  R26,Y+17
00102a 27bb      	CLR  R27
00102b dea5      	RCALL _glcd_clipy
00102c 8be9      	STD  Y+17,R30
00102d 89ea      	LDD  R30,Y+18
                +
00102e 93e0 048d+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
001030 89e9      	LDD  R30,Y+17
                +
001031 93e0 048e+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
001033 e0e1      	LDI  R30,LOW(1)
001034 87e8      	STD  Y+8,R30
001035 89e9      	LDD  R30,Y+17
001036 89ab      	LDD  R26,Y+19
001037 17ea      	CP   R30,R26
001038 f571      	BRNE _0x2060042
001039 891c      	LDD  R17,Y+20
00103a 89aa      	LDD  R26,Y+18
00103b 171a      	CP   R17,R26
00103c f431      	BRNE _0x2060043
00103d 931a      	ST   -Y,R17
00103e 89ec      	LDD  R30,Y+20
00103f 93ea      	ST   -Y,R30
001040 e0a1      	LDI  R26,LOW(1)
001041 dfaf      	RCALL _glcd_putpixelm_G103
001042 c0c8      	RJMP _0x2120008
                 _0x2060043:
001043 89aa      	LDD  R26,Y+18
001044 171a      	CP   R17,R26
001045 f430      	BRSH _0x2060044
001046 89ea      	LDD  R30,Y+18
001047 1be1      	SUB  R30,R17
001048 2f0e      	MOV  R16,R30
                +
001049 e041     +LDI R20 , LOW ( 1 )
00104a e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
00104b c006      	RJMP _0x2060045
                 _0x2060044:
00104c 89aa      	LDD  R26,Y+18
00104d 2fe1      	MOV  R30,R17
00104e 1bea      	SUB  R30,R26
00104f 2f0e      	MOV  R16,R30
                +
001050 ef4f     +LDI R20 , LOW ( - 1 )
001051 ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 _0x2060045:
                 _0x2060047:
001052 893b      	LDD  R19,Y+19
001053 e0e0      	LDI  R30,LOW(0)
001054 83ee      	STD  Y+6,R30
                 _0x2060049:
001055 940e 1655 	CALL SUBOPT_0x3D
001057 f438      	BRSH _0x206004B
001058 931a      	ST   -Y,R17
001059 933a      	ST   -Y,R19
00105a 9533      	INC  R19
00105b 85aa      	LDD  R26,Y+10
00105c df94      	RCALL _glcd_putpixelm_G103
00105d 83ef      	STD  Y+7,R30
00105e cff6      	RJMP _0x2060049
                 _0x206004B:
00105f 81ef      	LDD  R30,Y+7
001060 87e8      	STD  Y+8,R30
001061 0f14      	ADD  R17,R20
001062 2fe0      	MOV  R30,R16
001063 5001      	SUBI R16,1
001064 30e0      	CPI  R30,0
001065 f761      	BRNE _0x2060047
001066 c0a4      	RJMP _0x206004C
                 _0x2060042:
001067 89ea      	LDD  R30,Y+18
001068 89ac      	LDD  R26,Y+20
001069 17ea      	CP   R30,R26
00106a f539      	BRNE _0x206004D
00106b 893b      	LDD  R19,Y+19
00106c 89a9      	LDD  R26,Y+17
00106d 173a      	CP   R19,R26
00106e f430      	BRSH _0x206004E
00106f 89e9      	LDD  R30,Y+17
001070 1be3      	SUB  R30,R19
001071 2f2e      	MOV  R18,R30
001072 e0e1      	LDI  R30,LOW(1)
001073 e0f0      	LDI  R31,HIGH(1)
001074 c006      	RJMP _0x206011B
                 _0x206004E:
001075 89a9      	LDD  R26,Y+17
001076 2fe3      	MOV  R30,R19
001077 1bea      	SUB  R30,R26
001078 2f2e      	MOV  R18,R30
001079 efef      	LDI  R30,LOW(65535)
00107a efff      	LDI  R31,HIGH(65535)
                 _0x206011B:
00107b 87ed      	STD  Y+13,R30
00107c 87fe      	STD  Y+13+1,R31
                 _0x2060051:
00107d 891c      	LDD  R17,Y+20
00107e e0e0      	LDI  R30,LOW(0)
00107f 83ee      	STD  Y+6,R30
                 _0x2060053:
001080 940e 1655 	CALL SUBOPT_0x3D
001082 f430      	BRSH _0x2060055
001083 931a      	ST   -Y,R17
001084 9513      	INC  R17
001085 940e 165d 	CALL SUBOPT_0x3E
001087 83ef      	STD  Y+7,R30
001088 cff7      	RJMP _0x2060053
                 _0x2060055:
001089 81ef      	LDD  R30,Y+7
00108a 87e8      	STD  Y+8,R30
00108b 85ed      	LDD  R30,Y+13
00108c 0f3e      	ADD  R19,R30
00108d 2fe2      	MOV  R30,R18
00108e 5021      	SUBI R18,1
00108f 30e0      	CPI  R30,0
001090 f761      	BRNE _0x2060051
001091 c079      	RJMP _0x2060056
                 _0x206004D:
001092 e0e0      	LDI  R30,LOW(0)
001093 83ee      	STD  Y+6,R30
                 _0x2060057:
001094 940e 1655 	CALL SUBOPT_0x3D
001096 f008      	BRLO PC+2
001097 c073      	RJMP _0x2060059
001098 891c      	LDD  R17,Y+20
001099 893b      	LDD  R19,Y+19
00109a e0e1      	LDI  R30,LOW(1)
00109b 2f2e      	MOV  R18,R30
00109c 2f0e      	MOV  R16,R30
00109d 89aa      	LDD  R26,Y+18
00109e 27bb      	CLR  R27
00109f 89ec      	LDD  R30,Y+20
0010a0 e0f0      	LDI  R31,0
0010a1 1bae      	SUB  R26,R30
0010a2 0bbf      	SBC  R27,R31
0010a3 01ad      	MOVW R20,R26
0010a4 2355      	TST  R21
0010a5 f42a      	BRPL _0x206005A
0010a6 ef0f      	LDI  R16,LOW(255)
0010a7 01fa      	MOVW R30,R20
0010a8 940e 16d6 	CALL __ANEGW1
0010aa 01af      	MOVW R20,R30
                 _0x206005A:
0010ab 01fa      	MOVW R30,R20
0010ac 0fee      	LSL  R30
0010ad 1fff      	ROL  R31
0010ae 87ef      	STD  Y+15,R30
0010af 8bf8      	STD  Y+15+1,R31
0010b0 89a9      	LDD  R26,Y+17
0010b1 27bb      	CLR  R27
0010b2 89eb      	LDD  R30,Y+19
0010b3 e0f0      	LDI  R31,0
0010b4 1bae      	SUB  R26,R30
0010b5 0bbf      	SBC  R27,R31
0010b6 87ad      	STD  Y+13,R26
0010b7 87be      	STD  Y+13+1,R27
0010b8 85ae      	LDD  R26,Y+14
0010b9 23aa      	TST  R26
0010ba f43a      	BRPL _0x206005B
0010bb ef2f      	LDI  R18,LOW(255)
0010bc 85ed      	LDD  R30,Y+13
0010bd 85fe      	LDD  R31,Y+13+1
0010be 940e 16d6 	CALL __ANEGW1
0010c0 87ed      	STD  Y+13,R30
0010c1 87fe      	STD  Y+13+1,R31
                 _0x206005B:
0010c2 85ed      	LDD  R30,Y+13
0010c3 85fe      	LDD  R31,Y+13+1
0010c4 0fee      	LSL  R30
0010c5 1fff      	ROL  R31
0010c6 87eb      	STD  Y+11,R30
0010c7 87fc      	STD  Y+11+1,R31
0010c8 931a      	ST   -Y,R17
0010c9 933a      	ST   -Y,R19
0010ca e0a1      	LDI  R26,LOW(1)
0010cb df25      	RCALL _glcd_putpixelm_G103
0010cc 87e8      	STD  Y+8,R30
0010cd e0e0      	LDI  R30,LOW(0)
0010ce 87e9      	STD  Y+9,R30
0010cf 87ea      	STD  Y+9+1,R30
0010d0 85ad      	LDD  R26,Y+13
0010d1 85be      	LDD  R27,Y+13+1
0010d2 174a      	CP   R20,R26
0010d3 075b      	CPC  R21,R27
0010d4 f0bc      	BRLT _0x206005C
                 _0x206005E:
0010d5 0f10      	ADD  R17,R16
0010d6 85eb      	LDD  R30,Y+11
0010d7 85fc      	LDD  R31,Y+11+1
0010d8 940e 1661 	CALL SUBOPT_0x3F
0010da 85a9      	LDD  R26,Y+9
0010db 85ba      	LDD  R27,Y+9+1
0010dc 174a      	CP   R20,R26
0010dd 075b      	CPC  R21,R27
0010de f42c      	BRGE _0x2060060
0010df 0f32      	ADD  R19,R18
0010e0 85af      	LDD  R26,Y+15
0010e1 89b8      	LDD  R27,Y+15+1
0010e2 940e 1668 	CALL SUBOPT_0x40
                 _0x2060060:
0010e4 931a      	ST   -Y,R17
0010e5 940e 165d 	CALL SUBOPT_0x3E
0010e7 87e8      	STD  Y+8,R30
0010e8 89ea      	LDD  R30,Y+18
0010e9 17e1      	CP   R30,R17
0010ea f751      	BRNE _0x206005E
0010eb c018      	RJMP _0x2060061
                 _0x206005C:
                 _0x2060063:
0010ec 0f32      	ADD  R19,R18
0010ed 85ef      	LDD  R30,Y+15
0010ee 89f8      	LDD  R31,Y+15+1
0010ef 940e 1661 	CALL SUBOPT_0x3F
0010f1 85ed      	LDD  R30,Y+13
0010f2 85fe      	LDD  R31,Y+13+1
0010f3 85a9      	LDD  R26,Y+9
0010f4 85ba      	LDD  R27,Y+9+1
0010f5 17ea      	CP   R30,R26
0010f6 07fb      	CPC  R31,R27
0010f7 f42c      	BRGE _0x2060065
0010f8 0f10      	ADD  R17,R16
0010f9 85ab      	LDD  R26,Y+11
0010fa 85bc      	LDD  R27,Y+11+1
0010fb 940e 1668 	CALL SUBOPT_0x40
                 _0x2060065:
0010fd 931a      	ST   -Y,R17
0010fe 940e 165d 	CALL SUBOPT_0x3E
001100 87e8      	STD  Y+8,R30
001101 89e9      	LDD  R30,Y+17
001102 17e3      	CP   R30,R19
001103 f741      	BRNE _0x2060063
                 _0x2060061:
001104 89eb      	LDD  R30,Y+19
001105 5fef      	SUBI R30,-LOW(1)
001106 8beb      	STD  Y+19,R30
001107 89e9      	LDD  R30,Y+17
001108 5fef      	SUBI R30,-LOW(1)
001109 8be9      	STD  Y+17,R30
00110a cf89      	RJMP _0x2060057
                 _0x2060059:
                 _0x2060056:
                 _0x206004C:
                 _0x2120008:
00110b 940e 1778 	CALL __LOADLOCR6
00110d 9665      	ADIW R28,21
00110e 9508      	RET
                 ; .FEND
                 _glcd_corners_G103:
                 ; .FSTART _glcd_corners_G103
00110f 93ba      	ST   -Y,R27
001110 93aa      	ST   -Y,R26
001111 940e 1771 	CALL __SAVELOCR6
001113 81ee      	LDD  R30,Y+6
001114 81ff      	LDD  R31,Y+6+1
001115 8113      	LDD  R17,Z+3
001116 8101      	LDD  R16,Z+1
001117 8132      	LDD  R19,Z+2
001118 81ae      	LDD  R26,Y+6
001119 81bf      	LDD  R27,Y+6+1
00111a 912c      	LD   R18,X
00111b 1701      	CP   R16,R17
00111c f418      	BRSH _0x2060066
00111d 2f50      	MOV  R21,R16
00111e 2f01      	MOV  R16,R17
00111f 2f15      	MOV  R17,R21
                 _0x2060066:
001120 1723      	CP   R18,R19
001121 f418      	BRSH _0x2060067
001122 2f52      	MOV  R21,R18
001123 2f23      	MOV  R18,R19
001124 2f35      	MOV  R19,R21
                 _0x2060067:
001125 2fe1      	MOV  R30,R17
                +
001126 81ae     +LDD R26 , Y + 6
001127 81bf     +LDD R27 , Y + 6 + 1
001128 9613     +ADIW R26 , 3
001129 93ec     +ST X , R30
                 	__PUTB1SNS 6,3
00112a 2fe3      	MOV  R30,R19
                +
00112b 81ae     +LDD R26 , Y + 6
00112c 81bf     +LDD R27 , Y + 6 + 1
00112d 9612     +ADIW R26 , 2
00112e 93ec     +ST X , R30
                 	__PUTB1SNS 6,2
00112f 2fe0      	MOV  R30,R16
                +
001130 81ae     +LDD R26 , Y + 6
001131 81bf     +LDD R27 , Y + 6 + 1
001132 9611     +ADIW R26 , 1
001133 93ec     +ST X , R30
                 	__PUTB1SNS 6,1
001134 81ae      	LDD  R26,Y+6
001135 81bf      	LDD  R27,Y+6+1
001136 932c      	ST   X,R18
001137 940e 1778 	CALL __LOADLOCR6
001139 c29b      	RJMP _0x2120006
                 ; .FEND
                 _glcd_rectround:
                 ; .FSTART _glcd_rectround
00113a 93aa      	ST   -Y,R26
00113b 9722      	SBIW R28,2
00113c 940e 1771 	CALL __SAVELOCR6
00113e 85ea      	LDD  R30,Y+10
00113f 30e0      	CPI  R30,0
001140 f019      	BREQ _0x2060069
001141 85e9      	LDD  R30,Y+9
001142 30e0      	CPI  R30,0
001143 f409      	BRNE _0x206006A
                 _0x2060069:
001144 c05e      	RJMP _0x2060068
                 _0x206006A:
001145 85e8      	LDD  R30,Y+8
001146 85ac      	LDD  R26,Y+12
001147 0fea      	ADD  R30,R26
001148 2f1e      	MOV  R17,R30
001149 85e8      	LDD  R30,Y+8
00114a 85ab      	LDD  R26,Y+11
00114b 0fea      	ADD  R30,R26
00114c 2f2e      	MOV  R18,R30
                +
00114d 91e0 0493+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
00114f 50e1      	SUBI R30,LOW(1)
001150 83ef      	STD  Y+7,R30
001151 85ea      	LDD  R30,Y+10
001152 85ac      	LDD  R26,Y+12
001153 0fae      	ADD  R26,R30
001154 50a1      	SUBI R26,LOW(1)
001155 2f3a      	MOV  R19,R26
001156 85a8      	LDD  R26,Y+8
001157 2fe3      	MOV  R30,R19
001158 1bea      	SUB  R30,R26
001159 2f0e      	MOV  R16,R30
00115a 81af      	LDD  R26,Y+7
00115b 1b3a      	SUB  R19,R26
00115c 85e9      	LDD  R30,Y+9
00115d 85ab      	LDD  R26,Y+11
00115e 0fae      	ADD  R26,R30
00115f 50a1      	SUBI R26,LOW(1)
001160 2f4a      	MOV  R20,R26
001161 85a8      	LDD  R26,Y+8
001162 2fe4      	MOV  R30,R20
001163 1bea      	SUB  R30,R26
001164 2f5e      	MOV  R21,R30
001165 81af      	LDD  R26,Y+7
001166 1b4a      	SUB  R20,R26
                +
001167 91e0 0494+LDS R30 , _glcd_state + ( 9 )
                 	__GETB1MN _glcd_state,9
001169 83ee      	STD  Y+6,R30
00116a efef      	LDI  R30,LOW(255)
                +
00116b 93e0 0494+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
00116d 931a      	ST   -Y,R17
00116e 85ec      	LDD  R30,Y+12
00116f 93ea      	ST   -Y,R30
001170 2fe0      	MOV  R30,R16
001171 50e1      	SUBI R30,LOW(1)
001172 93ea      	ST   -Y,R30
001173 85ae      	LDD  R26,Y+14
001174 dea4      	RCALL _glcd_line
001175 930a      	ST   -Y,R16
001176 932a      	ST   -Y,R18
001177 85ea      	LDD  R30,Y+10
001178 93ea      	ST   -Y,R30
001179 e8a1      	LDI  R26,LOW(129)
00117a d1b5      	RCALL _glcd_quadrant_G103
00117b 933a      	ST   -Y,R19
00117c 932a      	ST   -Y,R18
00117d 933a      	ST   -Y,R19
00117e 2fa5      	MOV  R26,R21
00117f 50a1      	SUBI R26,LOW(1)
001180 de98      	RCALL _glcd_line
001181 930a      	ST   -Y,R16
001182 935a      	ST   -Y,R21
001183 85ea      	LDD  R30,Y+10
001184 93ea      	ST   -Y,R30
001185 e8a8      	LDI  R26,LOW(136)
001186 d1a9      	RCALL _glcd_quadrant_G103
001187 930a      	ST   -Y,R16
001188 934a      	ST   -Y,R20
001189 931a      	ST   -Y,R17
00118a 2fa4      	MOV  R26,R20
00118b de8d      	RCALL _glcd_line
00118c 931a      	ST   -Y,R17
00118d 935a      	ST   -Y,R21
00118e 85ea      	LDD  R30,Y+10
00118f 93ea      	ST   -Y,R30
001190 e8a4      	LDI  R26,LOW(132)
001191 d19e      	RCALL _glcd_quadrant_G103
001192 85ec      	LDD  R30,Y+12
001193 93ea      	ST   -Y,R30
001194 935a      	ST   -Y,R21
001195 85ee      	LDD  R30,Y+14
001196 93ea      	ST   -Y,R30
001197 2fa2      	MOV  R26,R18
001198 de80      	RCALL _glcd_line
001199 931a      	ST   -Y,R17
00119a 932a      	ST   -Y,R18
00119b 85ea      	LDD  R30,Y+10
00119c 93ea      	ST   -Y,R30
00119d e8a2      	LDI  R26,LOW(130)
00119e d191      	RCALL _glcd_quadrant_G103
00119f 81ee      	LDD  R30,Y+6
                +
0011a0 93e0 0494+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0011a2 c004      	RJMP _0x206006B
                 _0x2060068:
0011a3 85ec      	LDD  R30,Y+12
0011a4 93ea      	ST   -Y,R30
0011a5 85ac      	LDD  R26,Y+12
0011a6 dd3f      	RCALL _glcd_setpixel
                 _0x206006B:
0011a7 940e 1778 	CALL __LOADLOCR6
0011a9 962d      	ADIW R28,13
0011aa 9508      	RET
                 ; .FEND
                 _glcd_plot8_G103:
                 ; .FSTART _glcd_plot8_G103
0011ab 93ba      	ST   -Y,R27
0011ac 93aa      	ST   -Y,R26
0011ad 9723      	SBIW R28,3
0011ae 940e 1771 	CALL __SAVELOCR6
0011b0 85ed      	LDD  R30,Y+13
0011b1 87e8      	STD  Y+8,R30
                +
0011b2 91e0 0493+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
0011b4 83ef      	STD  Y+7,R30
0011b5 91e0 048b 	LDS  R30,_glcd_state
0011b7 83ee      	STD  Y+6,R30
0011b8 89aa      	LDD  R26,Y+18
0011b9 27bb      	CLR  R27
0011ba 85ef      	LDD  R30,Y+15
0011bb 940e 1646 	CALL SUBOPT_0x3B
0011bd 89a9      	LDD  R26,Y+17
0011be 27bb      	CLR  R27
0011bf 89e8      	LDD  R30,Y+16
0011c0 940e 166f 	CALL SUBOPT_0x41
0011c2 89e8      	LDD  R30,Y+16
0011c3 940e 1676 	CALL SUBOPT_0x42
0011c5 f071      	BREQ _0x2060073
0011c6 85e8      	LDD  R30,Y+8
0011c7 78e0      	ANDI R30,LOW(0x80)
0011c8 f4f1      	BRNE _0x2060075
0011c9 85ad      	LDD  R26,Y+13
0011ca 85be      	LDD  R27,Y+13+1
0011cb e5ea      	LDI  R30,LOW(90)
0011cc e0f0      	LDI  R31,HIGH(90)
0011cd 940e 167e 	CALL SUBOPT_0x43
0011cf f01c      	BRLT _0x2060077
0011d0 940e 1687 	CALL SUBOPT_0x44
0011d2 f40c      	BRGE _0x2060078
                 _0x2060077:
0011d3 c013      	RJMP _0x2060076
                 _0x2060078:
                 _0x2060073:
0011d4 2333      	TST  R19
0011d5 f012      	BRMI _0x2060079
0011d6 940e 168c 	CALL SUBOPT_0x45
                 _0x2060079:
0011d8 81af      	LDD  R26,Y+7
0011d9 30a2      	CPI  R26,LOW(0x2)
0011da f020      	BRLO _0x206007B
                +
0011db 3022     +CPI R18 , LOW ( 2 )
0011dc e0e0     +LDI R30 , HIGH ( 2 )
0011dd 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
0011de f40c      	BRGE _0x206007C
                 _0x206007B:
0011df c007      	RJMP _0x206007A
                 _0x206007C:
0011e0 940e 1690 	CALL SUBOPT_0x46
0011e2 f421      	BRNE _0x206007D
0011e3 930a      	ST   -Y,R16
0011e4 2fa2      	MOV  R26,R18
0011e5 50a1      	SUBI R26,LOW(1)
0011e6 dcff      	RCALL _glcd_setpixel
                 _0x206007D:
                 _0x206007A:
                 _0x2060076:
                 _0x2060075:
0011e7 85e8      	LDD  R30,Y+8
0011e8 78e8      	ANDI R30,LOW(0x88)
0011e9 38e8      	CPI  R30,LOW(0x88)
0011ea f091      	BREQ _0x206007F
0011eb 85e8      	LDD  R30,Y+8
0011ec 78e0      	ANDI R30,LOW(0x80)
0011ed f4c9      	BRNE _0x2060081
0011ee 85ad      	LDD  R26,Y+13
0011ef 85be      	LDD  R27,Y+13+1
0011f0 5fa2      	SUBI R26,LOW(-270)
0011f1 4fbe      	SBCI R27,HIGH(-270)
0011f2 940e 1699 	CALL SUBOPT_0x47
0011f4 f03c      	BRLT _0x2060083
0011f5 85ad      	LDD  R26,Y+13
0011f6 85be      	LDD  R27,Y+13+1
0011f7 5fa2      	SUBI R26,LOW(-270)
0011f8 4fbe      	SBCI R27,HIGH(-270)
0011f9 940e 169e 	CALL SUBOPT_0x48
0011fb f40c      	BRGE _0x2060084
                 _0x2060083:
0011fc c00a      	RJMP _0x2060082
                 _0x2060084:
                 _0x206007F:
0011fd 940e 16a3 	CALL SUBOPT_0x49
0011ff f038      	BRLO _0x2060085
001200 940e 16aa 	CALL SUBOPT_0x4A
001202 f421      	BRNE _0x2060086
001203 930a      	ST   -Y,R16
001204 2fa4      	MOV  R26,R20
001205 5faf      	SUBI R26,-LOW(1)
001206 dcdf      	RCALL _glcd_setpixel
                 _0x2060086:
                 _0x2060085:
                 _0x2060082:
                 _0x2060081:
001207 89aa      	LDD  R26,Y+18
001208 27bb      	CLR  R27
001209 85ef      	LDD  R30,Y+15
00120a e0f0      	LDI  R31,0
00120b 1bae      	SUB  R26,R30
00120c 0bbf      	SBC  R27,R31
00120d 018d      	MOVW R16,R26
00120e 2311      	TST  R17
00120f f40a      	BRPL PC+2
001210 c045      	RJMP _0x2060087
001211 85e8      	LDD  R30,Y+8
001212 78e2      	ANDI R30,LOW(0x82)
001213 38e2      	CPI  R30,LOW(0x82)
001214 f091      	BREQ _0x2060089
001215 85e8      	LDD  R30,Y+8
001216 78e0      	ANDI R30,LOW(0x80)
001217 f511      	BRNE _0x206008B
001218 85ad      	LDD  R26,Y+13
001219 85be      	LDD  R27,Y+13+1
00121a 5aa6      	SUBI R26,LOW(-90)
00121b 4fbf      	SBCI R27,HIGH(-90)
00121c 940e 1699 	CALL SUBOPT_0x47
00121e f03c      	BRLT _0x206008D
00121f 85ad      	LDD  R26,Y+13
001220 85be      	LDD  R27,Y+13+1
001221 5aa6      	SUBI R26,LOW(-90)
001222 4fbf      	SBCI R27,HIGH(-90)
001223 940e 169e 	CALL SUBOPT_0x48
001225 f40c      	BRGE _0x206008E
                 _0x206008D:
001226 c013      	RJMP _0x206008C
                 _0x206008E:
                 _0x2060089:
001227 2333      	TST  R19
001228 f012      	BRMI _0x206008F
001229 940e 168c 	CALL SUBOPT_0x45
                 _0x206008F:
00122b 81af      	LDD  R26,Y+7
00122c 30a2      	CPI  R26,LOW(0x2)
00122d f020      	BRLO _0x2060091
                +
00122e 3022     +CPI R18 , LOW ( 2 )
00122f e0e0     +LDI R30 , HIGH ( 2 )
001230 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
001231 f40c      	BRGE _0x2060092
                 _0x2060091:
001232 c007      	RJMP _0x2060090
                 _0x2060092:
001233 940e 1690 	CALL SUBOPT_0x46
001235 f421      	BRNE _0x2060093
001236 930a      	ST   -Y,R16
001237 2fa2      	MOV  R26,R18
001238 50a1      	SUBI R26,LOW(1)
001239 dcac      	RCALL _glcd_setpixel
                 _0x2060093:
                 _0x2060090:
                 _0x206008C:
                 _0x206008B:
00123a 85e8      	LDD  R30,Y+8
00123b 78e4      	ANDI R30,LOW(0x84)
00123c 38e4      	CPI  R30,LOW(0x84)
00123d f071      	BREQ _0x2060095
00123e 85e8      	LDD  R30,Y+8
00123f 78e0      	ANDI R30,LOW(0x80)
001240 f4a9      	BRNE _0x2060097
001241 85ad      	LDD  R26,Y+13
001242 85be      	LDD  R27,Y+13+1
001243 e0ee      	LDI  R30,LOW(270)
001244 e0f1      	LDI  R31,HIGH(270)
001245 940e 167e 	CALL SUBOPT_0x43
001247 f01c      	BRLT _0x2060099
001248 940e 1687 	CALL SUBOPT_0x44
00124a f40c      	BRGE _0x206009A
                 _0x2060099:
00124b c00a      	RJMP _0x2060098
                 _0x206009A:
                 _0x2060095:
00124c 940e 16a3 	CALL SUBOPT_0x49
00124e f038      	BRLO _0x206009B
00124f 940e 16aa 	CALL SUBOPT_0x4A
001251 f421      	BRNE _0x206009C
001252 930a      	ST   -Y,R16
001253 2fa4      	MOV  R26,R20
001254 5faf      	SUBI R26,-LOW(1)
001255 dc90      	RCALL _glcd_setpixel
                 _0x206009C:
                 _0x206009B:
                 _0x2060098:
                 _0x2060097:
                 _0x2060087:
001256 89aa      	LDD  R26,Y+18
001257 27bb      	CLR  R27
001258 89e8      	LDD  R30,Y+16
001259 940e 1646 	CALL SUBOPT_0x3B
00125b 89a9      	LDD  R26,Y+17
00125c 27bb      	CLR  R27
00125d 85ef      	LDD  R30,Y+15
00125e 940e 166f 	CALL SUBOPT_0x41
001260 85ef      	LDD  R30,Y+15
001261 940e 1676 	CALL SUBOPT_0x42
001263 f081      	BREQ _0x206009E
001264 85e8      	LDD  R30,Y+8
001265 78e0      	ANDI R30,LOW(0x80)
001266 f4f1      	BRNE _0x20600A0
001267 85eb      	LDD  R30,Y+11
001268 85fc      	LDD  R31,Y+11+1
001269 85ad      	LDD  R26,Y+13
00126a 85be      	LDD  R27,Y+13+1
00126b 17ae      	CP   R26,R30
00126c 07bf      	CPC  R27,R31
00126d f02c      	BRLT _0x20600A2
00126e 85e9      	LDD  R30,Y+9
00126f 85fa      	LDD  R31,Y+9+1
001270 17ea      	CP   R30,R26
001271 07fb      	CPC  R31,R27
001272 f40c      	BRGE _0x20600A3
                 _0x20600A2:
001273 c011      	RJMP _0x20600A1
                 _0x20600A3:
                 _0x206009E:
001274 2333      	TST  R19
001275 f07a      	BRMI _0x20600A4
001276 940e 168c 	CALL SUBOPT_0x45
001278 81af      	LDD  R26,Y+7
001279 30a2      	CPI  R26,LOW(0x2)
00127a f050      	BRLO _0x20600A5
00127b 2fe0      	MOV  R30,R16
00127c 5fee      	SUBI R30,-LOW(2)
00127d 940e 16b3 	CALL SUBOPT_0x4B
00127f f429      	BRNE _0x20600A6
001280 2fe0      	MOV  R30,R16
001281 5fef      	SUBI R30,-LOW(1)
001282 93ea      	ST   -Y,R30
001283 2fa2      	MOV  R26,R18
001284 dc61      	RCALL _glcd_setpixel
                 _0x20600A6:
                 _0x20600A5:
                 _0x20600A4:
                 _0x20600A1:
                 _0x20600A0:
001285 85e8      	LDD  R30,Y+8
001286 78e8      	ANDI R30,LOW(0x88)
001287 38e8      	CPI  R30,LOW(0x88)
001288 f071      	BREQ _0x20600A8
001289 85e8      	LDD  R30,Y+8
00128a 78e0      	ANDI R30,LOW(0x80)
00128b f4c1      	BRNE _0x20600AA
00128c 85ad      	LDD  R26,Y+13
00128d 85be      	LDD  R27,Y+13+1
00128e e6e8      	LDI  R30,LOW(360)
00128f e0f1      	LDI  R31,HIGH(360)
001290 940e 167e 	CALL SUBOPT_0x43
001292 f01c      	BRLT _0x20600AC
001293 940e 1687 	CALL SUBOPT_0x44
001295 f40c      	BRGE _0x20600AD
                 _0x20600AC:
001296 c00d      	RJMP _0x20600AB
                 _0x20600AD:
                 _0x20600A8:
001297 940e 16a3 	CALL SUBOPT_0x49
001299 f050      	BRLO _0x20600AE
00129a 2fe0      	MOV  R30,R16
00129b 5fee      	SUBI R30,-LOW(2)
00129c 940e 16bb 	CALL SUBOPT_0x4C
00129e f429      	BRNE _0x20600AF
00129f 2fe0      	MOV  R30,R16
0012a0 5fef      	SUBI R30,-LOW(1)
0012a1 93ea      	ST   -Y,R30
0012a2 2fa4      	MOV  R26,R20
0012a3 dc42      	RCALL _glcd_setpixel
                 _0x20600AF:
                 _0x20600AE:
                 _0x20600AB:
                 _0x20600AA:
0012a4 89aa      	LDD  R26,Y+18
0012a5 27bb      	CLR  R27
0012a6 89e8      	LDD  R30,Y+16
0012a7 e0f0      	LDI  R31,0
0012a8 1bae      	SUB  R26,R30
0012a9 0bbf      	SBC  R27,R31
0012aa 018d      	MOVW R16,R26
0012ab 2311      	TST  R17
0012ac f40a      	BRPL PC+2
0012ad c050      	RJMP _0x20600B0
0012ae 85e8      	LDD  R30,Y+8
0012af 78e2      	ANDI R30,LOW(0x82)
0012b0 38e2      	CPI  R30,LOW(0x82)
0012b1 f071      	BREQ _0x20600B2
0012b2 85e8      	LDD  R30,Y+8
0012b3 78e0      	ANDI R30,LOW(0x80)
0012b4 f509      	BRNE _0x20600B4
0012b5 85ad      	LDD  R26,Y+13
0012b6 85be      	LDD  R27,Y+13+1
0012b7 ebe4      	LDI  R30,LOW(180)
0012b8 e0f0      	LDI  R31,HIGH(180)
0012b9 940e 167e 	CALL SUBOPT_0x43
0012bb f01c      	BRLT _0x20600B6
0012bc 940e 1687 	CALL SUBOPT_0x44
0012be f40c      	BRGE _0x20600B7
                 _0x20600B6:
0012bf c016      	RJMP _0x20600B5
                 _0x20600B7:
                 _0x20600B2:
0012c0 2333      	TST  R19
0012c1 f0a2      	BRMI _0x20600B8
0012c2 940e 168c 	CALL SUBOPT_0x45
0012c4 81af      	LDD  R26,Y+7
0012c5 30a2      	CPI  R26,LOW(0x2)
0012c6 f020      	BRLO _0x20600BA
                +
0012c7 3002     +CPI R16 , LOW ( 2 )
0012c8 e0e0     +LDI R30 , HIGH ( 2 )
0012c9 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0012ca f40c      	BRGE _0x20600BB
                 _0x20600BA:
0012cb c00a      	RJMP _0x20600B9
                 _0x20600BB:
0012cc 2fe0      	MOV  R30,R16
0012cd 50e2      	SUBI R30,LOW(2)
0012ce 940e 16b3 	CALL SUBOPT_0x4B
0012d0 f429      	BRNE _0x20600BC
0012d1 2fe0      	MOV  R30,R16
0012d2 50e1      	SUBI R30,LOW(1)
0012d3 93ea      	ST   -Y,R30
0012d4 2fa2      	MOV  R26,R18
0012d5 dc10      	RCALL _glcd_setpixel
                 _0x20600BC:
                 _0x20600B9:
                 _0x20600B8:
                 _0x20600B5:
                 _0x20600B4:
0012d6 85e8      	LDD  R30,Y+8
0012d7 78e4      	ANDI R30,LOW(0x84)
0012d8 38e4      	CPI  R30,LOW(0x84)
0012d9 f091      	BREQ _0x20600BE
0012da 85e8      	LDD  R30,Y+8
0012db 78e0      	ANDI R30,LOW(0x80)
0012dc f509      	BRNE _0x20600C0
0012dd 85ad      	LDD  R26,Y+13
0012de 85be      	LDD  R27,Y+13+1
0012df 54ac      	SUBI R26,LOW(-180)
0012e0 4fbf      	SBCI R27,HIGH(-180)
0012e1 940e 1699 	CALL SUBOPT_0x47
0012e3 f03c      	BRLT _0x20600C2
0012e4 85ad      	LDD  R26,Y+13
0012e5 85be      	LDD  R27,Y+13+1
0012e6 54ac      	SUBI R26,LOW(-180)
0012e7 4fbf      	SBCI R27,HIGH(-180)
0012e8 940e 169e 	CALL SUBOPT_0x48
0012ea f40c      	BRGE _0x20600C3
                 _0x20600C2:
0012eb c012      	RJMP _0x20600C1
                 _0x20600C3:
                 _0x20600BE:
0012ec 940e 16a3 	CALL SUBOPT_0x49
0012ee f020      	BRLO _0x20600C5
                +
0012ef 3002     +CPI R16 , LOW ( 2 )
0012f0 e0e0     +LDI R30 , HIGH ( 2 )
0012f1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0012f2 f40c      	BRGE _0x20600C6
                 _0x20600C5:
0012f3 c00a      	RJMP _0x20600C4
                 _0x20600C6:
0012f4 2fe0      	MOV  R30,R16
0012f5 50e2      	SUBI R30,LOW(2)
0012f6 940e 16bb 	CALL SUBOPT_0x4C
0012f8 f429      	BRNE _0x20600C7
0012f9 2fe0      	MOV  R30,R16
0012fa 50e1      	SUBI R30,LOW(1)
0012fb 93ea      	ST   -Y,R30
0012fc 2fa4      	MOV  R26,R20
0012fd dbe8      	RCALL _glcd_setpixel
                 _0x20600C7:
                 _0x20600C4:
                 _0x20600C1:
                 _0x20600C0:
                 _0x20600B0:
0012fe 940e 1778 	CALL __LOADLOCR6
001300 9663      	ADIW R28,19
001301 9508      	RET
                 ; .FEND
                 _glcd_line2_G103:
                 ; .FSTART _glcd_line2_G103
001302 93aa      	ST   -Y,R26
001303 940e 1773 	CALL __SAVELOCR4
001305 81af      	LDD  R26,Y+7
001306 27bb      	CLR  R27
001307 81ed      	LDD  R30,Y+5
001308 e0f0      	LDI  R31,0
001309 1bae      	SUB  R26,R30
00130a 0bbf      	SBC  R27,R31
00130b dbb0      	RCALL _glcd_clipx
00130c 2f1e      	MOV  R17,R30
00130d 81af      	LDD  R26,Y+7
00130e 27bb      	CLR  R27
00130f 81ed      	LDD  R30,Y+5
001310 e0f0      	LDI  R31,0
001311 0fae      	ADD  R26,R30
001312 1fbf      	ADC  R27,R31
001313 dba8      	RCALL _glcd_clipx
001314 2f0e      	MOV  R16,R30
001315 81ae      	LDD  R26,Y+6
001316 27bb      	CLR  R27
001317 81ec      	LDD  R30,Y+4
001318 e0f0      	LDI  R31,0
001319 1bae      	SUB  R26,R30
00131a 0bbf      	SBC  R27,R31
00131b dbb5      	RCALL _glcd_clipy
00131c 2f3e      	MOV  R19,R30
00131d 81ae      	LDD  R26,Y+6
00131e 27bb      	CLR  R27
00131f 81ec      	LDD  R30,Y+4
001320 e0f0      	LDI  R31,0
001321 0fae      	ADD  R26,R30
001322 1fbf      	ADC  R27,R31
001323 dbad      	RCALL _glcd_clipy
001324 2f2e      	MOV  R18,R30
001325 931a      	ST   -Y,R17
001326 933a      	ST   -Y,R19
001327 930a      	ST   -Y,R16
001328 2fa3      	MOV  R26,R19
001329 dcef      	RCALL _glcd_line
00132a 931a      	ST   -Y,R17
00132b 932a      	ST   -Y,R18
00132c 930a      	ST   -Y,R16
00132d 2fa2      	MOV  R26,R18
00132e dcea      	RCALL _glcd_line
00132f c0a3      	RJMP _0x2120005
                 ; .FEND
                 _glcd_quadrant_G103:
                 ; .FSTART _glcd_quadrant_G103
001330 93aa      	ST   -Y,R26
001331 940e 1771 	CALL __SAVELOCR6
001333 85a9      	LDD  R26,Y+9
001334 38a0      	CPI  R26,LOW(0x80)
001335 f418      	BRSH _0x20600C9
001336 85a8      	LDD  R26,Y+8
001337 34a0      	CPI  R26,LOW(0x40)
001338 f008      	BRLO _0x20600C8
                 _0x20600C9:
001339 c04f      	RJMP _0x2120007
                 _0x20600C8:
                +
00133a 9150 0493+LDS R21 , _glcd_state + ( 8 )
                 	__GETBRMN 21,_glcd_state,8
                 _0x20600CB:
00133c 2fe5      	MOV  R30,R21
00133d 5051      	SUBI R21,1
00133e 30e0      	CPI  R30,0
00133f f409      	BRNE PC+2
001340 c048      	RJMP _0x20600CD
001341 81ef      	LDD  R30,Y+7
001342 30e0      	CPI  R30,0
001343 f409      	BRNE _0x20600CE
001344 c044      	RJMP _0x2120007
                 _0x20600CE:
001345 81ef      	LDD  R30,Y+7
001346 50e1      	SUBI R30,LOW(1)
001347 83ef      	STD  Y+7,R30
001348 5fef      	SUBI R30,-LOW(1)
001349 2f0e      	MOV  R16,R30
00134a e0f0      	LDI  R31,0
00134b e0a5      	LDI  R26,LOW(5)
00134c e0b0      	LDI  R27,HIGH(5)
00134d 1bae      	SUB  R26,R30
00134e 0bbf      	SBC  R27,R31
00134f 01fd      	MOVW R30,R26
001350 940e 16ee 	CALL __LSLW2
001352 940e 16f3 	CALL __ASRW2
001354 019f      	MOVW R18,R30
001355 e010      	LDI  R17,LOW(0)
                 _0x20600D0:
001356 81ae      	LDD  R26,Y+6
001357 34a0      	CPI  R26,LOW(0x40)
001358 f459      	BRNE _0x20600D2
001359 940e 16c3 	CALL SUBOPT_0x4D
00135b 931a      	ST   -Y,R17
00135c 2fa0      	MOV  R26,R16
00135d dfa4      	RCALL _glcd_line2_G103
00135e 940e 16c3 	CALL SUBOPT_0x4D
001360 930a      	ST   -Y,R16
001361 2fa1      	MOV  R26,R17
001362 df9f      	RCALL _glcd_line2_G103
001363 c00f      	RJMP _0x20600D3
                 _0x20600D2:
001364 940e 16c3 	CALL SUBOPT_0x4D
001366 931a      	ST   -Y,R17
001367 930a      	ST   -Y,R16
001368 85ea      	LDD  R30,Y+10
001369 e0f0      	LDI  R31,0
00136a 93fa      	ST   -Y,R31
00136b 93ea      	ST   -Y,R30
00136c e0e0      	LDI  R30,LOW(0)
00136d e0f0      	LDI  R31,HIGH(0)
00136e 93fa      	ST   -Y,R31
00136f 93ea      	ST   -Y,R30
001370 e0a0      	LDI  R26,LOW(0)
001371 e0b0      	LDI  R27,0
001372 de38      	RCALL _glcd_plot8_G103
                 _0x20600D3:
001373 5f1f      	SUBI R17,-1
001374 2333      	TST  R19
001375 f41a      	BRPL _0x20600D4
001376 2fe1      	MOV  R30,R17
001377 e0f0      	LDI  R31,0
001378 c008      	RJMP _0x206011C
                 _0x20600D4:
001379 5001      	SUBI R16,1
00137a 2fa1      	MOV  R26,R17
00137b 27bb      	CLR  R27
00137c 2fe0      	MOV  R30,R16
00137d e0f0      	LDI  R31,0
00137e 1bae      	SUB  R26,R30
00137f 0bbf      	SBC  R27,R31
001380 01fd      	MOVW R30,R26
                 _0x206011C:
001381 0fee      	LSL  R30
001382 1fff      	ROL  R31
001383 9631      	ADIW R30,1
                +
001384 0f2e     +ADD R18 , R30
001385 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
001386 1701      	CP   R16,R17
001387 f670      	BRSH _0x20600D0
001388 cfb3      	RJMP _0x20600CB
                 _0x20600CD:
                 _0x2120007:
001389 940e 1778 	CALL __LOADLOCR6
00138b 962a      	ADIW R28,10
00138c 9508      	RET
                 ; .FEND
                 _glcd_circle:
                 ; .FSTART _glcd_circle
00138d 93aa      	ST   -Y,R26
00138e 81ea      	LDD  R30,Y+2
00138f 93ea      	ST   -Y,R30
001390 81ea      	LDD  R30,Y+2
001391 93ea      	ST   -Y,R30
001392 81ea      	LDD  R30,Y+2
001393 93ea      	ST   -Y,R30
001394 e8af      	LDI  R26,LOW(143)
001395 df9a      	RCALL _glcd_quadrant_G103
001396 940c 1464 	JMP  _0x2120002
                 ; .FEND
                 _glcd_barrel:
                 ; .FSTART _glcd_barrel
001398 93aa      	ST   -Y,R26
001399 940e 1773 	CALL __SAVELOCR4
00139b 81af      	LDD  R26,Y+7
00139c 38a0      	CPI  R26,LOW(0x80)
00139d f418      	BRSH _0x20600ED
00139e 81ae      	LDD  R26,Y+6
00139f 34a0      	CPI  R26,LOW(0x40)
0013a0 f008      	BRLO _0x20600EC
                 _0x20600ED:
0013a1 c031      	RJMP _0x2120005
                 _0x20600EC:
0013a2 81ed      	LDD  R30,Y+5
0013a3 30e0      	CPI  R30,0
0013a4 f019      	BREQ _0x20600F0
0013a5 81ec      	LDD  R30,Y+4
0013a6 30e0      	CPI  R30,0
0013a7 f409      	BRNE _0x20600F1
                 _0x20600F0:
0013a8 c02a      	RJMP _0x20600EF
                 _0x20600F1:
0013a9 813e      	LDD  R19,Y+6
0013aa 2fe3      	MOV  R30,R19
0013ab 81ac      	LDD  R26,Y+4
0013ac 0fea      	ADD  R30,R26
0013ad 83ec      	STD  Y+4,R30
0013ae 81ef      	LDD  R30,Y+7
0013af 81ad      	LDD  R26,Y+5
0013b0 0fea      	ADD  R30,R26
0013b1 83ed      	STD  Y+5,R30
                 _0x20600F2:
0013b2 81ec      	LDD  R30,Y+4
0013b3 173e      	CP   R19,R30
0013b4 f4f0      	BRSH _0x20600F4
0013b5 1be3      	SUB  R30,R19
0013b6 2f2e      	MOV  R18,R30
0013b7 3029      	CPI  R18,9
0013b8 f008      	BRLO _0x20600F5
0013b9 e028      	LDI  R18,LOW(8)
                 _0x20600F5:
0013ba 811f      	LDD  R17,Y+7
                 _0x20600F6:
0013bb 81ed      	LDD  R30,Y+5
0013bc 171e      	CP   R17,R30
0013bd f498      	BRSH _0x20600F8
0013be 1be1      	SUB  R30,R17
0013bf 2f0e      	MOV  R16,R30
0013c0 3009      	CPI  R16,9
0013c1 f008      	BRLO _0x20600F9
0013c2 e008      	LDI  R16,LOW(8)
                 _0x20600F9:
0013c3 931a      	ST   -Y,R17
0013c4 933a      	ST   -Y,R19
0013c5 930a      	ST   -Y,R16
0013c6 932a      	ST   -Y,R18
0013c7 e0e0      	LDI  R30,LOW(0)
0013c8 93ea      	ST   -Y,R30
                +
0013c9 e9ec     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0013ca e0f4     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
0013cb 93fa      	ST   -Y,R31
0013cc 93ea      	ST   -Y,R30
0013cd e0a8      	LDI  R26,LOW(8)
0013ce d910      	RCALL _glcd_block
0013cf 0f10      	ADD  R17,R16
0013d0 cfea      	RJMP _0x20600F6
                 _0x20600F8:
0013d1 0f32      	ADD  R19,R18
0013d2 cfdf      	RJMP _0x20600F2
                 _0x20600F4:
                 _0x20600EF:
                 _0x2120005:
0013d3 940e 177a 	CALL __LOADLOCR4
                 _0x2120006:
0013d5 9628      	ADIW R28,8
0013d6 9508      	RET
                 ; .FEND
                 _glcd_bar:
                 ; .FSTART _glcd_bar
0013d7 93aa      	ST   -Y,R26
0013d8 01de      	MOVW R26,R28
0013d9 dd35      	RCALL _glcd_corners_G103
0013da 81eb      	LDD  R30,Y+3
0013db 93ea      	ST   -Y,R30
0013dc 81eb      	LDD  R30,Y+3
0013dd 93ea      	ST   -Y,R30
0013de 81ad      	LDD  R26,Y+5
0013df 81eb      	LDD  R30,Y+3
0013e0 1bea      	SUB  R30,R26
0013e1 5fef      	SUBI R30,-LOW(1)
0013e2 93ea      	ST   -Y,R30
0013e3 81ad      	LDD  R26,Y+5
0013e4 81eb      	LDD  R30,Y+3
0013e5 1bea      	SUB  R30,R26
0013e6 5fef      	SUBI R30,-LOW(1)
0013e7 2fae      	MOV  R26,R30
0013e8 dfaf      	RCALL _glcd_barrel
0013e9 940c 1483 	JMP  _0x2120001
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
0013eb 93ba      	ST   -Y,R27
0013ec 93aa      	ST   -Y,R26
0013ed 81b9          ldd  r27,y+1
0013ee 81a8          ld   r26,y
0013ef 9610          adiw r26,0
0013f0 f031          breq memset1
0013f1 81fc          ldd  r31,y+4
0013f2 81eb          ldd  r30,y+3
0013f3 816a          ldd  r22,y+2
                 memset0:
0013f4 9361          st   z+,r22
0013f5 9711          sbiw r26,1
0013f6 f7e9          brne memset0
                 memset1:
0013f7 81eb          ldd  r30,y+3
0013f8 81fc          ldd  r31,y+4
                 _0x2120004:
0013f9 9625      	ADIW R28,5
0013fa 9508      	RET
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0013fb 93ba      	ST   -Y,R27
0013fc 93aa      	ST   -Y,R26
0013fd 91a9          ld   r26,y+
0013fe 91b9          ld   r27,y+
0013ff 27ee          clr  r30
001400 27ff          clr  r31
                 strlen0:
001401 916d          ld   r22,x+
001402 2366          tst  r22
001403 f011          breq strlen1
001404 9631          adiw r30,1
001405 cffb          rjmp strlen0
                 strlen1:
001406 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
001407 93ba      	ST   -Y,R27
001408 93aa      	ST   -Y,R26
001409 27aa          clr  r26
00140a 27bb          clr  r27
00140b 91e9          ld   r30,y+
00140c 91f9          ld   r31,y+
                 strlenf0:
00140d 9005      	lpm  r0,z+
00140e 2000          tst  r0
00140f f011          breq strlenf1
001410 9611          adiw r26,1
001411 cffb          rjmp strlenf0
                 strlenf1:
001412 01fd          movw r30,r26
001413 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
001414 93aa      	ST   -Y,R26
001415 81e8      	LD   R30,Y
001416 e0f0      	LDI  R31,0
001417 5be2      	SUBI R30,LOW(-__glcd_mask*2)
001418 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
001419 91a4      	LPM  R26,Z
00141a 81e9      	LDD  R30,Y+1
00141b 940e 16da 	CALL __LSLB12
                 _0x2120003:
00141d 9622      	ADIW R28,2
00141e 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
00141f 93aa      	ST   -Y,R26
001420 931a      	ST   -Y,R17
001421 81e9      	LDD  R30,Y+1
001422 30e7      	CPI  R30,LOW(0x7)
001423 f011      	BREQ _0x2100007
001424 30ea      	CPI  R30,LOW(0xA)
001425 f419      	BRNE _0x2100008
                 _0x2100007:
001426 9110 048b 	LDS  R17,_glcd_state
001428 c009      	RJMP _0x2100009
                 _0x2100008:
001429 30e9      	CPI  R30,LOW(0x9)
00142a f419      	BRNE _0x210000B
                +
00142b 9110 048c+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
00142d c004      	RJMP _0x2100009
                 _0x210000B:
00142e 30e8      	CPI  R30,LOW(0x8)
00142f f4a1      	BRNE _0x2100005
                +
001430 9110 049b+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x2100009:
                +
001432 91e0 048c+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
001434 30e0      	CPI  R30,0
001435 f049      	BREQ _0x210000E
001436 3010      	CPI  R17,0
001437 f019      	BREQ _0x210000F
001438 efef      	LDI  R30,LOW(255)
001439 8118      	LDD  R17,Y+0
00143a c029      	RJMP _0x2120002
                 _0x210000F:
00143b 81ea      	LDD  R30,Y+2
00143c 95e0      	COM  R30
00143d 8118      	LDD  R17,Y+0
00143e c025      	RJMP _0x2120002
                 _0x210000E:
00143f 3010      	CPI  R17,0
001440 f419      	BRNE _0x2100011
001441 e0e0      	LDI  R30,LOW(0)
001442 8118      	LDD  R17,Y+0
001443 c020      	RJMP _0x2120002
                 _0x2100011:
                 _0x2100005:
001444 81ea      	LDD  R30,Y+2
001445 8118      	LDD  R17,Y+0
001446 c01d      	RJMP _0x2120002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
001447 93ba      	ST   -Y,R27
001448 93aa      	ST   -Y,R26
001449 81ea      	LDD  R30,Y+2
00144a 30e1      	CPI  R30,LOW(0x1)
00144b f421      	BRNE _0x2100015
00144c 81e8      	LD   R30,Y
00144d 81f9      	LDD  R31,Y+1
00144e 91e4      	LPM  R30,Z
00144f c014      	RJMP _0x2120002
                 _0x2100015:
001450 30e2      	CPI  R30,LOW(0x2)
001451 f429      	BRNE _0x2100016
001452 81a8      	LD   R26,Y
001453 81b9      	LDD  R27,Y+1
001454 940e 1750 	CALL __EEPROMRDB
001456 c00d      	RJMP _0x2120002
                 _0x2100016:
001457 30e3      	CPI  R30,LOW(0x3)
001458 f441      	BRNE _0x2100018
001459 81a8      	LD   R26,Y
00145a 81b9      	LDD  R27,Y+1
                +
00145b 91e0 04a4+LDS R30 , _glcd_state + ( 25 )
00145d 91f0 04a5+LDS R31 , _glcd_state + ( 25 ) + 1
00145f 9509     +ICALL
                 	__CALL1MN _glcd_state,25
001460 c003      	RJMP _0x2120002
                 _0x2100018:
001461 81a8      	LD   R26,Y
001462 81b9      	LDD  R27,Y+1
001463 91ec      	LD   R30,X
                 _0x2120002:
001464 9623      	ADIW R28,3
001465 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
001466 93aa      	ST   -Y,R26
001467 81eb      	LDD  R30,Y+3
001468 30e0      	CPI  R30,0
001469 f429      	BRNE _0x210001C
00146a 81e8      	LD   R30,Y
00146b 81a9      	LDD  R26,Y+1
00146c 81ba      	LDD  R27,Y+1+1
00146d 93ec      	ST   X,R30
00146e c014      	RJMP _0x210001B
                 _0x210001C:
00146f 30e2      	CPI  R30,LOW(0x2)
001470 f431      	BRNE _0x210001D
001471 81e8      	LD   R30,Y
001472 81a9      	LDD  R26,Y+1
001473 81ba      	LDD  R27,Y+1+1
001474 940e 175c 	CALL __EEPROMWRB
001476 c00c      	RJMP _0x210001B
                 _0x210001D:
001477 30e3      	CPI  R30,LOW(0x3)
001478 f451      	BRNE _0x210001B
001479 81e9      	LDD  R30,Y+1
00147a 81fa      	LDD  R31,Y+1+1
00147b 93fa      	ST   -Y,R31
00147c 93ea      	ST   -Y,R30
00147d 81aa      	LDD  R26,Y+2
                +
00147e 91e0 04a6+LDS R30 , _glcd_state + ( 27 )
001480 91f0 04a7+LDS R31 , _glcd_state + ( 27 ) + 1
001482 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x210001B:
                 _0x2120001:
001483 9624      	ADIW R28,4
001484 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _glcd_state:
00048b           	.BYTE 0x1D
                 _recive:
0004a8           	.BYTE 0x7
                 
                 	.ESEG
                 _center:
000000           	.BYTE 0x100
                 
                 	.DSEG
                 _tx_buffer:
0004af           	.BYTE 0x8
                 _rx_buffer:
0004b7           	.BYTE 0x8
                 __seed_G100:
0004bf           	.BYTE 0x4
                 _ks0108_coord_G102:
0004c3           	.BYTE 0x3
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
001485 93ea      	ST   -Y,R30
001486 e0a5      	LDI  R26,LOW(5)
001487 940c 113a 	JMP  _glcd_rectround
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
001489 940e 0fdc 	CALL _glcd_outtextxy
00148b e0e5      	LDI  R30,LOW(5)
00148c 93ea      	ST   -Y,R30
00148d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2:
00148e 931a      	ST   -Y,R17
00148f 930a      	ST   -Y,R16
                +
001490 e000     +LDI R16 , LOW ( 0 )
001491 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
001492 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
001493 93ea      	ST   -Y,R30
001494 e0a2      	LDI  R26,LOW(2)
001495 940c 113a 	JMP  _glcd_rectround
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
                +
001497 e000     +LDI R16 , LOW ( 0 )
001498 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
001499 e020     +LDI R18 , LOW ( 0 )
00149a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00149b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5:
00149c 01f8      	MOVW R30,R16
00149d 940e 16ee 	CALL __LSLW2
00149f 0fe2      	ADD  R30,R18
0014a0 1ff3      	ADC  R31,R19
0014a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x6:
0014a2 e0e1      	LDI  R30,LOW(1)
0014a3 93ea      	ST   -Y,R30
0014a4 93ea      	ST   -Y,R30
0014a5 e7ee      	LDI  R30,LOW(126)
0014a6 93ea      	ST   -Y,R30
0014a7 e3ee      	LDI  R30,LOW(62)
0014a8 cfdc      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x7:
0014a9 93ea      	ST   -Y,R30
0014aa e3e2      	LDI  R30,LOW(50)
0014ab 93ea      	ST   -Y,R30
0014ac e0aa      	LDI  R26,LOW(10)
0014ad 940c 138d 	JMP  _glcd_circle
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
0014af 940e 064f 	CALL _tablepattern
0014b1 e4e4      	LDI  R30,LOW(68)
0014b2 93ea      	ST   -Y,R30
0014b3 e0e0      	LDI  R30,LOW(0)
0014b4 93ea      	ST   -Y,R30
0014b5 e3ec      	LDI  R30,LOW(60)
0014b6 93ea      	ST   -Y,R30
0014b7 e4e0      	LDI  R30,LOW(64)
0014b8 cfda      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x9:
0014b9 940e 0fdc 	CALL _glcd_outtextxy
0014bb e5e4      	LDI  R30,LOW(84)
0014bc 93ea      	ST   -Y,R30
0014bd e1e9      	LDI  R30,LOW(25)
0014be 93ea      	ST   -Y,R30
0014bf e0aa      	LDI  R26,LOW(10)
0014c0 940e 138d 	CALL _glcd_circle
0014c2 e4ee      	LDI  R30,LOW(78)
0014c3 93ea      	ST   -Y,R30
0014c4 e1e6      	LDI  R30,LOW(22)
0014c5 93ea      	ST   -Y,R30
0014c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xA:
0014c7 940e 0fdc 	CALL _glcd_outtextxy
0014c9 e6ee      	LDI  R30,LOW(110)
0014ca 93ea      	ST   -Y,R30
0014cb e1e9      	LDI  R30,LOW(25)
0014cc 93ea      	ST   -Y,R30
0014cd e0aa      	LDI  R26,LOW(10)
0014ce 940e 138d 	CALL _glcd_circle
0014d0 e6ea      	LDI  R30,LOW(106)
0014d1 93ea      	ST   -Y,R30
0014d2 e1e6      	LDI  R30,LOW(22)
0014d3 93ea      	ST   -Y,R30
0014d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB:
0014d5 e4ee      	LDI  R30,LOW(78)
0014d6 93ea      	ST   -Y,R30
0014d7 e3e0      	LDI  R30,LOW(48)
0014d8 93ea      	ST   -Y,R30
0014d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0xC:
0014da e7e5      	LDI  R30,LOW(117)
0014db 93ea      	ST   -Y,R30
0014dc e0e5      	LDI  R30,LOW(5)
0014dd 93ea      	ST   -Y,R30
0014de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xD:
0014df 940e 16ea 	CALL __LSLW4
0014e1 50e0      	SUBI R30,LOW(-_center)
0014e2 40f0      	SBCI R31,HIGH(-_center)
0014e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:38 WORDS
                 SUBOPT_0xE:
0014e4 01f9      	MOVW R30,R18
0014e5 e0a3      	LDI  R26,LOW(3)
0014e6 e0b0      	LDI  R27,HIGH(3)
0014e7 940e 172b 	CALL __MANDW12
0014e9 0fee      	LSL  R30
0014ea 0fee      	LSL  R30
0014eb 2f6e      	MOV  R22,R30
0014ec 01f8      	MOVW R30,R16
0014ed e0a3      	LDI  R26,LOW(3)
0014ee e0b0      	LDI  R27,HIGH(3)
0014ef 940e 172b 	CALL __MANDW12
0014f1 e1a0      	LDI  R26,LOW(16)
0014f2 02ea      	MULS R30,R26
0014f3 01f0      	MOVW R30,R0
0014f4 0fe6      	ADD  R30,R22
0014f5 5fee      	SUBI R30,-LOW(2)
0014f6 93ea      	ST   -Y,R30
0014f7 2fe5      	MOV  R30,R21
0014f8 0fee      	LSL  R30
0014f9 0fee      	LSL  R30
0014fa 0fee      	LSL  R30
0014fb 2f6e      	MOV  R22,R30
0014fc 01d9      	MOVW R26,R18
0014fd e0e4      	LDI  R30,LOW(4)
0014fe e0f0      	LDI  R31,HIGH(4)
0014ff 940e 1718 	CALL __DIVW21
001501 0fee      	LSL  R30
001502 0fee      	LSL  R30
001503 0f6e      	ADD  R22,R30
001504 01d8      	MOVW R26,R16
001505 e0e4      	LDI  R30,LOW(4)
001506 e0f0      	LDI  R31,HIGH(4)
001507 940e 1718 	CALL __DIVW21
001509 e1a0      	LDI  R26,LOW(16)
00150a 02ea      	MULS R30,R26
00150b 01f0      	MOVW R30,R0
00150c 2fa6      	MOV  R26,R22
00150d 0fae      	ADD  R26,R30
00150e 5fae      	SUBI R26,-LOW(2)
00150f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xF:
001510 e4e6      	LDI  R30,LOW(70)
001511 93ea      	ST   -Y,R30
001512 e0ef      	LDI  R30,LOW(15)
001513 93ea      	ST   -Y,R30
001514 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x10:
001515 940e 0fdc 	CALL _glcd_outtextxy
001517 e4e6      	LDI  R30,LOW(70)
001518 93ea      	ST   -Y,R30
001519 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
00151a 940e 0fdc 	CALL _glcd_outtextxy
00151c e4ea      	LDI  R30,LOW(74)
00151d 93ea      	ST   -Y,R30
00151e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
00151f 940e 0fdc 	CALL _glcd_outtextxy
001521 e4ed      	LDI  R30,LOW(77)
001522 93ea      	ST   -Y,R30
001523 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x13:
001524 01f8      	MOVW R30,R16
001525 e0a3      	LDI  R26,LOW(3)
001526 e0b0      	LDI  R27,HIGH(3)
001527 940e 172b 	CALL __MANDW12
001529 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x14:
00152a 01d8      	MOVW R26,R16
00152b e0e4      	LDI  R30,LOW(4)
00152c e0f0      	LDI  R31,HIGH(4)
00152d 940e 1718 	CALL __DIVW21
00152f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
001530 e0e4      	LDI  R30,LOW(4)
001531 e0f0      	LDI  R31,HIGH(4)
001532 940e 171d 	CALL __MODW21
001534 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x16:
001535 81ea      	LDD  R30,Y+2
001536 81fb      	LDD  R31,Y+2+1
001537 e0a3      	LDI  R26,LOW(3)
001538 e0b0      	LDI  R27,HIGH(3)
001539 940e 172b 	CALL __MANDW12
00153b e1a0      	LDI  R26,LOW(16)
00153c 02ea      	MULS R30,R26
00153d 01f0      	MOVW R30,R0
00153e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x17:
00153f 0fe0      	ADD  R30,R16
001540 93ea      	ST   -Y,R30
001541 81ab      	LDD  R26,Y+3
001542 81bc      	LDD  R27,Y+3+1
001543 e0e4      	LDI  R30,LOW(4)
001544 e0f0      	LDI  R31,HIGH(4)
001545 940e 1718 	CALL __DIVW21
001547 e1a0      	LDI  R26,LOW(16)
001548 02ea      	MULS R30,R26
001549 01f0      	MOVW R30,R0
00154a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x18:
00154b 81ab      	LDD  R26,Y+3
00154c 81bc      	LDD  R27,Y+3+1
00154d e0e4      	LDI  R30,LOW(4)
00154e e0f0      	LDI  R31,HIGH(4)
00154f 940e 1718 	CALL __DIVW21
001551 e1a0      	LDI  R26,LOW(16)
001552 02ea      	MULS R30,R26
001553 01f0      	MOVW R30,R0
001554 0fe0      	ADD  R30,R16
001555 2fae      	MOV  R26,R30
001556 940c 0eee 	JMP  _glcd_clrpixel
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x19:
001558 e0a3      	LDI  R26,LOW(3)
001559 e0b0      	LDI  R27,HIGH(3)
00155a 940e 172b 	CALL __MANDW12
00155c e1a0      	LDI  R26,LOW(16)
00155d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A:
00155e 85ea      	LDD  R30,Y+10
00155f 85fb      	LDD  R31,Y+10+1
001560 cf7e      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1B:
001561 01df      	MOVW R26,R30
001562 85e8      	LDD  R30,Y+8
001563 85f9      	LDD  R31,Y+8+1
001564 0fee      	LSL  R30
001565 1fff      	ROL  R31
001566 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1C:
001567 01de      	MOVW R26,R28
001568 9616      	ADIW R26,6
001569 0fa2      	ADD  R26,R18
00156a 1fb3      	ADC  R27,R19
00156b 91ec      	LD   R30,X
00156c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
00156d 85ea      	LDD  R30,Y+10
00156e 85fb      	LDD  R31,Y+10+1
00156f cfe8      	RJMP SUBOPT_0x19
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1E:
001570 02ea      	MULS R30,R26
001571 01f0      	MOVW R30,R0
001572 5fee      	SUBI R30,-LOW(2)
001573 2e0e      	MOV  R0,R30
001574 cfaf      	RJMP SUBOPT_0x13
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x1F:
001575 0fee      	LSL  R30
001576 0fee      	LSL  R30
001577 0de0      	ADD  R30,R0
001578 93ea      	ST   -Y,R30
001579 85ab      	LDD  R26,Y+11
00157a 85bc      	LDD  R27,Y+11+1
00157b e0e4      	LDI  R30,LOW(4)
00157c e0f0      	LDI  R31,HIGH(4)
00157d 940e 1718 	CALL __DIVW21
00157f e1a0      	LDI  R26,LOW(16)
001580 02ea      	MULS R30,R26
001581 01f0      	MOVW R30,R0
001582 5fee      	SUBI R30,-LOW(2)
001583 2f4e      	MOV  R20,R30
001584 cfa5      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20:
001585 0fee      	LSL  R30
001586 0fee      	LSL  R30
001587 2fa4      	MOV  R26,R20
001588 0fae      	ADD  R26,R30
001589 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x21:
00158a 01de      	MOVW R26,R28
00158b 9616      	ADIW R26,6
00158c 0fea      	ADD  R30,R26
00158d 1ffb      	ADC  R31,R27
00158e 010f      	MOVW R0,R30
00158f cfd7      	RJMP SUBOPT_0x1C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
001590 93ba      	ST   -Y,R27
001591 93aa      	ST   -Y,R26
001592 931a      	ST   -Y,R17
001593 930a      	ST   -Y,R16
001594 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23:
001595 940e 02fd 	CALL _putchar
                +
001597 ec88     +LDI R24 , LOW ( 200 )
001598 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
001599 9701     +SBIW R24 , 1
00159a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00159b 81ea      	LDD  R30,Y+2
00159c 81fb      	LDD  R31,Y+2+1
00159d cf41      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x24:
00159e 932a      	ST   -Y,R18
00159f 85ad      	LDD  R26,Y+13
0015a0 85be      	LDD  R27,Y+13+1
0015a1 85ef      	LDD  R30,Y+15
0015a2 89f8      	LDD  R31,Y+15+1
0015a3 9509      	ICALL
0015a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x25:
0015a5 89e8      	LDD  R30,Y+16
0015a6 89f9      	LDD  R31,Y+16+1
0015a7 9734      	SBIW R30,4
0015a8 8be8      	STD  Y+16,R30
0015a9 8bf9      	STD  Y+16+1,R31
0015aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
0015ab 85ad      	LDD  R26,Y+13
0015ac 85be      	LDD  R27,Y+13+1
0015ad 85ef      	LDD  R30,Y+15
0015ae 89f8      	LDD  R31,Y+15+1
0015af 9509      	ICALL
0015b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x27:
0015b1 89a8      	LDD  R26,Y+16
0015b2 89b9      	LDD  R27,Y+16+1
0015b3 9614      	ADIW R26,4
0015b4 940e 1743 	CALL __GETW1P
0015b6 83ee      	STD  Y+6,R30
0015b7 83ff      	STD  Y+6+1,R31
0015b8 81ae      	LDD  R26,Y+6
0015b9 81bf      	LDD  R27,Y+6+1
0015ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x28:
0015bb 89a8      	LDD  R26,Y+16
0015bc 89b9      	LDD  R27,Y+16+1
0015bd 9614      	ADIW R26,4
0015be 940e 1743 	CALL __GETW1P
0015c0 87ea      	STD  Y+10,R30
0015c1 87fb      	STD  Y+10+1,R31
0015c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
0015c3 01de      	MOVW R26,R28
0015c4 961c      	ADIW R26,12
0015c5 940e 16d2 	CALL __ADDW2R15
0015c7 940e 1743 	CALL __GETW1P
0015c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2A:
0015ca 98c3      	CBI  0x18,3
0015cb efef      	LDI  R30,LOW(255)
0015cc bbe4      	OUT  0x14,R30
0015cd 81e8      	LD   R30,Y
0015ce bbe5      	OUT  0x15,R30
0015cf 940e 0b5e 	CALL _ks0108_enable_G102
0015d1 940c 0b62 	JMP  _ks0108_disable_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
0015d3 93aa      	ST   -Y,R26
0015d4 81e9      	LDD  R30,Y+1
0015d5 93ea      	ST   -Y,R30
0015d6 81e9      	LDD  R30,Y+1
0015d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
0015d8 95e6      	LSR  R30
0015d9 95e6      	LSR  R30
0015da 95e6      	LSR  R30
0015db 2fae      	MOV  R26,R30
0015dc 940c 0b9d 	JMP  _ks0108_gotoxp_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D:
0015de 940e 0bc1 	CALL _ks0108_wrdata_G102
0015e0 940c 0bac 	JMP  _ks0108_nextx_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E:
0015e2 0fea      	ADD  R30,R26
0015e3 1ffb      	ADC  R31,R27
0015e4 83ee      	STD  Y+6,R30
0015e5 83ff      	STD  Y+6+1,R31
0015e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2F:
0015e7 85ec      	LDD  R30,Y+12
0015e8 93ea      	ST   -Y,R30
0015e9 81ef      	LDD  R30,Y+7
0015ea 85f8      	LDD  R31,Y+7+1
0015eb 9631      	ADIW R30,1
0015ec 83ef      	STD  Y+7,R30
0015ed 87f8      	STD  Y+7+1,R31
0015ee 9731      	SBIW R30,1
0015ef 93fa      	ST   -Y,R31
0015f0 93ea      	ST   -Y,R30
0015f1 e0a0      	LDI  R26,LOW(0)
0015f2 940c 1466 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x30:
0015f4 85ec      	LDD  R30,Y+12
0015f5 93ea      	ST   -Y,R30
0015f6 81ef      	LDD  R30,Y+7
0015f7 85f8      	LDD  R31,Y+7+1
0015f8 9631      	ADIW R30,1
0015f9 83ef      	STD  Y+7,R30
0015fa 87f8      	STD  Y+7+1,R31
0015fb 9731      	SBIW R30,1
0015fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x31:
0015fd 2766      	CLR  R22
0015fe 2777      	CLR  R23
0015ff 01df      	MOVW R26,R30
001600 01cb      	MOVW R24,R22
001601 940c 1447 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32:
001603 935a      	ST   -Y,R21
001604 85aa      	LDD  R26,Y+10
001605 940c 141f 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x33:
001607 930a      	ST   -Y,R16
001608 9503      	INC  R16
001609 89e8      	LDD  R30,Y+16
00160a 93ea      	ST   -Y,R30
00160b 935a      	ST   -Y,R21
00160c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34:
00160d 930a      	ST   -Y,R16
00160e 9503      	INC  R16
00160f 89a8      	LDD  R26,Y+16
001610 940e 0bd3 	CALL _ks0108_rdbyte_G102
001612 23e4      	AND  R30,R20
001613 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x35:
001614 2f5e      	MOV  R21,R30
001615 85ec      	LDD  R30,Y+12
001616 93ea      	ST   -Y,R30
001617 81af      	LDD  R26,Y+7
001618 85b8      	LDD  R27,Y+7+1
001619 2788      	CLR  R24
00161a 2799      	CLR  R25
00161b 940e 1447 	CALL _glcd_readmem
00161d 2e1e      	MOV  R1,R30
00161e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x36:
00161f 930a      	ST   -Y,R16
001620 9503      	INC  R16
001621 89e8      	LDD  R30,Y+16
001622 93ea      	ST   -Y,R30
001623 85ee      	LDD  R30,Y+14
001624 93ea      	ST   -Y,R30
001625 85e9      	LDD  R30,Y+9
001626 85fa      	LDD  R31,Y+9+1
001627 9631      	ADIW R30,1
001628 87e9      	STD  Y+9,R30
001629 87fa      	STD  Y+9+1,R31
00162a 9731      	SBIW R30,1
00162b cfd1      	RJMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37:
00162c 93ba      	ST   -Y,R27
00162d 93aa      	ST   -Y,R26
00162e 81a8      	LD   R26,Y
00162f 81b9      	LDD  R27,Y+1
001630 940e 176d 	CALL __CPW02
001632 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38:
001633 940e 1771 	CALL __SAVELOCR6
                +
001635 91e0 048f+LDS R30 , _glcd_state + ( 4 )
001637 91f0 0490+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
001639 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39:
00163a 01f8      	MOVW R30,R16
                +
00163b 5f0f     +SUBI R16 , LOW ( - 1 )
00163c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00163d 9004      	LPM  R0,Z
00163e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3A:
                +
00163f 91e0 048f+LDS R30 , _glcd_state + ( 4 )
001641 91f0 0490+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
001643 9631      	ADIW R30,1
001644 91e4      	LPM  R30,Z
001645 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B:
001646 e0f0      	LDI  R31,0
001647 0fea      	ADD  R30,R26
001648 1ffb      	ADC  R31,R27
001649 018f      	MOVW R16,R30
00164a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C:
00164b 93ea      	ST   -Y,R30
00164c e0e0      	LDI  R30,LOW(0)
00164d 93ea      	ST   -Y,R30
00164e e0e0      	LDI  R30,LOW(0)
00164f e0f0      	LDI  R31,HIGH(0)
001650 93fa      	ST   -Y,R31
001651 93ea      	ST   -Y,R30
001652 e0a9      	LDI  R26,LOW(9)
001653 940c 0cdf 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3D:
001655 81ae      	LDD  R26,Y+6
001656 5faf      	SUBI R26,-LOW(1)
001657 83ae      	STD  Y+6,R26
001658 50a1      	SUBI R26,LOW(1)
                +
001659 91e0 0493+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
00165b 17ae      	CP   R26,R30
00165c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E:
00165d 933a      	ST   -Y,R19
00165e 85aa      	LDD  R26,Y+10
00165f 940c 0ff1 	JMP  _glcd_putpixelm_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F:
001661 85a9      	LDD  R26,Y+9
001662 85ba      	LDD  R27,Y+9+1
001663 0fea      	ADD  R30,R26
001664 1ffb      	ADC  R31,R27
001665 87e9      	STD  Y+9,R30
001666 87fa      	STD  Y+9+1,R31
001667 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x40:
001668 85e9      	LDD  R30,Y+9
001669 85fa      	LDD  R31,Y+9+1
00166a 1bea      	SUB  R30,R26
00166b 0bfb      	SBC  R31,R27
00166c 87e9      	STD  Y+9,R30
00166d 87fa      	STD  Y+9+1,R31
00166e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x41:
00166f e0f0      	LDI  R31,0
001670 1bae      	SUB  R26,R30
001671 0bbf      	SBC  R27,R31
001672 019d      	MOVW R18,R26
001673 89a9      	LDD  R26,Y+17
001674 27bb      	CLR  R27
001675 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x42:
001676 e0f0      	LDI  R31,0
001677 0fea      	ADD  R30,R26
001678 1ffb      	ADC  R31,R27
001679 01af      	MOVW R20,R30
00167a 85e8      	LDD  R30,Y+8
00167b 78e1      	ANDI R30,LOW(0x81)
00167c 38e1      	CPI  R30,LOW(0x81)
00167d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x43:
00167e 1bea      	SUB  R30,R26
00167f 0bfb      	SBC  R31,R27
001680 010f      	MOVW R0,R30
001681 01df      	MOVW R26,R30
001682 85eb      	LDD  R30,Y+11
001683 85fc      	LDD  R31,Y+11+1
001684 17ae      	CP   R26,R30
001685 07bf      	CPC  R27,R31
001686 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x44:
001687 85e9      	LDD  R30,Y+9
001688 85fa      	LDD  R31,Y+9+1
001689 15e0      	CP   R30,R0
00168a 05f1      	CPC  R31,R1
00168b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x45:
00168c 930a      	ST   -Y,R16
00168d 2fa2      	MOV  R26,R18
00168e 940c 0ee6 	JMP  _glcd_setpixel
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x46:
001690 930a      	ST   -Y,R16
001691 2fa2      	MOV  R26,R18
001692 50a2      	SUBI R26,LOW(2)
001693 940e 0c8a 	CALL _glcd_getpixel
001695 2fae      	MOV  R26,R30
001696 81ee      	LDD  R30,Y+6
001697 17ea      	CP   R30,R26
001698 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x47:
001699 85eb      	LDD  R30,Y+11
00169a 85fc      	LDD  R31,Y+11+1
00169b 17ae      	CP   R26,R30
00169c 07bf      	CPC  R27,R31
00169d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x48:
00169e 85e9      	LDD  R30,Y+9
00169f 85fa      	LDD  R31,Y+9+1
0016a0 17ea      	CP   R30,R26
0016a1 07fb      	CPC  R31,R27
0016a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x49:
0016a3 930a      	ST   -Y,R16
0016a4 2fa4      	MOV  R26,R20
0016a5 940e 0ee6 	CALL _glcd_setpixel
0016a7 81af      	LDD  R26,Y+7
0016a8 30a2      	CPI  R26,LOW(0x2)
0016a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4A:
0016aa 930a      	ST   -Y,R16
0016ab 2fa4      	MOV  R26,R20
0016ac 5fae      	SUBI R26,-LOW(2)
0016ad 940e 0c8a 	CALL _glcd_getpixel
0016af 2fae      	MOV  R26,R30
0016b0 81ee      	LDD  R30,Y+6
0016b1 17ea      	CP   R30,R26
0016b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4B:
0016b3 93ea      	ST   -Y,R30
0016b4 2fa2      	MOV  R26,R18
0016b5 940e 0c8a 	CALL _glcd_getpixel
0016b7 2fae      	MOV  R26,R30
0016b8 81ee      	LDD  R30,Y+6
0016b9 17ea      	CP   R30,R26
0016ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4C:
0016bb 93ea      	ST   -Y,R30
0016bc 2fa4      	MOV  R26,R20
0016bd 940e 0c8a 	CALL _glcd_getpixel
0016bf 2fae      	MOV  R26,R30
0016c0 81ee      	LDD  R30,Y+6
0016c1 17ea      	CP   R30,R26
0016c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4D:
0016c3 85e9      	LDD  R30,Y+9
0016c4 93ea      	ST   -Y,R30
0016c5 85e9      	LDD  R30,Y+9
0016c6 93ea      	ST   -Y,R30
0016c7 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0016c8 9610      	adiw r26,0
0016c9 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0016ca ed80     +LDI R24 , LOW ( 0x7D0 )
0016cb e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0016cc 9701     +SBIW R24 , 1
0016cd f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0016ce 95a8      	wdr
0016cf 9711      	sbiw r26,1
0016d0 f7c9      	brne __delay_ms0
                 __delay_ms1:
0016d1 9508      	ret
                 
                 __ADDW2R15:
0016d2 2400      	CLR  R0
0016d3 0daf      	ADD  R26,R15
0016d4 1db0      	ADC  R27,R0
0016d5 9508      	RET
                 
                 __ANEGW1:
0016d6 95f1      	NEG  R31
0016d7 95e1      	NEG  R30
0016d8 40f0      	SBCI R31,0
0016d9 9508      	RET
                 
                 __LSLB12:
0016da 23ee      	TST  R30
0016db 2e0e      	MOV  R0,R30
0016dc 2fea      	MOV  R30,R26
0016dd f019      	BREQ __LSLB12R
                 __LSLB12L:
0016de 0fee      	LSL  R30
0016df 940a      	DEC  R0
0016e0 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
0016e1 9508      	RET
                 
                 __LSRB12:
0016e2 23ee      	TST  R30
0016e3 2e0e      	MOV  R0,R30
0016e4 2fea      	MOV  R30,R26
0016e5 f019      	BREQ __LSRB12R
                 __LSRB12L:
0016e6 95e6      	LSR  R30
0016e7 940a      	DEC  R0
0016e8 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
0016e9 9508      	RET
                 
                 __LSLW4:
0016ea 0fee      	LSL  R30
0016eb 1fff      	ROL  R31
                 __LSLW3:
0016ec 0fee      	LSL  R30
0016ed 1fff      	ROL  R31
                 __LSLW2:
0016ee 0fee      	LSL  R30
0016ef 1fff      	ROL  R31
0016f0 0fee      	LSL  R30
0016f1 1fff      	ROL  R31
0016f2 9508      	RET
                 
                 __ASRW2:
0016f3 95f5      	ASR  R31
0016f4 95e7      	ROR  R30
0016f5 95f5      	ASR  R31
0016f6 95e7      	ROR  R30
0016f7 9508      	RET
                 
                 __CWD1:
0016f8 2f6f      	MOV  R22,R31
0016f9 0f66      	ADD  R22,R22
0016fa 0b66      	SBC  R22,R22
0016fb 2f76      	MOV  R23,R22
0016fc 9508      	RET
                 
                 __MULW12U:
0016fd 9ffa      	MUL  R31,R26
0016fe 2df0      	MOV  R31,R0
0016ff 9feb      	MUL  R30,R27
001700 0df0      	ADD  R31,R0
001701 9fea      	MUL  R30,R26
001702 2de0      	MOV  R30,R0
001703 0df1      	ADD  R31,R1
001704 9508      	RET
                 
                 __DIVW21U:
001705 2400      	CLR  R0
001706 2411      	CLR  R1
001707 e190      	LDI  R25,16
                 __DIVW21U1:
001708 0faa      	LSL  R26
001709 1fbb      	ROL  R27
00170a 1c00      	ROL  R0
00170b 1c11      	ROL  R1
00170c 1a0e      	SUB  R0,R30
00170d 0a1f      	SBC  R1,R31
00170e f418      	BRCC __DIVW21U2
00170f 0e0e      	ADD  R0,R30
001710 1e1f      	ADC  R1,R31
001711 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
001712 60a1      	SBR  R26,1
                 __DIVW21U3:
001713 959a      	DEC  R25
001714 f799      	BRNE __DIVW21U1
001715 01fd      	MOVW R30,R26
001716 01d0      	MOVW R26,R0
001717 9508      	RET
                 
                 __DIVW21:
001718 d01c      	RCALL __CHKSIGNW
001719 dfeb      	RCALL __DIVW21U
00171a f40e      	BRTC __DIVW211
00171b dfba      	RCALL __ANEGW1
                 __DIVW211:
00171c 9508      	RET
                 
                 __MODW21:
00171d 94e8      	CLT
00171e ffb7      	SBRS R27,7
00171f c004      	RJMP __MODW211
001720 95a0      	COM  R26
001721 95b0      	COM  R27
001722 9611      	ADIW R26,1
001723 9468      	SET
                 __MODW211:
001724 fdf7      	SBRC R31,7
001725 dfb0      	RCALL __ANEGW1
001726 dfde      	RCALL __DIVW21U
001727 01fd      	MOVW R30,R26
001728 f40e      	BRTC __MODW212
001729 dfac      	RCALL __ANEGW1
                 __MODW212:
00172a 9508      	RET
                 
                 __MANDW12:
00172b 94e8      	CLT
00172c fff7      	SBRS R31,7
00172d c002      	RJMP __MANDW121
00172e dfa7      	RCALL __ANEGW1
00172f 9468      	SET
                 __MANDW121:
001730 23ea      	AND  R30,R26
001731 23fb      	AND  R31,R27
001732 f40e      	BRTC __MANDW122
001733 dfa2      	RCALL __ANEGW1
                 __MANDW122:
001734 9508      	RET
                 
                 __CHKSIGNW:
001735 94e8      	CLT
001736 fff7      	SBRS R31,7
001737 c002      	RJMP __CHKSW1
001738 df9d      	RCALL __ANEGW1
001739 9468      	SET
                 __CHKSW1:
00173a ffb7      	SBRS R27,7
00173b c006      	RJMP __CHKSW2
00173c 95a0      	COM  R26
00173d 95b0      	COM  R27
00173e 9611      	ADIW R26,1
00173f f800      	BLD  R0,0
001740 9403      	INC  R0
001741 fa00      	BST  R0,0
                 __CHKSW2:
001742 9508      	RET
                 
                 __GETW1P:
001743 91ed      	LD   R30,X+
001744 91fc      	LD   R31,X
001745 9711      	SBIW R26,1
001746 9508      	RET
                 
                 __GETW1PF:
001747 9005      	LPM  R0,Z+
001748 91f4      	LPM  R31,Z
001749 2de0      	MOV  R30,R0
00174a 9508      	RET
                 
                 __PUTPARD1:
00174b 937a      	ST   -Y,R23
00174c 936a      	ST   -Y,R22
00174d 93fa      	ST   -Y,R31
00174e 93ea      	ST   -Y,R30
00174f 9508      	RET
                 
                 __EEPROMRDB:
001750 99e1      	SBIC EECR,EEWE
001751 cffe      	RJMP __EEPROMRDB
001752 93ff      	PUSH R31
001753 b7ff      	IN   R31,SREG
001754 94f8      	CLI
001755 bbae      	OUT  EEARL,R26
001756 bbbf      	OUT  EEARH,R27
001757 9ae0      	SBI  EECR,EERE
001758 b3ed      	IN   R30,EEDR
001759 bfff      	OUT  SREG,R31
00175a 91ff      	POP  R31
00175b 9508      	RET
                 
                 __EEPROMWRB:
00175c 9be1      	SBIS EECR,EEWE
00175d c002      	RJMP __EEPROMWRB1
00175e 95a8      	WDR
00175f cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
001760 b79f      	IN   R25,SREG
001761 94f8      	CLI
001762 bbae      	OUT  EEARL,R26
001763 bbbf      	OUT  EEARH,R27
001764 9ae0      	SBI  EECR,EERE
001765 b38d      	IN   R24,EEDR
001766 17e8      	CP   R30,R24
001767 f019      	BREQ __EEPROMWRB0
001768 bbed      	OUT  EEDR,R30
001769 9ae2      	SBI  EECR,EEMWE
00176a 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
00176b bf9f      	OUT  SREG,R25
00176c 9508      	RET
                 
                 __CPW02:
00176d 2400      	CLR  R0
00176e 160a      	CP   R0,R26
00176f 060b      	CPC  R0,R27
001770 9508      	RET
                 
                 __SAVELOCR6:
001771 935a      	ST   -Y,R21
                 __SAVELOCR5:
001772 934a      	ST   -Y,R20
                 __SAVELOCR4:
001773 933a      	ST   -Y,R19
                 __SAVELOCR3:
001774 932a      	ST   -Y,R18
                 __SAVELOCR2:
001775 931a      	ST   -Y,R17
001776 930a      	ST   -Y,R16
001777 9508      	RET
                 
                 __LOADLOCR6:
001778 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
001779 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00177a 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00177b 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00177c 8119      	LDD  R17,Y+1
00177d 8108      	LD   R16,Y
00177e 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  63 r1 :  14 r2 :   1 r3 :   0 r4 :   4 r5 :  21 r6 :   5 r7 :   2 
r8 :   5 r9 :   4 r10:   4 r11:   4 r12:   0 r13:   5 r14:   0 r15:   6 
r16: 219 r17: 234 r18: 111 r19:  90 r20:  55 r21:  80 r22:  22 r23:   5 
r24:  21 r25:  11 r26: 741 r27: 268 r28:  50 r29:   1 r30:1538 r31: 307 
x  :  35 y  :1046 z  :  31 
Registers used: 32 out of 35 (91.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  29 add   :  58 
adiw  :  69 and   :  15 andi  :  32 asr   :   2 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  60 
brge  :  27 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  36 
brlt  :  17 brmi  :   5 brne  : 160 brpl  :   8 brsh  :  35 brtc  :   3 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  : 435 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   8 cln   :   0 
clr   :  62 cls   :   0 clt   :   3 clv   :   0 clz   :   0 com   :  12 
cp    :  71 cpc   :  68 cpi   : 189 cpse  :   0 dec   :   7 des   :   0 
eor   :   6 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 ijmp  :   0 
in    :  10 inc   :  13 jmp   :  53 ld    :  60 ldd   : 514 ldi   : 680 
lds   :  48 lpm   :  32 lsl   :  25 lsr   :  15 mov   : 195 movw  : 101 
mul   :   4 muls  :  11 mulsu :   0 neg   :   2 nop   :   2 or    :   6 
ori   :   8 out   :  62 pop   :  12 push  :  12 rcall : 113 ret   : 114 
reti  :   5 rjmp  : 335 rol   :  14 ror   :   2 sbc   :  14 sbci  :  39 
sbi   :  19 sbic  :  24 sbis  :  23 sbiw  :  43 sbr   :   1 sbrc  :   3 
sbrs  :  16 sec   :   0 seh   :   0 sei   :   6 sen   :   0 ser   :   0 
ses   :   0 set   :   4 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 404 std   : 113 sts   :  38 sub   :  31 subi  : 119 swap  :   3 
tst   :  20 wdr   :   2 
Instructions used: 76 out of 116 (65.5%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x002efe  10734   1296  12030   32768  36.7%
[.dseg] 0x000060 0x0004c6      0    614    614    2048  30.0%
[.eseg] 0x000000 0x000100      0    256    256    1024  25.0%

Assembly complete, 0 errors, 13 warnings
