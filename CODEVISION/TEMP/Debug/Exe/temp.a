;/*******************************************************
;Date    : 1/12/2021
;Author  :  Mohammad Javad Adel 9621010042
;*******************************************************/
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdlib.h>
;#include <alcd.h>
;
;int i=0;
;float temp=0.0;
;char send[10],buffer[16];
;
;#define DATA_REGISTER_EMPTY (1<<UDRE)
;#define RX_COMPLETE (1<<RXC)
;#define FRAMING_ERROR (1<<FE)
;#define PARITY_ERROR (1<<UPE)
;#define DATA_OVERRUN (1<<DOR)
;#define TX_BUFFER_SIZE 8
;char tx_buffer[TX_BUFFER_SIZE];
;#if TX_BUFFER_SIZE <= 256
;unsigned char tx_wr_index=0,tx_rd_index=0;
;#else
;unsigned int tx_wr_index=0,tx_rd_index=0;
;#endif
;#if TX_BUFFER_SIZE < 256
;unsigned char tx_counter=0;
;#else
;unsigned int tx_counter=0;
;#endif
;interrupt [USART_TXC] void usart_tx_isr(void)
; 0000 0020 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0021 if (tx_counter)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0022    {
; 0000 0023    --tx_counter;
;PCODE: $00000011 VOL: 0
; 0000 0024    UDR=tx_buffer[tx_rd_index++];
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0025 #if TX_BUFFER_SIZE != 256
; 0000 0026    if (tx_rd_index == TX_BUFFER_SIZE) tx_rd_index=0;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0027 #endif
; 0000 0028    }
;PCODE: $0000001C VOL: 0
; 0000 0029 }
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;
;#ifndef _DEBUG_TERMINAL_IO_
;#define _ALTERNATE_PUTCHAR_
;#pragma used+
;void putchar(char c)
; 0000 002F {
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0030 while (tx_counter == TX_BUFFER_SIZE);
;PCODE: $00000023 VOL: 0
;	c -> Y+0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0031 #asm("cli")
;PCODE: $0000002A VOL: 0
	cli
;PCODE: $0000002B VOL: 0
; 0000 0032 if (tx_counter || ((UCSRA & DATA_REGISTER_EMPTY)==0))
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0033    {
; 0000 0034    tx_buffer[tx_wr_index++]=c;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0035 #if TX_BUFFER_SIZE != 256
; 0000 0036    if (tx_wr_index == TX_BUFFER_SIZE) tx_wr_index=0;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0037 #endif
; 0000 0038    ++tx_counter;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0039    }
; 0000 003A else
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 003B    UDR=c;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 003C #asm("sei")
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
	sei
;PCODE: $00000045 VOL: 0
; 0000 003D }
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;#pragma used-
;#endif
;#include <stdio.h>
;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (1<<ADLAR))
;unsigned char read_adc(unsigned char adc_input)
; 0000 0043 {
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0044 ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $0000004B VOL: 0
;	adc_input -> Y+0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0045 delay_us(10);
;PCODE: $0000004F VOL: 0
; 0000 0046 ADCSRA|=(1<<ADSC);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0047 while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0048 ADCSRA|=(1<<ADIF);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0049 return ADCH;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 004A }
;PCODE: $0000005D VOL: 0
;
;void main(void)
; 0000 004D {
;PCODE: $0000005E VOL: 0
; 0000 004E 
; 0000 004F DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0050 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0051 DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0052 PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0053 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0054 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0055 TCCR0=(0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0056 TCNT0=0x00;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0057 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0058 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0059 //TCNT1H=0x00;
; 0000 005A //TCNT1L=0x00;
; 0000 005B ICR1H=0x00;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 005C ICR1L=0x00;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 005D OCR1AH=0x00;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 005E OCR1AL=0x00;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 005F OCR1BH=0x00;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0060 OCR1BL=0x00;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0061 ASSR=0<<AS2;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0062 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0063 TCNT2=0x00;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0064 OCR2=0x00;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0065 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<TOIE0);
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0066 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0067 // USART initialization
; 0000 0068 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0069 // USART Receiver: Off
; 0000 006A // USART Transmitter: On
; 0000 006B // USART Mode: Asynchronous
; 0000 006C // USART Baud Rate: 9600
; 0000 006D UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 006E UCSRB=(0<<RXCIE) | (1<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (1<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 006F UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0070 UBRRH=0x00;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0071 UBRRL=0x33;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0072 
; 0000 0073 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0074 
; 0000 0075 //GICR|=(0<<INT1) | (1<<INT0);
; 0000 0076 //MCUCR=(0<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
; 0000 0077 //GIFR=(0<<INTF1) | (1<<INTF0);
; 0000 0078 
; 0000 0079 // ADC initialization
; 0000 007A // ADC Clock frequency: 125.000 kHz
; 0000 007B // ADC Voltage Reference: AREF pin
; 0000 007C // Only the 8 most significant bits of
; 0000 007D // the AD conversion result are used
; 0000 007E ADMUX=ADC_VREF_TYPE;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 007F ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (1<<ADPS1) | (0<<ADPS0);
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0080 SFIOR=(0<<ACME);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0081 
; 0000 0082 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0083 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0084 
; 0000 0085 // Alphanumeric LCD initialization
; 0000 0086 // Connections are specified in the
; 0000 0087 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0088 // RS - PORTB Bit 0
; 0000 0089 // RD - PORTB Bit 1
; 0000 008A // EN - PORTB Bit 2
; 0000 008B // D4 - PORTB Bit 4
; 0000 008C // D5 - PORTB Bit 5
; 0000 008D // D6 - PORTB Bit 6
; 0000 008E // D7 - PORTB Bit 7
; 0000 008F // Characters/line: 8
; 0000 0090 lcd_init(16);
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0091 
; 0000 0092 #asm("sei")
;PCODE: $000000A3 VOL: 0
	sei
;PCODE: $000000A4 VOL: 0
; 0000 0093 lcd_clear();
;PCODE: $000000A5 VOL: 0
; 0000 0094 lcd_gotoxy(0,0);
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 0095 lcd_puts("    WELCOME!    ");
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0096 delay_ms(125);
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0097 lcd_clear();
;PCODE: $000000B0 VOL: 0
; 0000 0098 delay_ms(20);
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 0099 lcd_gotoxy(0,0);
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 009A lcd_puts("TEMPRATURE  NOW:");
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 009B delay_ms(300);
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 009C while (1)
;PCODE: $000000BD VOL: 0
; 0000 009D       {
; 0000 009E         temp = read_adc(0);
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 009F         lcd_gotoxy(0,1);
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 00A0         sprintf(buffer,"   -->%-5.2f<--",temp/4);
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 00A1         lcd_puts(buffer);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 00A2         sprintf(send,"zZ%05.2f CXx",temp/4);
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 00A3         for(i=0;i<10;i++)
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 00A4         {
; 0000 00A5                 putchar(send[i]);
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 00A6         }
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 00A7         delay_ms(125);
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 00A8 
; 0000 00A9 
; 0000 00AA 
; 0000 00AB       }
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 00AC }
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0

	.DSEG
_0x10:
	.BYTE 0x22
;
